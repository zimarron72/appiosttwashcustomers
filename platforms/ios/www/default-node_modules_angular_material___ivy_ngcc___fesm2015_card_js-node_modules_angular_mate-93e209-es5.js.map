{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js"],"names":["listenerOptions","normalizePassiveListenerOptions","passive","AutofillMonitor","_platform","_ngZone","_monitoredElements","Map","elementOrRef","isBrowser","EMPTY","element","coerceElement","info","get","subject","result","Subject","cssClass","listener","event","animationName","classList","contains","add","run","next","target","isAutofilled","remove","runOutsideAngular","addEventListener","set","unlisten","removeEventListener","complete","forEach","_info","stopMonitoring","ɵfac","AutofillMonitor_Factory","t","ɵprov","factory","token","providedIn","ctorParameters","type","Platform","NgZone","ngDevMode","Injectable","args","CdkAutofill","_elementRef","_autofillMonitor","cdkAutofill","EventEmitter","monitor","subscribe","emit","CdkAutofill_Factory","ɵdir","selectors","outputs","ElementRef","propDecorators","Output","Directive","selector","CdkTextareaAutosize","document","_destroyed","_enabled","_previousMinRows","_isViewInited","_handleFocusEvent","_hasFocus","_document","_textareaElement","nativeElement","_minRows","value","coerceNumberProperty","_setMinHeight","_maxRows","_setMaxHeight","coerceBooleanProperty","resizeToFitContent","reset","placeholder","_cachedPlaceholderHeight","undefined","_cacheTextareaPlaceholderHeight","minHeight","minRows","_cachedLineHeight","style","maxHeight","maxRows","_initialHeight","height","window","_getWindow","fromEvent","pipe","auditTime","takeUntil","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","parentNode","appendChild","clientHeight","removeChild","previousMargin","marginBottom","isFirefox","FIREFOX","needsMarginFiller","measuringClass","scrollHeight","_measureScrollHeight","force","_cacheTextareaLineHeight","textarea","_previousValue","Math","max","requestAnimationFrame","_scrollToCaretPosition","setTimeout","doc","_getDocument","defaultView","selectionStart","selectionEnd","isStopped","setSelectionRange","CdkTextareaAutosize_Factory","DOCUMENT","hostAttrs","hostBindings","CdkTextareaAutosize_HostBindings","rf","ctx","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","inputs","enabled","exportAs","decorators","Optional","Inject","Input","HostListener","host","TextFieldModule","TextFieldModule_Factory","ɵmod","ɵinj","imports","PlatformModule","NgModule","declarations","exports","ngJitMode","_c0","_c1","_c2","_c3","_c4","_c5","MatCardContent","MatCardContent_Factory","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","hostVars","MatCardActions_HostBindings","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","_animationMode","MatCard_Factory","ANIMATION_MODULE_TYPE","ɵcmp","MatCard_HostBindings","ngContentSelectors","decls","vars","template","MatCard_Template","styles","encapsulation","changeDetection","String","Component","ViewEncapsulation","ChangeDetectionStrategy","MatCardHeader","MatCardHeader_Factory","consts","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","MatCardModule_Factory","MatCommonModule","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r10","_control","MatFormField_label_9_ng_content_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r13","updateOutlineGap","ctx_r4","empty","_shouldAlwaysFloat","color","appearance","_labelId","_hasLabel","id","hideRequiredMarker","required","disabled","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","nextUniqueId$2","MAT_ERROR","InjectionToken","MatError","ariaLive","elementRef","setAttribute","MatError_Factory","MatError_HostBindings","features","provide","useExisting","Attribute","providers","matFormFieldAnimations","transitionMessages","trigger","state","opacity","transform","transition","animate","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","Error","getMatFormFieldDuplicatedHintError","getMatFormFieldMissingControlError","nextUniqueId$1","_MAT_HINT","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MAT_PREFIX","MatPrefix","MatPrefix_Factory","MAT_SUFFIX","MatSuffix","MatSuffix_Factory","nextUniqueId","floatingLabelScale","outlineGapPadding","_MatFormFieldBase","mixinColor","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_changeDetectorRef","_labelOptions","_dir","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_appearance","oldValue","_processHints","_floatLabel","markForCheck","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_hasFloatingLabel","_connectionContainerRef","_validateControlChild","control","controlType","stateChanges","startWith","_validatePlaceholders","_syncDescribedByIds","ngControl","valueChanges","onStable","merge","_prefixChildren","changes","_suffixChildren","_hintChildren","_errorChildren","change","detectChanges","prop","_placeholderChild","_labelChildNonStatic","_labelChildStatic","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","length","errorState","_label","take","_validateHints","startHint","endHint","hint","ids","userAriaDescribedBy","push","split","_getDisplayedMessages","find","map","error","setDescribedByIds","labelEl","children","textContent","trim","_isAttachedToDOM","startWidth","gapWidth","container","startEls","querySelectorAll","gapEls","containerRect","getBoundingClientRect","width","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","i","offsetWidth","abs","rect","right","left","getRootNode","rootNode","documentElement","MatFormField_Factory","contentQueries","MatFormField_ContentQueries","dirIndex","_t","first","viewQuery","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","$event","onContainerClick","directives","data","animation","ChangeDetectorRef","Directionality","ViewChild","ContentChild","ContentChildren","descendants","animations","MatFormFieldModule","MatFormFieldModule_Factory","CommonModule","ObserversModule","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","options","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_resolvers","_defaultFontSetClass","addSvgIconInNamespace","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","resolver","cleanLiteral","sanitize","SecurityContext","addSvgIconSetInNamespace","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","alias","className","safeUrl","cachedIcon","of","cloneSvg","_loadSvgIconFromConfig","tap","svg","name","key","iconKey","config","_getSvgFromConfig","_getIconConfigFromResolvers","iconSetConfigs","_getSvgFromIconSetConfigs","throwError","clear","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","filter","iconSetConfig","_loadSvgIconSetFromConfig","catchError","err","errorMessage","message","handleError","forkJoin","foundIcon","indexOf","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","querySelector","iconElement","removeAttribute","nodeName","toLowerCase","_setSvgAttributes","_toSvgElement","_svgElementFromString","str","div","createElement","innerHTML","attributes","childNodes","nodeType","ELEMENT_NODE","viewBox","iconConfig","_a","withCredentials","inProgressFetch","req","responseType","finalize","share","configNamespace","svgElement","isSafeUrlWithOptions","MatIconRegistry_Factory","HttpClient","DomSanitizer","ErrorHandler","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","deps","SkipSelf","useFactory","_MatIconBase","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","inject","_location","location","getPathname","pathname","search","funcIriAttributes","ɵ0","attr","funcIriAttributeSelector","join","funcIriPattern","MatIcon","_iconRegistry","ariaHidden","_inline","_currentIconFetch","Subscription","inline","_svgIcon","_updateSvgIcon","_clearSvgElement","_fontSet","newValue","_cleanupFontValue","_updateFontIconClasses","_fontIcon","parts","cachedElements","_elementsWithExternalReferences","size","newPath","_previousPath","_prependPathToReferences","unsubscribe","svgIcon","styleTags","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","child","_usingFontIcon","elem","fontSetClass","fontSet","classNameForFontAlias","getDefaultFontSetClass","_previousFontSetClass","fontIcon","_previousFontIconClass","elements","attrs","elementsWithFuncIri","elementWithReference","getAttribute","match","rawName","_svgNamespace","_svgName","_splitIconName","getNamedSvgIcon","_setSvgElement","MatIcon_Factory","MatIcon_HostBindings","MatIcon_Template","MatIconModule","MatIconModule_Factory","MatTextareaAutosize","ɵMatTextareaAutosize_BaseFactory","MatTextareaAutosize_Factory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","_MatInputBase","mixinErrorState","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","MatInput","inputValueAccessor","ngZone","_formField","_uid","_disabled","_required","_type","_readonly","_neverEmptyInputTypes","getSupportedInputTypes","has","_inputValueAccessor","_previousNativeValue","IOS","el","_isServer","_isNativeSelect","_isTextarea","_isInFormField","multiple","_id","_validateType","updateErrorState","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","focus","isFocused","_b","call","_previousPlaceholder","validity","badInput","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","label","MatInput_Factory","MatInput_HostBindings","MatInput_focus_HostBindingHandler","_focusChanged","MatInput_blur_HostBindingHandler","MatInput_input_HostBindingHandler","_onInput","readonly","_isInlineSelect","errorStateMatcher","NgControl","Self","NgForm","FormGroupDirective","ErrorStateMatcher","MatInputModule","MatInputModule_Factory"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AAGA,UAAMA,eAAe,GAAG,uDAAAC,+BAAA,EAAgC;AAAEC,eAAO,EAAE;AAAX,OAAhC,CAAxB;AACA;AACA;AACA;AACA;AACA;;UACMC,gB;AACF,kCAAYC,SAAZ,EAAuBC,OAAvB,EAAgC;AAAA;;AAC5B,eAAKD,SAAL,GAAiBA,SAAjB;AACA,eAAKC,OAAL,GAAeA,OAAf;AACA,eAAKC,kBAAL,GAA0B,IAAIC,GAAJ,EAA1B;AACH;;;;iBACD,iBAAQC,YAAR,EAAsB;AAAA;;AAClB,gBAAI,CAAC,KAAKJ,SAAL,CAAeK,SAApB,EAA+B;AAC3B,qBAAO,kCAAAC,KAAP;AACH;;AACD,gBAAMC,OAAO,GAAG,uDAAAC,aAAA,EAAcJ,YAAd,CAAhB;;AACA,gBAAMK,IAAI,GAAG,KAAKP,kBAAL,CAAwBQ,GAAxB,CAA4BH,OAA5B,CAAb;;AACA,gBAAIE,IAAJ,EAAU;AACN,qBAAOA,IAAI,CAACE,OAAZ;AACH;;AACD,gBAAMC,MAAM,GAAG,IAAI,kCAAAC,OAAJ,EAAf;AACA,gBAAMC,QAAQ,GAAG,2BAAjB;;AACA,gBAAMC,QAAQ,GAAI,SAAZA,QAAY,CAACC,KAAD,EAAW;AACzB;AACA;AACA;AACA,kBAAIA,KAAK,CAACC,aAAN,KAAwB,+BAAxB,IACA,CAACV,OAAO,CAACW,SAAR,CAAkBC,QAAlB,CAA2BL,QAA3B,CADL,EAC2C;AACvCP,uBAAO,CAACW,SAAR,CAAkBE,GAAlB,CAAsBN,QAAtB;;AACA,qBAAI,CAACb,OAAL,CAAaoB,GAAb,CAAiB;AAAA,yBAAMT,MAAM,CAACU,IAAP,CAAY;AAAEC,0BAAM,EAAEP,KAAK,CAACO,MAAhB;AAAwBC,gCAAY,EAAE;AAAtC,mBAAZ,CAAN;AAAA,iBAAjB;AACH,eAJD,MAKK,IAAIR,KAAK,CAACC,aAAN,KAAwB,6BAAxB,IACLV,OAAO,CAACW,SAAR,CAAkBC,QAAlB,CAA2BL,QAA3B,CADC,EACqC;AACtCP,uBAAO,CAACW,SAAR,CAAkBO,MAAlB,CAAyBX,QAAzB;;AACA,qBAAI,CAACb,OAAL,CAAaoB,GAAb,CAAiB;AAAA,yBAAMT,MAAM,CAACU,IAAP,CAAY;AAAEC,0BAAM,EAAEP,KAAK,CAACO,MAAhB;AAAwBC,gCAAY,EAAE;AAAtC,mBAAZ,CAAN;AAAA,iBAAjB;AACH;AACJ,aAdD;;AAeA,iBAAKvB,OAAL,CAAayB,iBAAb,CAA+B,YAAM;AACjCnB,qBAAO,CAACoB,gBAAR,CAAyB,gBAAzB,EAA2CZ,QAA3C,EAAqDnB,eAArD;AACAW,qBAAO,CAACW,SAAR,CAAkBE,GAAlB,CAAsB,mCAAtB;AACH,aAHD;;AAIA,iBAAKlB,kBAAL,CAAwB0B,GAAxB,CAA4BrB,OAA5B,EAAqC;AACjCI,qBAAO,EAAEC,MADwB;AAEjCiB,sBAAQ,EAAE,oBAAM;AACZtB,uBAAO,CAACuB,mBAAR,CAA4B,gBAA5B,EAA8Cf,QAA9C,EAAwDnB,eAAxD;AACH;AAJgC,aAArC;;AAMA,mBAAOgB,MAAP;AACH;;;iBACD,wBAAeR,YAAf,EAA6B;AACzB,gBAAMG,OAAO,GAAG,uDAAAC,aAAA,EAAcJ,YAAd,CAAhB;;AACA,gBAAMK,IAAI,GAAG,KAAKP,kBAAL,CAAwBQ,GAAxB,CAA4BH,OAA5B,CAAb;;AACA,gBAAIE,IAAJ,EAAU;AACNA,kBAAI,CAACoB,QAAL;AACApB,kBAAI,CAACE,OAAL,CAAaoB,QAAb;AACAxB,qBAAO,CAACW,SAAR,CAAkBO,MAAlB,CAAyB,mCAAzB;AACAlB,qBAAO,CAACW,SAAR,CAAkBO,MAAlB,CAAyB,2BAAzB;;AACA,mBAAKvB,kBAAL,WAA+BK,OAA/B;AACH;AACJ;;;iBACD,uBAAc;AAAA;;AACV,iBAAKL,kBAAL,CAAwB8B,OAAxB,CAAgC,UAACC,KAAD,EAAQ1B,OAAR;AAAA,qBAAoB,MAAI,CAAC2B,cAAL,CAAoB3B,OAApB,CAApB;AAAA,aAAhC;AACH;;;;;;AAELR,sBAAe,CAACoC,IAAhB,GAAuB,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAItC,gBAAV,EAA2B,uDAAgB,2DAAhB,CAA3B,EAA6D,uDAAgB,iDAAhB,CAA7D,CAAP;AAAsG,OAAnK;;AACAA,sBAAe,CAACuC,KAAhB,GAAwB,iEAAsB;AAAEC,eAAO,EAAE,SAASH,uBAAT,GAAmC;AAAE,iBAAO,IAAIrC,gBAAJ,CAAoB,uDAAY,2DAAZ,CAApB,EAA8C,uDAAY,iDAAZ,CAA9C,CAAP;AAA+E,SAA/H;AAAiIyC,aAAK,EAAEzC,gBAAxI;AAAyJ0C,kBAAU,EAAE;AAArK,OAAtB,CAAxB;;AACA1C,sBAAe,CAAC2C,cAAhB,GAAiC;AAAA,eAAM,CACnC;AAAEC,cAAI,EAAE,mDAAAC;AAAR,SADmC,EAEnC;AAAED,cAAI,EAAE,2CAAAE;AAAR,SAFmC,CAAN;AAAA,OAAjC;;AAIA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB/C,gBAAzB,EAA0C,CAAC;AACrG4C,cAAI,EAAE,2CAAAI,UAD+F;AAErGC,cAAI,EAAE,CAAC;AAAEP,sBAAU,EAAE;AAAd,WAAD;AAF+F,SAAD,CAA1C,EAG1D,YAAY;AAAE,iBAAO,CAAC;AAAEE,gBAAI,EAAE;AAAR,WAAD,EAA4B;AAAEA,gBAAI,EAAE;AAAR,WAA5B,CAAP;AAA8D,SAHlB,EAGoB,IAHpB,CAAnD;AAG+E,OAH9F;AAIA;;;UACMM,Y;AACF,8BAAYC,WAAZ,EAAyBC,gBAAzB,EAA2C;AAAA;;AACvC,eAAKD,WAAL,GAAmBA,WAAnB;AACA,eAAKC,gBAAL,GAAwBA,gBAAxB;AACA;;AACA,eAAKC,WAAL,GAAmB,IAAI,2CAAAC,YAAJ,EAAnB;AACH;;;;iBACD,oBAAW;AAAA;;AACP,iBAAKF,gBAAL,CACKG,OADL,CACa,KAAKJ,WADlB,EAEKK,SAFL,CAEe,UAAAvC,KAAK;AAAA,qBAAI,MAAI,CAACoC,WAAL,CAAiBI,IAAjB,CAAsBxC,KAAtB,CAAJ;AAAA,aAFpB;AAGH;;;iBACD,uBAAc;AACV,iBAAKmC,gBAAL,CAAsBjB,cAAtB,CAAqC,KAAKgB,WAA1C;AACH;;;;;;AAELD,kBAAW,CAACd,IAAZ,GAAmB,SAASsB,mBAAT,CAA6BpB,CAA7B,EAAgC;AAAE,eAAO,KAAKA,CAAC,IAAIY,YAAV,EAAuB,gEAAyB,qDAAzB,CAAvB,EAAoE,gEAAyBlD,gBAAzB,CAApE,CAAP;AAAwH,OAA7K;;AACAkD,kBAAW,CAACS,IAAZ,GAAmB,aAAc,gEAAyB;AAAEf,YAAI,EAAEM,YAAR;AAAqBU,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,aAAL,EAAoB,EAApB,CAAD,CAAhC;AAA2DC,eAAO,EAAE;AAAER,qBAAW,EAAE;AAAf;AAApE,OAAzB,CAAjC;;AACAH,kBAAW,CAACP,cAAZ,GAA6B;AAAA,eAAM,CAC/B;AAAEC,cAAI,EAAE,2CAAAkB;AAAR,SAD+B,EAE/B;AAAElB,cAAI,EAAE5C;AAAR,SAF+B,CAAN;AAAA,OAA7B;;AAIAkD,kBAAW,CAACa,cAAZ,GAA6B;AACzBV,mBAAW,EAAE,CAAC;AAAET,cAAI,EAAE,2CAAAoB;AAAR,SAAD;AADY,OAA7B;;AAGA,OAAC,YAAY;AAAE,SAAC,OAAOjB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBG,YAAzB,EAAsC,CAAC;AACjGN,cAAI,EAAE,2CAAAqB,SAD2F;AAEjGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE;AADX,WAAD;AAF2F,SAAD,CAAtC,EAK1D,YAAY;AAAE,iBAAO,CAAC;AAAEtB,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE5C;AAAR,WAA9B,CAAP;AAAkE,SALtB,EAKwB;AAAEqD,qBAAW,EAAE,CAAC;AAC9FT,gBAAI,EAAE,2CAAAoB;AADwF,WAAD;AAAf,SALxB,CAAnD;AAOC,OAPhB;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;UACMG,oB;AACF,sCAAYhB,WAAZ,EAAyBlD,SAAzB,EAAoCC,OAApC;AACA;AACAkE,gBAFA,EAEU;AAAA;;AAAA;;AACN,eAAKjB,WAAL,GAAmBA,WAAnB;AACA,eAAKlD,SAAL,GAAiBA,SAAjB;AACA,eAAKC,OAAL,GAAeA,OAAf;AACA,eAAKmE,UAAL,GAAkB,IAAI,kCAAAvD,OAAJ,EAAlB;AACA,eAAKwD,QAAL,GAAgB,IAAhB;AACA;AACR;AACA;AACA;AACA;;AACQ,eAAKC,gBAAL,GAAwB,CAAC,CAAzB;AACA,eAAKC,aAAL,GAAqB,KAArB;AACA;;AACA,eAAKC,iBAAL,GAAyB,UAACxD,KAAD,EAAW;AAChC,kBAAI,CAACyD,SAAL,GAAiBzD,KAAK,CAAC2B,IAAN,KAAe,OAAhC;AACH,WAFD;;AAGA,eAAK+B,SAAL,GAAiBP,QAAjB;AACA,eAAKQ,gBAAL,GAAwB,KAAKzB,WAAL,CAAiB0B,aAAzC;AACH;AACD;;;;;eACA,eAAc;AAAE,mBAAO,KAAKC,QAAZ;AAAuB,W;eACvC,aAAYC,KAAZ,EAAmB;AACf,iBAAKD,QAAL,GAAgB,uDAAAE,oBAAA,EAAqBD,KAArB,CAAhB;;AACA,iBAAKE,aAAL;AACH;AACD;;;;eACA,eAAc;AAAE,mBAAO,KAAKC,QAAZ;AAAuB,W;eACvC,aAAYH,KAAZ,EAAmB;AACf,iBAAKG,QAAL,GAAgB,uDAAAF,oBAAA,EAAqBD,KAArB,CAAhB;;AACA,iBAAKI,aAAL;AACH;AACD;;;;eACA,eAAc;AAAE,mBAAO,KAAKb,QAAZ;AAAuB,W;eACvC,aAAYS,KAAZ,EAAmB;AACfA,iBAAK,GAAG,uDAAAK,qBAAA,EAAsBL,KAAtB,CAAR,CADe,CAEf;AACA;;AACA,gBAAI,KAAKT,QAAL,KAAkBS,KAAtB,EAA6B;AACzB,eAAC,KAAKT,QAAL,GAAgBS,KAAjB,IAA0B,KAAKM,kBAAL,CAAwB,IAAxB,CAA1B,GAA0D,KAAKC,KAAL,EAA1D;AACH;AACJ;;;eACD,eAAkB;AAAE,mBAAO,KAAKV,gBAAL,CAAsBW,WAA7B;AAA2C,W;eAC/D,aAAgBR,KAAhB,EAAuB;AACnB,iBAAKS,wBAAL,GAAgCC,SAAhC;AACA,iBAAKb,gBAAL,CAAsBW,WAAtB,GAAoCR,KAApC;;AACA,iBAAKW,+BAAL;AACH;AACD;;;;iBACA,yBAAgB;AACZ,gBAAMC,SAAS,GAAG,KAAKC,OAAL,IAAgB,KAAKC,iBAArB,aACX,KAAKD,OAAL,GAAe,KAAKC,iBADT,UACiC,IADnD;;AAEA,gBAAIF,SAAJ,EAAe;AACX,mBAAKf,gBAAL,CAAsBkB,KAAtB,CAA4BH,SAA5B,GAAwCA,SAAxC;AACH;AACJ;AACD;;;;iBACA,yBAAgB;AACZ,gBAAMI,SAAS,GAAG,KAAKC,OAAL,IAAgB,KAAKH,iBAArB,aACX,KAAKG,OAAL,GAAe,KAAKH,iBADT,UACiC,IADnD;;AAEA,gBAAIE,SAAJ,EAAe;AACX,mBAAKnB,gBAAL,CAAsBkB,KAAtB,CAA4BC,SAA5B,GAAwCA,SAAxC;AACH;AACJ;;;iBACD,2BAAkB;AAAA;;AACd,gBAAI,KAAK9F,SAAL,CAAeK,SAAnB,EAA8B;AAC1B;AACA,mBAAK2F,cAAL,GAAsB,KAAKrB,gBAAL,CAAsBkB,KAAtB,CAA4BI,MAAlD;AACA,mBAAKb,kBAAL;;AACA,mBAAKnF,OAAL,CAAayB,iBAAb,CAA+B,YAAM;AACjC,oBAAMwE,MAAM,GAAG,MAAI,CAACC,UAAL,EAAf;;AACA,sDAAAC,SAAA,EAAUF,MAAV,EAAkB,QAAlB,EACKG,IADL,CACU,gDAAAC,SAAA,EAAU,EAAV,CADV,EACyB,gDAAAC,SAAA,EAAU,MAAI,CAACnC,UAAf,CADzB,EAEKb,SAFL,CAEe;AAAA,yBAAM,MAAI,CAAC6B,kBAAL,CAAwB,IAAxB,CAAN;AAAA,iBAFf;;AAGA,sBAAI,CAACT,gBAAL,CAAsBhD,gBAAtB,CAAuC,OAAvC,EAAgD,MAAI,CAAC6C,iBAArD;;AACA,sBAAI,CAACG,gBAAL,CAAsBhD,gBAAtB,CAAuC,MAAvC,EAA+C,MAAI,CAAC6C,iBAApD;AACH,eAPD;;AAQA,mBAAKD,aAAL,GAAqB,IAArB;AACA,mBAAKa,kBAAL,CAAwB,IAAxB;AACH;AACJ;;;iBACD,uBAAc;AACV,iBAAKT,gBAAL,CAAsB7C,mBAAtB,CAA0C,OAA1C,EAAmD,KAAK0C,iBAAxD;;AACA,iBAAKG,gBAAL,CAAsB7C,mBAAtB,CAA0C,MAA1C,EAAkD,KAAK0C,iBAAvD;;AACA,iBAAKJ,UAAL,CAAgB9C,IAAhB;;AACA,iBAAK8C,UAAL,CAAgBrC,QAAhB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,oCAA2B;AACvB,gBAAI,KAAK6D,iBAAT,EAA4B;AACxB;AACH,aAHsB,CAIvB;;;AACA,gBAAIY,aAAa,GAAG,KAAK7B,gBAAL,CAAsB8B,SAAtB,CAAgC,KAAhC,CAApB;;AACAD,yBAAa,CAACE,IAAd,GAAqB,CAArB,CANuB,CAOvB;AACA;AACA;;AACAF,yBAAa,CAACX,KAAd,CAAoBc,QAApB,GAA+B,UAA/B;AACAH,yBAAa,CAACX,KAAd,CAAoBe,UAApB,GAAiC,QAAjC;AACAJ,yBAAa,CAACX,KAAd,CAAoBgB,MAApB,GAA6B,MAA7B;AACAL,yBAAa,CAACX,KAAd,CAAoBiB,OAApB,GAA8B,GAA9B;AACAN,yBAAa,CAACX,KAAd,CAAoBI,MAApB,GAA6B,EAA7B;AACAO,yBAAa,CAACX,KAAd,CAAoBH,SAApB,GAAgC,EAAhC;AACAc,yBAAa,CAACX,KAAd,CAAoBC,SAApB,GAAgC,EAAhC,CAhBuB,CAiBvB;AACA;AACA;AACA;AACA;;AACAU,yBAAa,CAACX,KAAd,CAAoBkB,QAApB,GAA+B,QAA/B;;AACA,iBAAKpC,gBAAL,CAAsBqC,UAAtB,CAAiCC,WAAjC,CAA6CT,aAA7C;;AACA,iBAAKZ,iBAAL,GAAyBY,aAAa,CAACU,YAAvC;;AACA,iBAAKvC,gBAAL,CAAsBqC,UAAtB,CAAiCG,WAAjC,CAA6CX,aAA7C,EAzBuB,CA0BvB;;;AACA,iBAAKxB,aAAL;;AACA,iBAAKE,aAAL;AACH;;;iBACD,gCAAuB;AACnB,gBAAM3E,OAAO,GAAG,KAAKoE,gBAArB;AACA,gBAAMyC,cAAc,GAAG7G,OAAO,CAACsF,KAAR,CAAcwB,YAAd,IAA8B,EAArD;AACA,gBAAMC,SAAS,GAAG,KAAKtH,SAAL,CAAeuH,OAAjC;AACA,gBAAMC,iBAAiB,GAAGF,SAAS,IAAI,KAAK7C,SAA5C;AACA,gBAAMgD,cAAc,GAAGH,SAAS,GAC5B,yCAD4B,GAE5B,iCAFJ,CALmB,CAQnB;AACA;AACA;;AACA,gBAAIE,iBAAJ,EAAuB;AACnBjH,qBAAO,CAACsF,KAAR,CAAcwB,YAAd,aAAgC9G,OAAO,CAAC2G,YAAxC;AACH,aAbkB,CAcnB;AACA;;;AACA3G,mBAAO,CAACW,SAAR,CAAkBE,GAAlB,CAAsBqG,cAAtB,EAhBmB,CAiBnB;AACA;;AACA,gBAAMC,YAAY,GAAGnH,OAAO,CAACmH,YAAR,GAAuB,CAA5C;AACAnH,mBAAO,CAACW,SAAR,CAAkBO,MAAlB,CAAyBgG,cAAzB;;AACA,gBAAID,iBAAJ,EAAuB;AACnBjH,qBAAO,CAACsF,KAAR,CAAcwB,YAAd,GAA6BD,cAA7B;AACH;;AACD,mBAAOM,YAAP;AACH;;;iBACD,2CAAkC;AAC9B,gBAAI,CAAC,KAAKnD,aAAN,IAAuB,KAAKgB,wBAAL,IAAiCC,SAA5D,EAAuE;AACnE;AACH;;AACD,gBAAI,CAAC,KAAKF,WAAV,EAAuB;AACnB,mBAAKC,wBAAL,GAAgC,CAAhC;AACA;AACH;;AACD,gBAAMT,KAAK,GAAG,KAAKH,gBAAL,CAAsBG,KAApC;AACA,iBAAKH,gBAAL,CAAsBG,KAAtB,GAA8B,KAAKH,gBAAL,CAAsBW,WAApD;AACA,iBAAKC,wBAAL,GAAgC,KAAKoC,oBAAL,EAAhC;AACA,iBAAKhD,gBAAL,CAAsBG,KAAtB,GAA8BA,KAA9B;AACH;;;iBACD,qBAAY;AACR,gBAAI,KAAK9E,SAAL,CAAeK,SAAnB,EAA8B;AAC1B,mBAAK+E,kBAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,8BAAkC;AAAA;;AAAA,gBAAfwC,KAAe,uEAAP,KAAO;;AAC9B;AACA,gBAAI,CAAC,KAAKvD,QAAV,EAAoB;AAChB;AACH;;AACD,iBAAKwD,wBAAL;;AACA,iBAAKpC,+BAAL,GAN8B,CAO9B;AACA;;;AACA,gBAAI,CAAC,KAAKG,iBAAV,EAA6B;AACzB;AACH;;AACD,gBAAMkC,QAAQ,GAAG,KAAK5E,WAAL,CAAiB0B,aAAlC;AACA,gBAAME,KAAK,GAAGgD,QAAQ,CAAChD,KAAvB,CAb8B,CAc9B;;AACA,gBAAI,CAAC8C,KAAD,IAAU,KAAK/C,QAAL,KAAkB,KAAKP,gBAAjC,IAAqDQ,KAAK,KAAK,KAAKiD,cAAxE,EAAwF;AACpF;AACH;;AACD,gBAAML,YAAY,GAAG,KAAKC,oBAAL,EAArB;;AACA,gBAAM1B,MAAM,GAAG+B,IAAI,CAACC,GAAL,CAASP,YAAT,EAAuB,KAAKnC,wBAAL,IAAiC,CAAxD,CAAf,CAnB8B,CAoB9B;;AACAuC,oBAAQ,CAACjC,KAAT,CAAeI,MAAf,aAA2BA,MAA3B;;AACA,iBAAKhG,OAAL,CAAayB,iBAAb,CAA+B,YAAM;AACjC,kBAAI,OAAOwG,qBAAP,KAAiC,WAArC,EAAkD;AAC9CA,qCAAqB,CAAC;AAAA,yBAAM,MAAI,CAACC,sBAAL,CAA4BL,QAA5B,CAAN;AAAA,iBAAD,CAArB;AACH,eAFD,MAGK;AACDM,0BAAU,CAAC;AAAA,yBAAM,MAAI,CAACD,sBAAL,CAA4BL,QAA5B,CAAN;AAAA,iBAAD,CAAV;AACH;AACJ,aAPD;;AAQA,iBAAKC,cAAL,GAAsBjD,KAAtB;AACA,iBAAKR,gBAAL,GAAwB,KAAKO,QAA7B;AACH;AACD;AACJ;AACA;;;;iBACI,iBAAQ;AACJ;AACA;AACA,gBAAI,KAAKmB,cAAL,KAAwBR,SAA5B,EAAuC;AACnC,mBAAKb,gBAAL,CAAsBkB,KAAtB,CAA4BI,MAA5B,GAAqC,KAAKD,cAA1C;AACH;AACJ,W,CACD;AACA;AACA;AACA;;;;iBACA,6BAAoB,CAChB;AACH;AACD;;;;iBACA,wBAAe;AACX,mBAAO,KAAKtB,SAAL,IAAkBP,QAAzB;AACH;AACD;;;;iBACA,sBAAa;AACT,gBAAMkE,GAAG,GAAG,KAAKC,YAAL,EAAZ;;AACA,mBAAOD,GAAG,CAACE,WAAJ,IAAmBrC,MAA1B;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,gCAAuB4B,QAAvB,EAAiC;AAC7B,gBAAQU,cAAR,GAAyCV,QAAzC,CAAQU,cAAR;AAAA,gBAAwBC,YAAxB,GAAyCX,QAAzC,CAAwBW,YAAxB,CAD6B,CAE7B;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAI,CAAC,KAAKrE,UAAL,CAAgBsE,SAAjB,IAA8B,KAAKjE,SAAvC,EAAkD;AAC9CqD,sBAAQ,CAACa,iBAAT,CAA2BH,cAA3B,EAA2CC,YAA3C;AACH;AACJ;;;;;;AAELvE,0BAAmB,CAAC/B,IAApB,GAA2B,SAASyG,2BAAT,CAAqCvG,CAArC,EAAwC;AAAE,eAAO,KAAKA,CAAC,IAAI6B,oBAAV,EAA+B,gEAAyB,qDAAzB,CAA/B,EAA4E,gEAAyB,2DAAzB,CAA5E,EAAuH,gEAAyB,iDAAzB,CAAvH,EAAgK,gEAAyB,6CAAA2E,QAAzB,EAAmC,CAAnC,CAAhK,CAAP;AAAgN,OAArR;;AACA3E,0BAAmB,CAACR,IAApB,GAA2B,aAAc,gEAAyB;AAAEf,YAAI,EAAEuB,oBAAR;AAA6BP,iBAAS,EAAE,CAAC,CAAC,UAAD,EAAa,qBAAb,EAAoC,EAApC,CAAD,CAAxC;AAAmFmF,iBAAS,EAAE,CAAC,MAAD,EAAS,GAAT,EAAc,CAAd,EAAiB,uBAAjB,CAA9F;AAAyIC,oBAAY,EAAE,SAASC,gCAAT,CAA0CC,EAA1C,EAA8CC,GAA9C,EAAmD;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAClR,qEAAkB,OAAlB,EAA2B,SAASE,4CAAT,GAAwD;AAAE,qBAAOD,GAAG,CAACE,iBAAJ,EAAP;AAAiC,aAAtH;AACH;AAAE,SAF2D;AAEzDC,cAAM,EAAE;AAAE1D,iBAAO,EAAE,CAAC,oBAAD,EAAuB,SAAvB,CAAX;AAA8CI,iBAAO,EAAE,CAAC,oBAAD,EAAuB,SAAvB,CAAvD;AAA0FuD,iBAAO,EAAE,CAAC,qBAAD,EAAwB,SAAxB,CAAnG;AAAuIhE,qBAAW,EAAE;AAApJ,SAFiD;AAEoHiE,gBAAQ,EAAE,CAAC,qBAAD;AAF9H,OAAzB,CAAzC;;AAGArF,0BAAmB,CAACxB,cAApB,GAAqC;AAAA,eAAM,CACvC;AAAEC,cAAI,EAAE,2CAAAkB;AAAR,SADuC,EAEvC;AAAElB,cAAI,EAAE,mDAAAC;AAAR,SAFuC,EAGvC;AAAED,cAAI,EAAE,2CAAAE;AAAR,SAHuC,EAIvC;AAAEF,cAAI,EAAE6C,SAAR;AAAmBgE,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAA8G;AAAR,WAAD,EAAqB;AAAE9G,gBAAI,EAAE,2CAAA+G,MAAR;AAAgB1G,gBAAI,EAAE,CAAC,6CAAA6F,QAAD;AAAtB,WAArB;AAA/B,SAJuC,CAAN;AAAA,OAArC;;AAMA3E,0BAAmB,CAACJ,cAApB,GAAqC;AACjC6B,eAAO,EAAE,CAAC;AAAEhD,cAAI,EAAE,2CAAAgH,KAAR;AAAe3G,cAAI,EAAE,CAAC,oBAAD;AAArB,SAAD,CADwB;AAEjC+C,eAAO,EAAE,CAAC;AAAEpD,cAAI,EAAE,2CAAAgH,KAAR;AAAe3G,cAAI,EAAE,CAAC,oBAAD;AAArB,SAAD,CAFwB;AAGjCsG,eAAO,EAAE,CAAC;AAAE3G,cAAI,EAAE,2CAAAgH,KAAR;AAAe3G,cAAI,EAAE,CAAC,qBAAD;AAArB,SAAD,CAHwB;AAIjCsC,mBAAW,EAAE,CAAC;AAAE3C,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CAJoB;AAKjCP,yBAAiB,EAAE,CAAC;AAAEzG,cAAI,EAAE,2CAAAiH,YAAR;AAAsB5G,cAAI,EAAE,CAAC,OAAD;AAA5B,SAAD;AALc,OAArC;;AAOA,OAAC,YAAY;AAAE,SAAC,OAAOF,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBoB,oBAAzB,EAA8C,CAAC;AACzGvB,cAAI,EAAE,2CAAAqB,SADmG;AAEzGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,+BADX;AAECsF,oBAAQ,EAAE,qBAFX;AAGCM,gBAAI,EAAE;AACF,uBAAS,uBADP;AAEF;AACA;AACA,sBAAQ;AAJN;AAHP,WAAD;AAFmG,SAAD,CAA9C,EAY1D,YAAY;AAAE,iBAAO,CAAC;AAAElH,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAyD;AAAEA,gBAAI,EAAE;AAAR,WAAzD,EAAkF;AAAEA,gBAAI,EAAE6C,SAAR;AAAmBgE,sBAAU,EAAE,CAAC;AAC/H7G,kBAAI,EAAE,2CAAA8G;AADyH,aAAD,EAE/H;AACC9G,kBAAI,EAAE,2CAAA+G,MADP;AAEC1G,kBAAI,EAAE,CAAC,6CAAA6F,QAAD;AAFP,aAF+H;AAA/B,WAAlF,CAAP;AAKF,SAjB8C,EAiB5C;AAAElD,iBAAO,EAAE,CAAC;AACtBhD,gBAAI,EAAE,2CAAAgH,KADgB;AAEtB3G,gBAAI,EAAE,CAAC,oBAAD;AAFgB,WAAD,CAAX;AAGV+C,iBAAO,EAAE,CAAC;AACVpD,gBAAI,EAAE,2CAAAgH,KADI;AAEV3G,gBAAI,EAAE,CAAC,oBAAD;AAFI,WAAD,CAHC;AAMVsG,iBAAO,EAAE,CAAC;AACV3G,gBAAI,EAAE,2CAAAgH,KADI;AAEV3G,gBAAI,EAAE,CAAC,qBAAD;AAFI,WAAD,CANC;AASVsC,qBAAW,EAAE,CAAC;AACd3C,gBAAI,EAAE,2CAAAgH;AADQ,WAAD,CATH;AAYlB;AACA;AACA;AACA;AACAP,2BAAiB,EAAE,CAAC;AACZzG,gBAAI,EAAE,2CAAAiH,YADM;AAEZ5G,gBAAI,EAAE,CAAC,OAAD;AAFM,WAAD;AAhBD,SAjB4C,CAAnD;AAoCC,OApChB;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACM8G,gB;;;;AAENA,sBAAe,CAAC3H,IAAhB,GAAuB,SAAS4H,uBAAT,CAAiC1H,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAIyH,gBAAV,GAAP;AAAsC,OAAnG;;AACAA,sBAAe,CAACE,IAAhB,GAAuB,aAAc,+DAAwB;AAAErH,YAAI,EAAEmH;AAAR,OAAxB,CAArC;AACAA,sBAAe,CAACG,IAAhB,GAAuB,aAAc,+DAAwB;AAAEC,eAAO,EAAE,CAAC,CAAC,mDAAAC,cAAD,CAAD;AAAX,OAAxB,CAArC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOrH,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBgH,gBAAzB,EAA0C,CAAC;AACrGnH,cAAI,EAAE,2CAAAyH,QAD+F;AAErGpH,cAAI,EAAE,CAAC;AACCqH,wBAAY,EAAE,CAACpH,YAAD,EAAciB,oBAAd,CADf;AAECgG,mBAAO,EAAE,CAAC,mDAAAC,cAAD,CAFV;AAGCG,mBAAO,EAAE,CAACrH,YAAD,EAAciB,oBAAd;AAHV,WAAD;AAF+F,SAAD,CAA1C,EAO1D,IAP0D,EAOpD,IAPoD,CAAnD;AAOO,OAPtB;;AAQA,OAAC,YAAY;AAAE,SAAC,OAAOqG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BT,gBAA1B,EAA2C;AAAEO,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAACpH,YAAD,EAAciB,oBAAd,CAAP;AAA4C,WAA1E;AAA4EgG,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,mDAAAC,cAAD,CAAP;AAA0B,WAA7H;AAA+HG,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAACrH,YAAD,EAAciB,oBAAd,CAAP;AAA4C;AAAlM,SAA3C,CAAnD;AAAsS,OAArT;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7dA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AAGA,UAAMsG,GAAG,GAAG,CAAC,GAAD,EAAM,CAAC,CAAC,iBAAD,CAAD,CAAN,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,GAAD,EAAM,iBAAN,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,CAAD,EAA2D,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,mBAAD,CAArB,EAA4C,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAA5C,EAAwE,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAxE,EAAuG,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAvG,EAAiI,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAjI,CAA3D,EAA0N,GAA1N,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,oCAAD,EAAuC,2HAAvC,EAAoK,GAApK,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,mBAAD,CAArB,EAA4C,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAA5C,EAAwE,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAxE,EAAuG,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAvG,EAAiI,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAjI,CAAD,EAAgK,CAAC,CAAC,KAAD,CAAD,CAAhK,EAA2K,GAA3K,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,2HAAD,EAA8H,KAA9H,EAAqI,GAArI,CAAZ;;UACMC,e;;;;AAENA,qBAAc,CAAC3I,IAAf,GAAsB,SAAS4I,sBAAT,CAAgC1I,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAIyI,eAAV,GAAP;AAAqC,OAAhG;;AACAA,qBAAc,CAACpH,IAAf,GAAsB,aAAc,gEAAyB;AAAEf,YAAI,EAAEmI,eAAR;AAAwBnH,iBAAS,EAAE,CAAC,CAAC,kBAAD,CAAD,EAAuB,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAvB,EAAqD,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAArD,CAAnC;AAAqHmF,iBAAS,EAAE,CAAC,CAAD,EAAI,kBAAJ;AAAhI,OAAzB,CAApC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOhG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBgI,eAAzB,EAAyC,CAAC;AACpGnI,cAAI,EAAE,2CAAAqB,SAD8F;AAEpGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,wDADX;AAEC4F,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAF8F,SAAD,CAAzC,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAOA;AACA;AACA;AACA;;;UACMmB,a;;;;AAENA,mBAAY,CAAC7I,IAAb,GAAoB,SAAS8I,oBAAT,CAA8B5I,CAA9B,EAAiC;AAAE,eAAO,KAAKA,CAAC,IAAI2I,aAAV,GAAP;AAAmC,OAA1F;;AACAA,mBAAY,CAACtH,IAAb,GAAoB,aAAc,gEAAyB;AAAEf,YAAI,EAAEqI,aAAR;AAAsBrH,iBAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAArB,EAAiD,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAjD,CAAjC;AAA6GmF,iBAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ;AAAxH,OAAzB,CAAlC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOhG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBkI,aAAzB,EAAuC,CAAC;AAClGrI,cAAI,EAAE,2CAAAqB,SAD4F;AAElGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,oDADT;AAEC4F,gBAAI,EAAE;AACF,uBAAS;AADP;AAFP,WAAD;AAF4F,SAAD,CAAvC,EAQ1D,IAR0D,EAQpD,IARoD,CAAnD;AAQO,OARtB;AASA;AACA;AACA;AACA;;;UACMqB,gB;;;;AAENA,sBAAe,CAAC/I,IAAhB,GAAuB,SAASgJ,uBAAT,CAAiC9I,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAI6I,gBAAV,GAAP;AAAsC,OAAnG;;AACAA,sBAAe,CAACxH,IAAhB,GAAuB,aAAc,gEAAyB;AAAEf,YAAI,EAAEuI,gBAAR;AAAyBvH,iBAAS,EAAE,CAAC,CAAC,mBAAD,CAAD,EAAwB,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAxB,EAAuD,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAvD,CAApC;AAAyHmF,iBAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAApI,OAAzB,CAArC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOhG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBoI,gBAAzB,EAA0C,CAAC;AACrGvI,cAAI,EAAE,2CAAAqB,SAD+F;AAErGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,6DADT;AAEC4F,gBAAI,EAAE;AACF,uBAAS;AADP;AAFP,WAAD;AAF+F,SAAD,CAA1C,EAQ1D,IAR0D,EAQpD,IARoD,CAAnD;AAQO,OARtB;AASA;AACA;AACA;AACA;;;UACMuB,e,6BACF,2BAAc;AAAA;;AACV;AACA,aAAKC,KAAL,GAAa,OAAb;AACH,O;;AAELD,qBAAc,CAACjJ,IAAf,GAAsB,SAASmJ,sBAAT,CAAgCjJ,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAI+I,eAAV,GAAP;AAAqC,OAAhG;;AACAA,qBAAc,CAAC1H,IAAf,GAAsB,aAAc,gEAAyB;AAAEf,YAAI,EAAEyI,eAAR;AAAwBzH,iBAAS,EAAE,CAAC,CAAC,kBAAD,CAAD,CAAnC;AAA2DmF,iBAAS,EAAE,CAAC,CAAD,EAAI,kBAAJ,CAAtE;AAA+FyC,gBAAQ,EAAE,CAAzG;AAA4GxC,oBAAY,EAAE,SAASyC,2BAAT,CAAqCvC,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC3O,sEAAmB,4BAAnB,EAAiDC,GAAG,CAACmC,KAAJ,KAAc,KAA/D;AACH;AAAE,SAFsD;AAEpDhC,cAAM,EAAE;AAAEgC,eAAK,EAAE;AAAT,SAF4C;AAExB9B,gBAAQ,EAAE,CAAC,gBAAD;AAFc,OAAzB,CAApC;AAGA6B,qBAAc,CAACtH,cAAf,GAAgC;AAC5BuH,aAAK,EAAE,CAAC;AAAE1I,cAAI,EAAE,2CAAAgH;AAAR,SAAD;AADqB,OAAhC;;AAGA,OAAC,YAAY;AAAE,SAAC,OAAO7G,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBsI,eAAzB,EAAyC,CAAC;AACpGzI,cAAI,EAAE,2CAAAqB,SAD8F;AAEpGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,kBADX;AAECsF,oBAAQ,EAAE,gBAFX;AAGCM,gBAAI,EAAE;AACF,uBAAS,kBADP;AAEF,oDAAsC;AAFpC;AAHP,WAAD;AAF8F,SAAD,CAAzC,EAU1D,YAAY;AAAE,iBAAO,EAAP;AAAY,SAVgC,EAU9B;AAAEwB,eAAK,EAAE,CAAC;AAClC1I,gBAAI,EAAE,2CAAAgH;AAD4B,WAAD;AAAT,SAV8B,CAAnD;AAYC,OAZhB;AAaA;AACA;AACA;AACA;;;UACM8B,c;;;;AAENA,oBAAa,CAACtJ,IAAd,GAAqB,SAASuJ,qBAAT,CAA+BrJ,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIoJ,cAAV,GAAP;AAAoC,OAA7F;;AACAA,oBAAa,CAAC/H,IAAd,GAAqB,aAAc,gEAAyB;AAAEf,YAAI,EAAE8I,cAAR;AAAuB9H,iBAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyDmF,iBAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ;AAApE,OAAzB,CAAnC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOhG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB2I,cAAzB,EAAwC,CAAC;AACnG9I,cAAI,EAAE,2CAAAqB,SAD6F;AAEnGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,iBADX;AAEC4F,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAF6F,SAAD,CAAxC,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAOA;AACA;AACA;AACA;;;UACM8B,a;;;;AAENA,mBAAY,CAACxJ,IAAb,GAAoB,SAASyJ,oBAAT,CAA8BvJ,CAA9B,EAAiC;AAAE,eAAO,KAAKA,CAAC,IAAIsJ,aAAV,GAAP;AAAmC,OAA1F;;AACAA,mBAAY,CAACjI,IAAb,GAAoB,aAAc,gEAAyB;AAAEf,YAAI,EAAEgJ,aAAR;AAAsBhI,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAAD,EAA6B,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAA7B,CAAjC;AAAyFmF,iBAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ;AAApG,OAAzB,CAAlC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOhG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB6I,aAAzB,EAAuC,CAAC;AAClGhJ,cAAI,EAAE,2CAAAqB,SAD4F;AAElGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,kCADX;AAEC4F,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAF4F,SAAD,CAAvC,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAOA;AACA;AACA;AACA;;;UACMgC,e;;;;AAENA,qBAAc,CAAC1J,IAAf,GAAsB,SAAS2J,sBAAT,CAAgCzJ,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAIwJ,eAAV,GAAP;AAAqC,OAAhG;;AACAA,qBAAc,CAACnI,IAAf,GAAsB,aAAc,gEAAyB;AAAEf,YAAI,EAAEkJ,eAAR;AAAwBlI,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAhC,CAAnC;AAAmGmF,iBAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA9G,OAAzB,CAApC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOhG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB+I,eAAzB,EAAyC,CAAC;AACpGlJ,cAAI,EAAE,2CAAAqB,SAD8F;AAEpGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,0CADX;AAEC4F,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAF8F,SAAD,CAAzC,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAOA;AACA;AACA;AACA;;;UACMkC,e;;;;AAENA,qBAAc,CAAC5J,IAAf,GAAsB,SAAS6J,sBAAT,CAAgC3J,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAI0J,eAAV,GAAP;AAAqC,OAAhG;;AACAA,qBAAc,CAACrI,IAAf,GAAsB,aAAc,gEAAyB;AAAEf,YAAI,EAAEoJ,eAAR;AAAwBpI,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAhC,CAAnC;AAAoGmF,iBAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA/G,OAAzB,CAApC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOhG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBiJ,eAAzB,EAAyC,CAAC;AACpGpJ,cAAI,EAAE,2CAAAqB,SAD8F;AAEpGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,2CADX;AAEC4F,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAF8F,SAAD,CAAzC,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAOA;AACA;AACA;AACA;;;UACMoC,e;;;;AAENA,qBAAc,CAAC9J,IAAf,GAAsB,SAAS+J,sBAAT,CAAgC7J,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAI4J,eAAV,GAAP;AAAqC,OAAhG;;AACAA,qBAAc,CAACvI,IAAf,GAAsB,aAAc,gEAAyB;AAAEf,YAAI,EAAEsJ,eAAR;AAAwBtI,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAhC,CAAnC;AAAmGmF,iBAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA9G,OAAzB,CAApC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOhG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBmJ,eAAzB,EAAyC,CAAC;AACpGtJ,cAAI,EAAE,2CAAAqB,SAD8F;AAEpGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,0CADX;AAEC4F,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAF8F,SAAD,CAAzC,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAOA;AACA;AACA;AACA;;;UACMsC,e;;;;AAENA,qBAAc,CAAChK,IAAf,GAAsB,SAASiK,sBAAT,CAAgC/J,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAI8J,eAAV,GAAP;AAAqC,OAAhG;;AACAA,qBAAc,CAACzI,IAAf,GAAsB,aAAc,gEAAyB;AAAEf,YAAI,EAAEwJ,eAAR;AAAwBxI,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAhC,CAAnC;AAAoGmF,iBAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA/G,OAAzB,CAApC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOhG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBqJ,eAAzB,EAAyC,CAAC;AACpGxJ,cAAI,EAAE,2CAAAqB,SAD8F;AAEpGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,2CADX;AAEC4F,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAF8F,SAAD,CAAzC,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAOA;AACA;AACA;AACA;;;UACMwC,c;;;;AAENA,oBAAa,CAAClK,IAAd,GAAqB,SAASmK,qBAAT,CAA+BjK,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIgK,cAAV,GAAP;AAAoC,OAA7F;;AACAA,oBAAa,CAAC3I,IAAd,GAAqB,aAAc,gEAAyB;AAAEf,YAAI,EAAE0J,cAAR;AAAuB1I,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,CAAlC;AAA4FmF,iBAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ;AAAvG,OAAzB,CAAnC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOhG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBuJ,cAAzB,EAAwC,CAAC;AACnG1J,cAAI,EAAE,2CAAAqB,SAD6F;AAEnGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,oCADX;AAEC4F,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAF6F,SAAD,CAAxC,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACM0C,Q,8BACF;AACA,wBAAYC,cAAZ,EAA4B;AAAA;;AACxB,aAAKA,cAAL,GAAsBA,cAAtB;AACH,O;;AAELD,cAAO,CAACpK,IAAR,GAAe,SAASsK,eAAT,CAAyBpK,CAAzB,EAA4B;AAAE,eAAO,KAAKA,CAAC,IAAIkK,QAAV,EAAmB,gEAAyB,kEAAAG,qBAAzB,EAAgD,CAAhD,CAAnB,CAAP;AAAgF,OAA7H;;AACAH,cAAO,CAACI,IAAR,GAAe,aAAc,gEAAyB;AAAEhK,YAAI,EAAE4J,QAAR;AAAiB5I,iBAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4CmF,iBAAS,EAAE,CAAC,CAAD,EAAI,UAAJ,EAAgB,qBAAhB,CAAvD;AAA+FyC,gBAAQ,EAAE,CAAzG;AAA4GxC,oBAAY,EAAE,SAAS6D,oBAAT,CAA8B3D,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC7N,sEAAmB,yBAAnB,EAA8CC,GAAG,CAACsD,cAAJ,KAAuB,gBAArE;AACH;AAAE,SAF+C;AAE7CjD,gBAAQ,EAAE,CAAC,SAAD,CAFmC;AAEtBsD,0BAAkB,EAAEpC,GAFE;AAEGqC,aAAK,EAAE,CAFV;AAEaC,YAAI,EAAE,CAFnB;AAEsBC,gBAAQ,EAAE,SAASC,gBAAT,CAA0BhE,EAA1B,EAA8BC,GAA9B,EAAmC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/H,0EAAuBuB,GAAvB;;AACA,uEAAoB,CAApB;;AACA,uEAAoB,CAApB,EAAuB,CAAvB;AACH;AAAE,SAN+C;AAM7C0C,cAAM,EAAE,CAAC,wuFAAD,CANqC;AAMusFC,qBAAa,EAAE,CANttF;AAMytFC,uBAAe,EAAE;AAN1uF,OAAzB,CAA7B;;AAOAb,cAAO,CAAC7J,cAAR,GAAyB;AAAA,eAAM,CAC3B;AAAEC,cAAI,EAAE0K,MAAR;AAAgB7D,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAA8G;AAAR,WAAD,EAAqB;AAAE9G,gBAAI,EAAE,2CAAA+G,MAAR;AAAgB1G,gBAAI,EAAE,CAAC,kEAAA0J,qBAAD;AAAtB,WAArB;AAA5B,SAD2B,CAAN;AAAA,OAAzB;;AAGA,OAAC,YAAY;AAAE,SAAC,OAAO5J,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyByJ,QAAzB,EAAkC,CAAC;AAC7F5J,cAAI,EAAE,2CAAA2K,SADuF;AAE7FtK,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,UADX;AAECsF,oBAAQ,EAAE,SAFX;AAGCyD,oBAAQ,EAAE,mFAHX;AAICG,yBAAa,EAAE,2CAAAI,iBAAA,KAJhB;AAKCH,2BAAe,EAAE,2CAAAI,uBAAA,OALlB;AAMC3D,gBAAI,EAAE;AACF,uBAAS,8BADP;AAEF,iDAAmC;AAFjC,aANP;AAUCqD,kBAAM,EAAE,CAAC,wuFAAD;AAVT,WAAD;AAFuF,SAAD,CAAlC,EAc1D,YAAY;AAAE,iBAAO,CAAC;AAAEvK,gBAAI,EAAE0K,MAAR;AAAgB7D,sBAAU,EAAE,CAAC;AAC3C7G,kBAAI,EAAE,2CAAA8G;AADqC,aAAD,EAE3C;AACC9G,kBAAI,EAAE,2CAAA+G,MADP;AAEC1G,kBAAI,EAAE,CAAC,kEAAA0J,qBAAD;AAFP,aAF2C;AAA5B,WAAD,CAAP;AAKF,SAnB8C,EAmB5C,IAnB4C,CAAnD;AAmBe,OAnB9B;AAoBA;AACA;AACA;AACA;AACA;;;UACMe,c;;;;AAENA,oBAAa,CAACtL,IAAd,GAAqB,SAASuL,qBAAT,CAA+BrL,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIoL,cAAV,GAAP;AAAoC,OAA7F;;AACAA,oBAAa,CAACd,IAAd,GAAqB,aAAc,gEAAyB;AAAEhK,YAAI,EAAE8K,cAAR;AAAuB9J,iBAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyDmF,iBAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ,CAApE;AAA4F+D,0BAAkB,EAAElC,GAAhH;AAAqHmC,aAAK,EAAE,CAA5H;AAA+HC,YAAI,EAAE,CAArI;AAAwIY,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,sBAAJ,CAAD,CAAhJ;AAA+KX,gBAAQ,EAAE,SAASY,sBAAT,CAAgC3E,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACpS,0EAAuByB,GAAvB;;AACA,uEAAoB,CAApB;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAoB,CAApB,EAAuB,CAAvB;;AACA;;AACA,uEAAoB,CAApB,EAAuB,CAAvB;AACH;AAAE,SAPqD;AAOnDyC,qBAAa,EAAE,CAPoC;AAOjCC,uBAAe,EAAE;AAPgB,OAAzB,CAAnC;;AAQA,OAAC,YAAY;AAAE,SAAC,OAAOtK,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB2K,cAAzB,EAAwC,CAAC;AACnG9K,cAAI,EAAE,2CAAA2K,SAD6F;AAEnGtK,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,iBADX;AAEC+I,oBAAQ,EAAE,6TAFX;AAGCG,yBAAa,EAAE,2CAAAI,iBAAA,KAHhB;AAICH,2BAAe,EAAE,2CAAAI,uBAAA,OAJlB;AAKC3D,gBAAI,EAAE;AAAE,uBAAS;AAAX;AALP,WAAD;AAF6F,SAAD,CAAxC,EAS1D,IAT0D,EASpD,IAToD,CAAnD;AASO,OATtB;AAUA;AACA;AACA;AACA;AACA;;;UACMgE,kB;;;;AAENA,wBAAiB,CAAC1L,IAAlB,GAAyB,SAAS2L,yBAAT,CAAmCzL,CAAnC,EAAsC;AAAE,eAAO,KAAKA,CAAC,IAAIwL,kBAAV,GAAP;AAAwC,OAAzG;;AACAA,wBAAiB,CAAClB,IAAlB,GAAyB,aAAc,gEAAyB;AAAEhK,YAAI,EAAEkL,kBAAR;AAA2BlK,iBAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,CAAtC;AAAkEmF,iBAAS,EAAE,CAAC,CAAD,EAAI,sBAAJ,CAA7E;AAA0G+D,0BAAkB,EAAEhC,GAA9H;AAAmIiC,aAAK,EAAE,CAA1I;AAA6IC,YAAI,EAAE,CAAnJ;AAAsJC,gBAAQ,EAAE,SAASe,0BAAT,CAAoC9E,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACnR,0EAAuB2B,GAAvB;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB;;AACA,uEAAoB,CAApB;;AACA;;AACA,uEAAoB,CAApB,EAAuB,CAAvB;;AACA,uEAAoB,CAApB,EAAuB,CAAvB;AACH;AAAE,SAPyD;AAOvDuC,qBAAa,EAAE,CAPwC;AAOrCC,uBAAe,EAAE;AAPoB,OAAzB,CAAvC;;AAQA,OAAC,YAAY;AAAE,SAAC,OAAOtK,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB+K,kBAAzB,EAA4C,CAAC;AACvGlL,cAAI,EAAE,2CAAA2K,SADiG;AAEvGtK,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,sBADX;AAEC+I,oBAAQ,EAAE,+PAFX;AAGCG,yBAAa,EAAE,2CAAAI,iBAAA,KAHhB;AAICH,2BAAe,EAAE,2CAAAI,uBAAA,OAJlB;AAKC3D,gBAAI,EAAE;AAAE,uBAAS;AAAX;AALP,WAAD;AAFiG,SAAD,CAA5C,EAS1D,IAT0D,EASpD,IAToD,CAAnD;AASO,OATtB;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMmE,c;;;;AAENA,oBAAa,CAAC7L,IAAd,GAAqB,SAAS8L,qBAAT,CAA+B5L,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAI2L,cAAV,GAAP;AAAoC,OAA7F;;AACAA,oBAAa,CAAChE,IAAd,GAAqB,aAAc,+DAAwB;AAAErH,YAAI,EAAEqL;AAAR,OAAxB,CAAnC;AACAA,oBAAa,CAAC/D,IAAd,GAAqB,aAAc,+DAAwB;AAAEC,eAAO,EAAE,CAAC,CAAC,oDAAAgE,eAAD,CAAD,EAAoB,oDAAAA,eAApB;AAAX,OAAxB,CAAnC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOpL,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBkL,cAAzB,EAAwC,CAAC;AACnGrL,cAAI,EAAE,2CAAAyH,QAD6F;AAEnGpH,cAAI,EAAE,CAAC;AACCkH,mBAAO,EAAE,CAAC,oDAAAgE,eAAD,CADV;AAEC5D,mBAAO,EAAE,CACLiC,QADK,EAELkB,cAFK,EAGLI,kBAHK,EAIL/C,eAJK,EAKLE,aALK,EAMLE,gBANK,EAOLE,eAPK,EAQLK,cARK,EASLI,eATK,EAULE,eAVK,EAWLE,eAXK,EAYLN,aAZK,EAaLQ,eAbK,EAcLE,cAdK,EAeL,oDAAA6B,eAfK,CAFV;AAmBC7D,wBAAY,EAAE,CACVkC,QADU,EACDkB,cADC,EACcI,kBADd,EACiC/C,eADjC,EACiDE,aADjD,EAC+DE,gBAD/D,EAEVE,eAFU,EAEMK,cAFN,EAEqBI,eAFrB,EAEqCE,eAFrC,EAEqDE,eAFrD,EAEqEN,aAFrE,EAGVQ,eAHU,EAGME,cAHN;AAnBf,WAAD;AAF6F,SAAD,CAAxC,EA2B1D,IA3B0D,EA2BpD,IA3BoD,CAAnD;AA2BO,OA3BtB;;AA4BA,OAAC,YAAY;AAAE,SAAC,OAAO9B,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0ByD,cAA1B,EAAyC;AAAE3D,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAACkC,QAAD,EAAUkB,cAAV,EAAyBI,kBAAzB,EAA4C/C,eAA5C,EAA4DE,aAA5D,EAA0EE,gBAA1E,EAA2FE,eAA3F,EAA2GK,cAA3G,EAA0HI,eAA1H,EAA0IE,eAA1I,EAA0JE,eAA1J,EAA0KN,aAA1K,EAAwLQ,eAAxL,EAAwME,cAAxM,CAAP;AAAgO,WAA9P;AAAgQnC,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,oDAAAgE,eAAD,CAAP;AAA2B,WAAlT;AAAoT5D,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAACiC,QAAD,EAAUkB,cAAV,EAAyBI,kBAAzB,EAA4C/C,eAA5C,EAA4DE,aAA5D,EAA0EE,gBAA1E,EAA2FE,eAA3F,EAA2GK,cAA3G,EAA0HI,eAA1H,EAA0IE,eAA1I,EAA0JE,eAA1J,EAA0KN,aAA1K,EAAwLQ,eAAxL,EAAwME,cAAxM,EAAuN,oDAAA6B,eAAvN,CAAP;AAAiP;AAA5jB,SAAzC,CAAnD;AAA8pB,OAA7qB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5VA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAOA,UAAM1D,GAAG,GAAG,CAAC,WAAD,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,qBAAD,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,gBAAD,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,eAASwD,oCAAT,CAA8ClF,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACjE,gFAA+B,CAA/B;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA;;AACA;AACH;AAAE;;AACH,eAASmF,2BAAT,CAAqCnF,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxD,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;AAAE;;AACH,eAASoF,4CAAT,CAAsDpF,EAAtD,EAA0DC,GAA1D,EAA+D;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzE,gFAA+B,CAA/B;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA,uEAAsB,CAAtB,EAAyB,MAAzB;;AACA,+DAAc,CAAd;;AACA;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMqF,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,kEAAiB,CAAjB;;AACA,0EAAyBA,OAAO,CAACC,QAAR,CAAiBjJ,WAA1C;AACH;AAAE;;AACH,eAASkJ,0CAAT,CAAoDvF,EAApD,EAAwDC,GAAxD,EAA6D;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACvE,qEAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,eAAD,EAAkB,MAAlB,CAA1B;AACH;AAAE;;AACH,eAASwF,oCAAT,CAA8CxF,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACjE,uEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;;AACA,+DAAc,CAAd,EAAiB,IAAjB;;AACA;AACH;AAAE;;AACH,eAASyF,6BAAT,CAAuCzF,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1D,cAAM0F,IAAI,GAAG,gEAAb;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC;;AACA,mEAAkB,mBAAlB,EAAuC,SAASC,gEAAT,GAA4E;AAAE,wEAAqBD,IAArB;;AAA4B,gBAAME,OAAO,GAAG,6DAAhB;;AAAwC,mBAAOA,OAAO,CAACC,gBAAR,EAAP;AAAoC,WAA7N;;AACA,mEAAkB,CAAlB,EAAqBT,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,cAAzE,EAAyF,EAAzF;;AACA,mEAAkB,CAAlB,EAAqBG,0CAArB,EAAiE,CAAjE,EAAoE,CAApE,EAAuE,YAAvE,EAAqF,EAArF;;AACA,mEAAkB,CAAlB,EAAqBC,oCAArB,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,MAAjE,EAAyE,EAAzE;;AACA;AACH;;AAAC,YAAIxF,EAAE,GAAG,CAAT,EAAY;AACV,cAAM8F,MAAM,GAAG,6DAAf;;AACA,oEAAmB,WAAnB,EAAgCA,MAAM,CAACR,QAAP,CAAgBS,KAAhB,IAAyB,CAACD,MAAM,CAACE,kBAAP,EAA1D,EAAuF,sBAAvF,EAA+GF,MAAM,CAACR,QAAP,CAAgBS,KAAhB,IAAyB,CAACD,MAAM,CAACE,kBAAP,EAAzI,EAAsK,YAAtK,EAAoLF,MAAM,CAACG,KAAP,IAAgB,QAApM,EAA8M,UAA9M,EAA0NH,MAAM,CAACG,KAAP,IAAgB,MAA1O;;AACA,mEAAkB,2BAAlB,EAA+CH,MAAM,CAACI,UAAP,IAAqB,SAApE,EAA+E,IAA/E,EAAqFJ,MAAM,CAACK,QAA5F,EAAsG,UAAtG,EAAkHL,MAAM,CAACM,SAAP,EAAlH;;AACA,oEAAmB,KAAnB,EAA0BN,MAAM,CAACR,QAAP,CAAgBe,EAA1C,EAA8C,WAA9C,EAA2DP,MAAM,CAACR,QAAP,CAAgBe,EAA3E;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,KAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,IAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B,CAACP,MAAM,CAACQ,kBAAR,IAA8BR,MAAM,CAACR,QAAP,CAAgBiB,QAA9C,IAA0D,CAACT,MAAM,CAACR,QAAP,CAAgBkB,QAArG;AACH;AAAE;;AACH,eAASC,4BAAT,CAAsCzG,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzD,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;AAAE;;AACH,eAAS0G,4BAAT,CAAsC1G,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzD,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC,EAAoC,EAApC;;AACA,kEAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAM2G,MAAM,GAAG,6DAAf;;AACA,kEAAiB,CAAjB;;AACA,oEAAmB,YAAnB,EAAiCA,MAAM,CAACV,KAAP,IAAgB,QAAjD,EAA2D,UAA3D,EAAuEU,MAAM,CAACV,KAAP,IAAgB,MAAvF;AACH;AAAE;;AACH,eAASW,4BAAT,CAAsC5G,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzD,uEAAsB,CAAtB,EAAyB,KAAzB;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAM6G,MAAM,GAAG,6DAAf;;AACA,mEAAkB,qBAAlB,EAAyCA,MAAM,CAACC,wBAAhD;AACH;AAAE;;AACH,eAASC,kCAAT,CAA4C/G,EAA5C,EAAgDC,GAAhD,EAAqD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/D,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,+DAAc,CAAd;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMgH,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,mEAAkB,IAAlB,EAAwBA,OAAO,CAACC,YAAhC;;AACA,kEAAiB,CAAjB;;AACA,0EAAyBD,OAAO,CAACE,SAAjC;AACH;AAAE;;AACH,eAASC,4BAAT,CAAsCnH,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzD,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,mEAAkB,CAAlB,EAAqB+G,kCAArB,EAAyD,CAAzD,EAA4D,CAA5D,EAA+D,KAA/D,EAAsE,EAAtE;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;;AAAC,YAAI/G,EAAE,GAAG,CAAT,EAAY;AACV,cAAMoH,MAAM,GAAG,6DAAf;;AACA,mEAAkB,qBAAlB,EAAyCA,MAAM,CAACN,wBAAhD;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0BM,MAAM,CAACF,SAAjC;AACH;AAAE;;AACH,UAAMvF,GAAG,GAAG,CAAC,GAAD,EAAM,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAAN,EAA+B,CAAC,CAAC,iBAAD,CAAD,CAA/B,EAAsD,CAAC,CAAC,WAAD,CAAD,CAAtD,EAAuE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAAvE,EAAgG,CAAC,CAAC,WAAD,CAAD,CAAhG,EAAiH,CAAC,CAAC,UAAD,EAAa,CAAb,EAAgB,OAAhB,EAAyB,KAAzB,CAAD,CAAjH,EAAoJ,CAAC,CAAC,UAAD,EAAa,OAAb,EAAsB,KAAtB,CAAD,CAApJ,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,GAAD,EAAM,aAAN,EAAqB,iBAArB,EAAwC,WAAxC,EAAqD,aAArD,EAAoE,WAApE,EAAiF,6BAAjF,EAAgH,uBAAhH,CAAZ;AACA,UAAIyF,cAAc,GAAG,CAArB;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,UAAS,GAAG,IAAI,2CAAAC,cAAJ,CAAmB,UAAnB,CAAlB;AACA;;;UACMC,S,6BACF,mBAAYC,QAAZ,EAAsBC,UAAtB,EAAkC;AAAA;;AAC9B,aAAKrB,EAAL,uBAAuBgB,cAAc,EAArC,EAD8B,CAE9B;AACA;;AACA,YAAI,CAACI,QAAL,EAAe;AACXC,oBAAU,CAAC/L,aAAX,CAAyBgM,YAAzB,CAAsC,WAAtC,EAAmD,QAAnD;AACH;AACJ,O;;AAELH,eAAQ,CAACtO,IAAT,GAAgB,SAAS0O,gBAAT,CAA0BxO,CAA1B,EAA6B;AAAE,eAAO,KAAKA,CAAC,IAAIoO,SAAV,EAAoB,gEAAyB,WAAzB,CAApB,EAA2D,gEAAyB,qDAAzB,CAA3D,CAAP;AAAiH,OAAhK;;AACAA,eAAQ,CAAC/M,IAAT,GAAgB,aAAc,gEAAyB;AAAEf,YAAI,EAAE8N,SAAR;AAAkB9M,iBAAS,EAAE,CAAC,CAAC,WAAD,CAAD,CAA7B;AAA8CmF,iBAAS,EAAE,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,WAA3B,CAAzD;AAAkGyC,gBAAQ,EAAE,CAA5G;AAA+GxC,oBAAY,EAAE,SAAS+H,qBAAT,CAA+B7H,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAClO,sEAAmB,IAAnB,EAAyBC,GAAG,CAACoG,EAA7B;AACH;AAAE,SAFgD;AAE9CjG,cAAM,EAAE;AAAEiG,YAAE,EAAE;AAAN,SAFsC;AAExByB,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAEC,iBAAO,EAAET,UAAX;AAAsBU,qBAAW,EAAER;AAAnC,SAAD,CAA1B,CAAD;AAFc,OAAzB,CAA9B;;AAGAA,eAAQ,CAAC/N,cAAT,GAA0B;AAAA,eAAM,CAC5B;AAAEC,cAAI,EAAE0K,MAAR;AAAgB7D,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAAuO,SAAR;AAAmBlO,gBAAI,EAAE,CAAC,WAAD;AAAzB,WAAD;AAA5B,SAD4B,EAE5B;AAAEL,cAAI,EAAE,2CAAAkB;AAAR,SAF4B,CAAN;AAAA,OAA1B;;AAIA4M,eAAQ,CAAC3M,cAAT,GAA0B;AACtBwL,UAAE,EAAE,CAAC;AAAE3M,cAAI,EAAE,2CAAAgH;AAAR,SAAD;AADkB,OAA1B;;AAGA,OAAC,YAAY;AAAE,SAAC,OAAO7G,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB2N,SAAzB,EAAmC,CAAC;AAC9F9N,cAAI,EAAE,2CAAAqB,SADwF;AAE9FhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,WADX;AAEC4F,gBAAI,EAAE;AACF,uBAAS,WADP;AAEF,2BAAa,IAFX;AAGF,6BAAe;AAHb,aAFP;AAOCsH,qBAAS,EAAE,CAAC;AAAEH,qBAAO,EAAET,UAAX;AAAsBU,yBAAW,EAAER;AAAnC,aAAD;AAPZ,WAAD;AAFwF,SAAD,CAAnC,EAW1D,YAAY;AAAE,iBAAO,CAAC;AAAE9N,gBAAI,EAAE0K,MAAR;AAAgB7D,sBAAU,EAAE,CAAC;AAC3C7G,kBAAI,EAAE,2CAAAuO,SADqC;AAE3ClO,kBAAI,EAAE,CAAC,WAAD;AAFqC,aAAD;AAA5B,WAAD,EAGX;AAAEL,gBAAI,EAAE;AAAR,WAHW,CAAP;AAG2B,SAdiB,EAcf;AAAE2M,YAAE,EAAE,CAAC;AAC9C3M,gBAAI,EAAE,2CAAAgH;AADwC,WAAD;AAAN,SAde,CAAnD;AAgBC,OAhBhB;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,UAAMyH,uBAAsB,GAAG;AAC3B;AACAC,0BAAkB,EAAE,qDAAAC,OAAA,EAAQ,oBAAR,EAA8B,CAC9C;AACA,6DAAAC,KAAA,EAAM,OAAN,EAAe,qDAAA1L,KAAA,EAAM;AAAE2L,iBAAO,EAAE,CAAX;AAAcC,mBAAS,EAAE;AAAzB,SAAN,CAAf,CAF8C,EAG9C,qDAAAC,UAAA,EAAW,eAAX,EAA4B,CACxB,qDAAA7L,KAAA,EAAM;AAAE2L,iBAAO,EAAE,CAAX;AAAcC,mBAAS,EAAE;AAAzB,SAAN,CADwB,EAExB,qDAAAE,OAAA,EAAQ,wCAAR,CAFwB,CAA5B,CAH8C,CAA9B;AAFO,OAA/B;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;UACMC,oB;;;;AAENA,0BAAmB,CAACzP,IAApB,GAA2B,SAAS0P,2BAAT,CAAqCxP,CAArC,EAAwC;AAAE,eAAO,KAAKA,CAAC,IAAIuP,oBAAV,GAAP;AAA0C,OAA/G;;AACAA,0BAAmB,CAAClO,IAApB,GAA2B,aAAc,gEAAyB;AAAEf,YAAI,EAAEiP;AAAR,OAAzB,CAAzC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAO9O,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB8O,oBAAzB,EAA8C,CAAC;AACzGjP,cAAI,EAAE,2CAAAqB;AADmG,SAAD,CAA9C,EAE1D,IAF0D,EAEpD,IAFoD,CAAnD;AAEO,OAFtB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,eAAS8N,wCAAT,GAAmD;AAC/C,eAAOC,KAAK,CAAC,8DAAD,CAAZ;AACH;AACD;;;AACA,eAASC,mCAAT,CAA4C3G,KAA5C,EAAmD;AAC/C,eAAO0G,KAAK,oDAA4C1G,KAA5C,UAAZ;AACH;AACD;;;AACA,eAAS4G,mCAAT,GAA8C;AAC1C,eAAOF,KAAK,CAAC,oDAAD,CAAZ;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAIG,cAAc,GAAG,CAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,UAAS,GAAG,IAAI,2CAAA3B,cAAJ,CAAmB,SAAnB,CAAlB;AACA;;;UACM4B,Q,6BACF,oBAAc;AAAA;;AACV;AACA,aAAK/G,KAAL,GAAa,OAAb;AACA;;AACA,aAAKiE,EAAL,sBAAsB4C,cAAc,EAApC;AACH,O;;AAELE,cAAO,CAACjQ,IAAR,GAAe,SAASkQ,eAAT,CAAyBhQ,CAAzB,EAA4B;AAAE,eAAO,KAAKA,CAAC,IAAI+P,QAAV,GAAP;AAA8B,OAA3E;;AACAA,cAAO,CAAC1O,IAAR,GAAe,aAAc,gEAAyB;AAAEf,YAAI,EAAEyP,QAAR;AAAiBzO,iBAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4CmF,iBAAS,EAAE,CAAC,CAAD,EAAI,UAAJ,CAAvD;AAAwEyC,gBAAQ,EAAE,CAAlF;AAAqFxC,oBAAY,EAAE,SAASuJ,oBAAT,CAA8BrJ,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACtM,sEAAmB,IAAnB,EAAyBC,GAAG,CAACoG,EAA7B,EAAiC,OAAjC,EAA0C,IAA1C;;AACA,sEAAmB,yBAAnB,EAA8CpG,GAAG,CAACmC,KAAJ,KAAc,KAA5D;AACH;AAAE,SAH+C;AAG7ChC,cAAM,EAAE;AAAEgC,eAAK,EAAE,OAAT;AAAkBiE,YAAE,EAAE;AAAtB,SAHqC;AAGPyB,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAEC,iBAAO,EAAEmB,UAAX;AAAsBlB,qBAAW,EAAEmB;AAAnC,SAAD,CAA1B,CAAD;AAHH,OAAzB,CAA7B;AAIAA,cAAO,CAACtO,cAAR,GAAyB;AACrBuH,aAAK,EAAE,CAAC;AAAE1I,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CADc;AAErB2F,UAAE,EAAE,CAAC;AAAE3M,cAAI,EAAE,2CAAAgH;AAAR,SAAD;AAFiB,OAAzB;;AAIA,OAAC,YAAY;AAAE,SAAC,OAAO7G,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBsP,QAAzB,EAAkC,CAAC;AAC7FzP,cAAI,EAAE,2CAAAqB,SADuF;AAE7FhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,UADX;AAEC4F,gBAAI,EAAE;AACF,uBAAS,UADP;AAEF,iDAAmC,iBAFjC;AAGF,2BAAa,IAHX;AAIF;AACA,8BAAgB;AALd,aAFP;AASCsH,qBAAS,EAAE,CAAC;AAAEH,qBAAO,EAAEmB,UAAX;AAAsBlB,yBAAW,EAAEmB;AAAnC,aAAD;AATZ,WAAD;AAFuF,SAAD,CAAlC,EAa1D,YAAY;AAAE,iBAAO,EAAP;AAAY,SAbgC,EAa9B;AAAE/G,eAAK,EAAE,CAAC;AAClC1I,gBAAI,EAAE,2CAAAgH;AAD4B,WAAD,CAAT;AAExB2F,YAAE,EAAE,CAAC;AACL3M,gBAAI,EAAE,2CAAAgH;AADD,WAAD;AAFoB,SAb8B,CAAnD;AAiBC,OAjBhB;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;UACM4I,S;;;;AAENA,eAAQ,CAACpQ,IAAT,GAAgB,SAASqQ,gBAAT,CAA0BnQ,CAA1B,EAA6B;AAAE,eAAO,KAAKA,CAAC,IAAIkQ,SAAV,GAAP;AAA+B,OAA9E;;AACAA,eAAQ,CAAC7O,IAAT,GAAgB,aAAc,gEAAyB;AAAEf,YAAI,EAAE4P,SAAR;AAAkB5O,iBAAS,EAAE,CAAC,CAAC,WAAD,CAAD;AAA7B,OAAzB,CAA9B;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOb,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyByP,SAAzB,EAAmC,CAAC;AAC9F5P,cAAI,EAAE,2CAAAqB,SADwF;AAE9FhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE;AADX,WAAD;AAFwF,SAAD,CAAnC,EAK1D,IAL0D,EAKpD,IALoD,CAAnD;AAKO,OALtB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMwO,e;;;;AAENA,qBAAc,CAACtQ,IAAf,GAAsB,SAASuQ,sBAAT,CAAgCrQ,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAIoQ,eAAV,GAAP;AAAqC,OAAhG;;AACAA,qBAAc,CAAC/O,IAAf,GAAsB,aAAc,gEAAyB;AAAEf,YAAI,EAAE8P,eAAR;AAAwB9O,iBAAS,EAAE,CAAC,CAAC,iBAAD,CAAD;AAAnC,OAAzB,CAApC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOb,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB2P,eAAzB,EAAyC,CAAC;AACpG9P,cAAI,EAAE,2CAAAqB,SAD8F;AAEpGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE;AADX,WAAD;AAF8F,SAAD,CAAzC,EAK1D,IAL0D,EAKpD,IALoD,CAAnD;AAKO,OALtB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAM0O,WAAU,GAAG,IAAI,2CAAAnC,cAAJ,CAAmB,WAAnB,CAAnB;AACA;;;UACMoC,U;;;;AAENA,gBAAS,CAACzQ,IAAV,GAAiB,SAAS0Q,iBAAT,CAA2BxQ,CAA3B,EAA8B;AAAE,eAAO,KAAKA,CAAC,IAAIuQ,UAAV,GAAP;AAAgC,OAAjF;;AACAA,gBAAS,CAAClP,IAAV,GAAiB,aAAc,gEAAyB;AAAEf,YAAI,EAAEiQ,UAAR;AAAmBjP,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAA9B;AAAuDoN,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAEC,iBAAO,EAAE2B,WAAX;AAAuB1B,qBAAW,EAAE2B;AAApC,SAAD,CAA1B,CAAD;AAAjE,OAAzB,CAA/B;;AACA,OAAC,YAAY;AAAE,SAAC,OAAO9P,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB8P,UAAzB,EAAoC,CAAC;AAC/FjQ,cAAI,EAAE,2CAAAqB,SADyF;AAE/FhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,aADX;AAECkN,qBAAS,EAAE,CAAC;AAAEH,qBAAO,EAAE2B,WAAX;AAAuB1B,yBAAW,EAAE2B;AAApC,aAAD;AAFZ,WAAD;AAFyF,SAAD,CAApC,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAME,WAAU,GAAG,IAAI,2CAAAtC,cAAJ,CAAmB,WAAnB,CAAnB;AACA;;;UACMuC,U;;;;AAENA,gBAAS,CAAC5Q,IAAV,GAAiB,SAAS6Q,iBAAT,CAA2B3Q,CAA3B,EAA8B;AAAE,eAAO,KAAKA,CAAC,IAAI0Q,UAAV,GAAP;AAAgC,OAAjF;;AACAA,gBAAS,CAACrP,IAAV,GAAiB,aAAc,gEAAyB;AAAEf,YAAI,EAAEoQ,UAAR;AAAmBpP,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAA9B;AAAuDoN,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAEC,iBAAO,EAAE8B,WAAX;AAAuB7B,qBAAW,EAAE8B;AAApC,SAAD,CAA1B,CAAD;AAAjE,OAAzB,CAA/B;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOjQ,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBiQ,UAAzB,EAAoC,CAAC;AAC/FpQ,cAAI,EAAE,2CAAAqB,SADyF;AAE/FhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,aADX;AAECkN,qBAAS,EAAE,CAAC;AAAEH,qBAAO,EAAE8B,WAAX;AAAuB7B,yBAAW,EAAE8B;AAApC,aAAD;AAFZ,WAAD;AAFyF,SAAD,CAApC,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAIE,YAAY,GAAG,CAAnB;AACA,UAAMC,kBAAkB,GAAG,IAA3B;AACA,UAAMC,iBAAiB,GAAG,CAA1B;AACA;AACA;AACA;AACA;;AACA,UAAMC,iBAAiB,GAAG,wDAAAC,UAAA;AACtB,wBAAYnQ,WAAZ,EAAyB;AAAA;;AACrB,eAAKA,WAAL,GAAmBA,WAAnB;AACH;;AAHqB;AAAA,WAIvB,SAJuB,CAA1B;AAKA;AACA;AACA;AACA;;;AACA,UAAMoQ,+BAA8B,GAAG,IAAI,2CAAA9C,cAAJ,CAAmB,gCAAnB,CAAvC;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAM+C,eAAc,GAAG,IAAI,2CAAA/C,cAAJ,CAAmB,cAAnB,CAAvB;AACA;;;UACMgD,a;;;;;AACF,+BAAY7C,UAAZ,EAAwB8C,kBAAxB;AACA;AACJ;AACA;AACA;AACI;AACAC,qBANA,EAMeC,IANf,EAMqBC,SANrB,EAMgC5T,SANhC,EAM2CC,OAN3C,EAMoDuM,cANpD,EAMoE;AAAA;;AAAA;;AAChE,qCAAMmE,UAAN;AACA,iBAAK8C,kBAAL,GAA0BA,kBAA1B;AACA,iBAAKE,IAAL,GAAYA,IAAZ;AACA,iBAAKC,SAAL,GAAiBA,SAAjB;AACA,iBAAK5T,SAAL,GAAiBA,SAAjB;AACA,iBAAKC,OAAL,GAAeA,OAAf;AACA;AACR;AACA;AACA;;AACQ,iBAAK4T,uCAAL,GAA+C,KAA/C;AACA;;AACA,iBAAKC,oCAAL,GAA4C,KAA5C;AACA,iBAAK1P,UAAL,GAAkB,IAAI,kCAAAvD,OAAJ,EAAlB;AACA;;AACA,iBAAKkT,kBAAL,GAA0B,KAA1B;AACA;;AACA,iBAAKhE,wBAAL,GAAgC,EAAhC;AACA,iBAAKiE,UAAL,GAAkB,EAAlB,CAnBgE,CAoBhE;;AACA,iBAAK9D,YAAL,sBAAgC+C,YAAY,EAA5C,EArBgE,CAsBhE;;AACA,iBAAK7D,QAAL,kCAAwC6D,YAAY,EAApD;AACA,iBAAKgB,UAAL,GAAkB,OAAKC,0BAAL,EAAlB;AACA,iBAAKC,kBAAL,GAA0B3H,cAAc,KAAK,gBAA7C,CAzBgE,CA0BhE;;AACA,iBAAK2C,UAAL,GAAmByE,SAAS,IAAIA,SAAS,CAACzE,UAAxB,GAAsCyE,SAAS,CAACzE,UAAhD,GAA6D,QAA/E;AACA,iBAAKiF,mBAAL,GAA4BR,SAAS,IAAIA,SAAS,CAACrE,kBAAV,IAAgC,IAA9C,GACvBqE,SAAS,CAACrE,kBADa,GACQ,KADnC;AA5BgE;AA8BnE;AACD;;;;;eACA,eAAiB;AAAE,mBAAO,KAAK8E,WAAZ;AAA0B,W;eAC7C,aAAevP,KAAf,EAAsB;AAClB,gBAAMwP,QAAQ,GAAG,KAAKD,WAAtB;AACA,iBAAKA,WAAL,GAAmBvP,KAAK,IAAK,KAAK8O,SAAL,IAAkB,KAAKA,SAAL,CAAezE,UAA3C,IAA0D,QAA7E;;AACA,gBAAI,KAAKkF,WAAL,KAAqB,SAArB,IAAkCC,QAAQ,KAAKxP,KAAnD,EAA0D;AACtD,mBAAKgP,oCAAL,GAA4C,IAA5C;AACH;AACJ;AACD;;;;eACA,eAAyB;AAAE,mBAAO,KAAKM,mBAAZ;AAAkC,W;eAC7D,aAAuBtP,KAAvB,EAA8B;AAC1B,iBAAKsP,mBAAL,GAA2B,uDAAAjP,qBAAA,EAAsBL,KAAtB,CAA3B;AACH;AACD;;;;iBACA,8BAAqB;AACjB,mBAAO,KAAKmP,UAAL,KAAoB,QAApB,IAAgC,CAAC,KAAKF,kBAA7C;AACH;AACD;;;;iBACA,0BAAiB;AAAE,mBAAO,KAAKE,UAAL,KAAoB,OAA3B;AAAqC;AACxD;;;;eACA,eAAgB;AAAE,mBAAO,KAAKD,UAAZ;AAAyB,W;eAC3C,aAAclP,KAAd,EAAqB;AACjB,iBAAKkP,UAAL,GAAkBlP,KAAlB;;AACA,iBAAKyP,aAAL;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACI,eAAiB;AACb,mBAAO,KAAKpF,UAAL,KAAoB,QAApB,IAAgC,KAAKqF,WAAL,KAAqB,OAArD,GAA+D,MAA/D,GAAwE,KAAKA,WAApF;AACH,W;eACD,aAAe1P,KAAf,EAAsB;AAClB,gBAAIA,KAAK,KAAK,KAAK0P,WAAnB,EAAgC;AAC5B,mBAAKA,WAAL,GAAmB1P,KAAK,IAAI,KAAKoP,0BAAL,EAA5B;;AACA,mBAAKT,kBAAL,CAAwBgB,YAAxB;AACH;AACJ;;;eACD,eAAe;AACX;AACA;AACA,mBAAO,KAAKC,yBAAL,IAAkC,KAAKC,iBAAvC,IAA4D,KAAKC,cAAxE;AACH,W;eACD,aAAa9P,KAAb,EAAoB;AAChB,iBAAK4P,yBAAL,GAAiC5P,KAAjC;AACH;AACD;AACJ;AACA;;;;iBACI,sBAAa;AACT,mBAAO,KAAK+P,iBAAL,KAA2B,KAAKzF,QAAhC,GAA2C,IAAlD;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,qCAA4B;AACxB,mBAAO,KAAK0F,uBAAL,IAAgC,KAAK5R,WAA5C;AACH;;;iBACD,8BAAqB;AAAA;;AACjB,iBAAK6R,qBAAL;;AACA,gBAAMC,OAAO,GAAG,KAAKzG,QAArB;;AACA,gBAAIyG,OAAO,CAACC,WAAZ,EAAyB;AACrB,mBAAK/R,WAAL,CAAiB0B,aAAjB,CAA+B1D,SAA/B,CAAyCE,GAAzC,+BAAoE4T,OAAO,CAACC,WAA5E;AACH,aALgB,CAMjB;;;AACAD,mBAAO,CAACE,YAAR,CAAqB7O,IAArB,CAA0B,gDAAA8O,SAAA,EAAU,IAAV,CAA1B,EAA2C5R,SAA3C,CAAqD,YAAM;AACvD,oBAAI,CAAC6R,qBAAL;;AACA,oBAAI,CAACC,mBAAL;;AACA,oBAAI,CAAC5B,kBAAL,CAAwBgB,YAAxB;AACH,aAJD,EAPiB,CAYjB;;AACA,gBAAIO,OAAO,CAACM,SAAR,IAAqBN,OAAO,CAACM,SAAR,CAAkBC,YAA3C,EAAyD;AACrDP,qBAAO,CAACM,SAAR,CAAkBC,YAAlB,CACKlP,IADL,CACU,gDAAAE,SAAA,EAAU,KAAKnC,UAAf,CADV,EAEKb,SAFL,CAEe;AAAA,uBAAM,MAAI,CAACkQ,kBAAL,CAAwBgB,YAAxB,EAAN;AAAA,eAFf;AAGH,aAjBgB,CAkBjB;AACA;AACA;;;AACA,iBAAKxU,OAAL,CAAayB,iBAAb,CAA+B,YAAM;AACjC,oBAAI,CAACzB,OAAL,CAAauV,QAAb,CAAsBnP,IAAtB,CAA2B,gDAAAE,SAAA,EAAU,MAAI,CAACnC,UAAf,CAA3B,EAAuDb,SAAvD,CAAiE,YAAM;AACnE,oBAAI,MAAI,CAACuQ,oCAAT,EAA+C;AAC3C,wBAAI,CAAChF,gBAAL;AACH;AACJ,eAJD;AAKH,aAND,EArBiB,CA4BjB;;;AACA,kDAAA2G,KAAA,EAAM,KAAKC,eAAL,CAAqBC,OAA3B,EAAoC,KAAKC,eAAL,CAAqBD,OAAzD,EAAkEpS,SAAlE,CAA4E,YAAM;AAC9E,oBAAI,CAACuQ,oCAAL,GAA4C,IAA5C;;AACA,oBAAI,CAACL,kBAAL,CAAwBgB,YAAxB;AACH,aAHD,EA7BiB,CAiCjB;;AACA,iBAAKoB,aAAL,CAAmBF,OAAnB,CAA2BtP,IAA3B,CAAgC,gDAAA8O,SAAA,EAAU,IAAV,CAAhC,EAAiD5R,SAAjD,CAA2D,YAAM;AAC7D,oBAAI,CAACgR,aAAL;;AACA,oBAAI,CAACd,kBAAL,CAAwBgB,YAAxB;AACH,aAHD,EAlCiB,CAsCjB;;;AACA,iBAAKqB,cAAL,CAAoBH,OAApB,CAA4BtP,IAA5B,CAAiC,gDAAA8O,SAAA,EAAU,IAAV,CAAjC,EAAkD5R,SAAlD,CAA4D,YAAM;AAC9D,oBAAI,CAAC8R,mBAAL;;AACA,oBAAI,CAAC5B,kBAAL,CAAwBgB,YAAxB;AACH,aAHD;;AAIA,gBAAI,KAAKd,IAAT,EAAe;AACX,mBAAKA,IAAL,CAAUoC,MAAV,CAAiB1P,IAAjB,CAAsB,gDAAAE,SAAA,EAAU,KAAKnC,UAAf,CAAtB,EAAkDb,SAAlD,CAA4D,YAAM;AAC9D,oBAAI,OAAO2E,qBAAP,KAAiC,UAArC,EAAiD;AAC7C,wBAAI,CAACjI,OAAL,CAAayB,iBAAb,CAA+B,YAAM;AACjCwG,yCAAqB,CAAC;AAAA,6BAAM,MAAI,CAAC4G,gBAAL,EAAN;AAAA,qBAAD,CAArB;AACH,mBAFD;AAGH,iBAJD,MAKK;AACD,wBAAI,CAACA,gBAAL;AACH;AACJ,eATD;AAUH;AACJ;;;iBACD,iCAAwB;AACpB,iBAAKiG,qBAAL;;AACA,gBAAI,KAAKlB,uCAAT,EAAkD;AAC9C,mBAAK/E,gBAAL;AACH;AACJ;;;iBACD,2BAAkB;AACd;AACA,iBAAKiB,wBAAL,GAAgC,OAAhC;;AACA,iBAAK0D,kBAAL,CAAwBuC,aAAxB;AACH;;;iBACD,uBAAc;AACV,iBAAK5R,UAAL,CAAgB9C,IAAhB;;AACA,iBAAK8C,UAAL,CAAgBrC,QAAhB;AACH;AACD;;;;iBACA,wBAAekU,IAAf,EAAqB;AACjB,gBAAMX,SAAS,GAAG,KAAK/G,QAAL,GAAgB,KAAKA,QAAL,CAAc+G,SAA9B,GAA0C,IAA5D;AACA,mBAAOA,SAAS,IAAIA,SAAS,CAACW,IAAD,CAA7B;AACH;;;iBACD,2BAAkB;AACd,mBAAO,CAAC,EAAE,KAAK1H,QAAL,IAAiB,KAAKA,QAAL,CAAcjJ,WAA/B,IAA8C,KAAK4Q,iBAArD,CAAR;AACH;;;iBACD,qBAAY;AACR,mBAAO,CAAC,EAAE,KAAKC,oBAAL,IAA6B,KAAKC,iBAApC,CAAR;AACH;;;iBACD,6BAAoB;AAChB,mBAAO,KAAKC,cAAL,OACD,KAAK9H,QAAL,IAAiB,KAAKA,QAAL,CAAc+H,gBAAhC,IAAqD,KAAKrH,kBAAL,EADnD,CAAP;AAEH;;;iBACD,mCAA0B;AACtB;AACA,mBAAO,KAAKE,UAAL,KAAoB,QAApB,IAAgC,CAAC,KAAKE,SAAL,EAAjC,IACH,KAAKA,SAAL,MAAoB,CAAC,KAAKkH,iBAAL,EADzB;AAEH;;;iBACD,6BAAoB;AAChB;AACA,mBAAO,KAAKlH,SAAL,MAAoB,KAAKF,UAAL,KAAoB,QAApB,IAAgC,KAAKqH,eAAL,EAA3D;AACH;AACD;;;;iBACA,iCAAwB;AACpB,mBAAQ,KAAKV,cAAL,IAAuB,KAAKA,cAAL,CAAoBW,MAApB,GAA6B,CAApD,IACJ,KAAKlI,QAAL,CAAcmI,UADX,GACyB,OADzB,GACmC,MAD1C;AAEH;AACD;;;;iBACA,gCAAuB;AAAA;;AACnB,gBAAI,KAAK7B,iBAAL,MAA4B,KAAKwB,cAAL,EAAhC,EAAuD;AACnD;AACA;AACA,kBAAI,KAAKlC,kBAAL,IAA2B,KAAKwC,MAApC,EAA4C;AACxC,qBAAK5C,kBAAL,GAA0B,IAA1B;AACA,sDAAA3N,SAAA,EAAU,KAAKuQ,MAAL,CAAY/R,aAAtB,EAAqC,eAArC,EAAsDyB,IAAtD,CAA2D,gDAAAuQ,IAAA,EAAK,CAAL,CAA3D,EAAoErT,SAApE,CAA8E,YAAM;AAChF,wBAAI,CAACwQ,kBAAL,GAA0B,KAA1B;AACH,iBAFD;AAGH;;AACD,mBAAKE,UAAL,GAAkB,QAAlB;;AACA,mBAAKR,kBAAL,CAAwBgB,YAAxB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,iCAAwB;AACpB,gBAAI,KAAKlG,QAAL,CAAcjJ,WAAd,IAA6B,KAAK4Q,iBAAlC,KACC,OAAOpT,SAAP,KAAqB,WAArB,IAAoCA,SADrC,CAAJ,EACqD;AACjD,oBAAMgP,wCAAuC,EAA7C;AACH;AACJ;AACD;;;;iBACA,yBAAgB;AACZ,iBAAK+E,cAAL;;AACA,iBAAKxB,mBAAL;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,0BAAiB;AAAA;;AACb,gBAAI,KAAKQ,aAAL,KAAuB,OAAO/S,SAAP,KAAqB,WAArB,IAAoCA,SAA3D,CAAJ,EAA2E;AACvE,kBAAIgU,SAAJ;AACA,kBAAIC,OAAJ;;AACA,mBAAKlB,aAAL,CAAmB7T,OAAnB,CAA2B,UAACgV,IAAD,EAAU;AACjC,oBAAIA,IAAI,CAAC3L,KAAL,KAAe,OAAnB,EAA4B;AACxB,sBAAIyL,SAAS,IAAI,OAAI,CAAC3G,SAAtB,EAAiC;AAC7B,0BAAM6B,mCAAkC,CAAC,OAAD,CAAxC;AACH;;AACD8E,2BAAS,GAAGE,IAAZ;AACH,iBALD,MAMK,IAAIA,IAAI,CAAC3L,KAAL,KAAe,KAAnB,EAA0B;AAC3B,sBAAI0L,OAAJ,EAAa;AACT,0BAAM/E,mCAAkC,CAAC,KAAD,CAAxC;AACH;;AACD+E,yBAAO,GAAGC,IAAV;AACH;AACJ,eAbD;AAcH;AACJ;AACD;;;;iBACA,sCAA6B;AACzB,mBAAQ,KAAKpD,SAAL,IAAkB,KAAKA,SAAL,CAAeK,UAAlC,IAAiD,MAAxD;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,+BAAsB;AAClB,gBAAI,KAAK1F,QAAT,EAAmB;AACf,kBAAI0I,GAAG,GAAG,EAAV,CADe,CAEf;;AACA,kBAAI,KAAK1I,QAAL,CAAc2I,mBAAd,IACA,OAAO,KAAK3I,QAAL,CAAc2I,mBAArB,KAA6C,QADjD,EAC2D;AACvDD,mBAAG,CAACE,IAAJ,OAAAF,GAAG,qBAAS,KAAK1I,QAAL,CAAc2I,mBAAd,CAAkCE,KAAlC,CAAwC,GAAxC,CAAT,EAAH;AACH;;AACD,kBAAI,KAAKC,qBAAL,OAAiC,MAArC,EAA6C;AACzC,oBAAMP,SAAS,GAAG,KAAKjB,aAAL,GACd,KAAKA,aAAL,CAAmByB,IAAnB,CAAwB,UAAAN,IAAI;AAAA,yBAAIA,IAAI,CAAC3L,KAAL,KAAe,OAAnB;AAAA,iBAA5B,CADc,GAC4C,IAD9D;AAEA,oBAAM0L,OAAO,GAAG,KAAKlB,aAAL,GACZ,KAAKA,aAAL,CAAmByB,IAAnB,CAAwB,UAAAN,IAAI;AAAA,yBAAIA,IAAI,CAAC3L,KAAL,KAAe,KAAnB;AAAA,iBAA5B,CADY,GAC4C,IAD5D;;AAEA,oBAAIyL,SAAJ,EAAe;AACXG,qBAAG,CAACE,IAAJ,CAASL,SAAS,CAACxH,EAAnB;AACH,iBAFD,MAGK,IAAI,KAAK0E,UAAT,EAAqB;AACtBiD,qBAAG,CAACE,IAAJ,CAAS,KAAKjH,YAAd;AACH;;AACD,oBAAI6G,OAAJ,EAAa;AACTE,qBAAG,CAACE,IAAJ,CAASJ,OAAO,CAACzH,EAAjB;AACH;AACJ,eAdD,MAeK,IAAI,KAAKwG,cAAT,EAAyB;AAC1BmB,mBAAG,CAACE,IAAJ,OAAAF,GAAG,qBAAS,KAAKnB,cAAL,CAAoByB,GAApB,CAAwB,UAAAC,KAAK;AAAA,yBAAIA,KAAK,CAAClI,EAAV;AAAA,iBAA7B,CAAT,EAAH;AACH;;AACD,mBAAKf,QAAL,CAAckJ,iBAAd,CAAgCR,GAAhC;AACH;AACJ;AACD;;;;iBACA,iCAAwB;AACpB,gBAAI,CAAC,KAAK1I,QAAN,KAAmB,OAAOzL,SAAP,KAAqB,WAArB,IAAoCA,SAAvD,CAAJ,EAAuE;AACnE,oBAAMmP,mCAAkC,EAAxC;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,4BAAmB;AACf,gBAAMyF,OAAO,GAAG,KAAKf,MAAL,GAAc,KAAKA,MAAL,CAAY/R,aAA1B,GAA0C,IAA1D;;AACA,gBAAI,KAAKuK,UAAL,KAAoB,SAApB,IAAiC,CAACuI,OAAlC,IAA6C,CAACA,OAAO,CAACC,QAAR,CAAiBlB,MAA/D,IACA,CAACiB,OAAO,CAACE,WAAR,CAAoBC,IAApB,EADL,EACiC;AAC7B;AACH;;AACD,gBAAI,CAAC,KAAK7X,SAAL,CAAeK,SAApB,EAA+B;AAC3B;AACA;AACH,aATc,CAUf;AACA;;;AACA,gBAAI,CAAC,KAAKyX,gBAAL,EAAL,EAA8B;AAC1B,mBAAKjE,uCAAL,GAA+C,IAA/C;AACA;AACH;;AACD,gBAAIkE,UAAU,GAAG,CAAjB;AACA,gBAAIC,QAAQ,GAAG,CAAf;AACA,gBAAMC,SAAS,GAAG,KAAKnD,uBAAL,CAA6BlQ,aAA/C;AACA,gBAAMsT,QAAQ,GAAGD,SAAS,CAACE,gBAAV,CAA2B,+BAA3B,CAAjB;AACA,gBAAMC,MAAM,GAAGH,SAAS,CAACE,gBAAV,CAA2B,6BAA3B,CAAf;;AACA,gBAAI,KAAKxB,MAAL,IAAe,KAAKA,MAAL,CAAY/R,aAAZ,CAA0B+S,QAA1B,CAAmClB,MAAtD,EAA8D;AAC1D,kBAAM4B,aAAa,GAAGJ,SAAS,CAACK,qBAAV,EAAtB,CAD0D,CAE1D;AACA;AACA;AACA;AACA;AACA;;AACA,kBAAID,aAAa,CAACE,KAAd,KAAwB,CAAxB,IAA6BF,aAAa,CAACpS,MAAd,KAAyB,CAA1D,EAA6D;AACzD,qBAAK6N,oCAAL,GAA4C,IAA5C;AACA,qBAAKD,uCAAL,GAA+C,KAA/C;AACA;AACH;;AACD,kBAAM2E,cAAc,GAAG,KAAKC,YAAL,CAAkBJ,aAAlB,CAAvB;;AACA,kBAAMK,aAAa,GAAGhB,OAAO,CAACC,QAA9B;;AACA,kBAAMgB,UAAU,GAAG,KAAKF,YAAL,CAAkBC,aAAa,CAAC,CAAD,CAAb,CAAiBJ,qBAAjB,EAAlB,CAAnB;;AACA,kBAAIM,UAAU,GAAG,CAAjB;;AACA,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,aAAa,CAACjC,MAAlC,EAA0CoC,CAAC,EAA3C,EAA+C;AAC3CD,0BAAU,IAAIF,aAAa,CAACG,CAAD,CAAb,CAAiBC,WAA/B;AACH;;AACDf,wBAAU,GAAG/P,IAAI,CAAC+Q,GAAL,CAASJ,UAAU,GAAGH,cAAtB,IAAwCrF,iBAArD;AACA6E,sBAAQ,GAAGY,UAAU,GAAG,CAAb,GAAiBA,UAAU,GAAG1F,kBAAb,GAAkCC,iBAAiB,GAAG,CAAvE,GAA2E,CAAtF;AACH;;AACD,iBAAK,IAAI0F,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGX,QAAQ,CAACzB,MAA7B,EAAqCoC,EAAC,EAAtC,EAA0C;AACtCX,sBAAQ,CAACW,EAAD,CAAR,CAAYhT,KAAZ,CAAkB0S,KAAlB,aAA6BR,UAA7B;AACH;;AACD,iBAAK,IAAIc,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGT,MAAM,CAAC3B,MAA3B,EAAmCoC,GAAC,EAApC,EAAwC;AACpCT,oBAAM,CAACS,GAAD,CAAN,CAAUhT,KAAV,CAAgB0S,KAAhB,aAA2BP,QAA3B;AACH;;AACD,iBAAKlE,oCAAL,GACI,KAAKD,uCAAL,GAA+C,KADnD;AAEH;AACD;;;;iBACA,sBAAamF,IAAb,EAAmB;AACf,mBAAQ,KAAKrF,IAAL,IAAa,KAAKA,IAAL,CAAU7O,KAAV,KAAoB,KAAlC,GAA2CkU,IAAI,CAACC,KAAhD,GAAwDD,IAAI,CAACE,IAApE;AACH;AACD;;;;iBACA,4BAAmB;AACf,gBAAM3Y,OAAO,GAAG,KAAK2C,WAAL,CAAiB0B,aAAjC;;AACA,gBAAIrE,OAAO,CAAC4Y,WAAZ,EAAyB;AACrB,kBAAMC,QAAQ,GAAG7Y,OAAO,CAAC4Y,WAAR,EAAjB,CADqB,CAErB;AACA;;AACA,qBAAOC,QAAQ,IAAIA,QAAQ,KAAK7Y,OAAhC;AACH,aAPc,CAQf;AACA;;;AACA,mBAAO4D,QAAQ,CAACkV,eAAT,CAAyBlY,QAAzB,CAAkCZ,OAAlC,CAAP;AACH;;;;QApXsB6S,iB;;AAsX3BI,mBAAY,CAACrR,IAAb,GAAoB,SAASmX,oBAAT,CAA8BjX,CAA9B,EAAiC;AAAE,eAAO,KAAKA,CAAC,IAAImR,aAAV,EAAwB,gEAAyB,qDAAzB,CAAxB,EAAqE,gEAAyB,4DAAzB,CAArE,EAAyH,gEAAyB,2CAAA3P,UAAzB,CAAzH,EAA+J,gEAAyB,8DAAzB,EAAgD,CAAhD,CAA/J,EAAmN,gEAAyByP,+BAAzB,EAAyD,CAAzD,CAAnN,EAAgR,gEAAyB,4DAAzB,CAAhR,EAA2T,gEAAyB,iDAAzB,CAA3T,EAAoW,gEAAyB,mEAAA5G,qBAAzB,EAAgD,CAAhD,CAApW,CAAP;AAAia,OAAxd;;AACA8G,mBAAY,CAAC7G,IAAb,GAAoB,aAAc,gEAAyB;AAAEhK,YAAI,EAAE6Q,aAAR;AAAsB7P,iBAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,CAAjC;AAAuD4V,sBAAc,EAAE,SAASC,2BAAT,CAAqCvQ,EAArC,EAAyCC,GAAzC,EAA8CuQ,QAA9C,EAAwD;AAAE,cAAIxQ,EAAE,GAAG,CAAT,EAAY;AAChM,yEAAsBwQ,QAAtB,EAAgC7H,oBAAhC,EAAqD,CAArD;;AACA,yEAAsB6H,QAAtB,EAAgC7H,oBAAhC,EAAqD,CAArD;;AACA,yEAAsB6H,QAAtB,EAAgClH,SAAhC,EAA0C,CAA1C;;AACA,yEAAsBkH,QAAtB,EAAgClH,SAAhC,EAA0C,CAA1C;;AACA,yEAAsBkH,QAAtB,EAAgChH,eAAhC,EAAgD,CAAhD;;AACA,yEAAsBgH,QAAtB,EAAgClJ,UAAhC,EAA2C,CAA3C;;AACA,yEAAsBkJ,QAAtB,EAAgCtH,UAAhC,EAA2C,CAA3C;;AACA,yEAAsBsH,QAAtB,EAAgC9G,WAAhC,EAA4C,CAA5C;;AACA,yEAAsB8G,QAAtB,EAAgC3G,WAAhC,EAA4C,CAA5C;AACH;;AAAC,cAAI7J,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIyQ,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDxQ,GAAG,CAACyL,iBAAJ,GAAwB+E,EAAE,CAACC,KAAhF;AACA,yEAAsBD,EAAE,GAAG,2DAA3B,MAAqDxQ,GAAG,CAAC0L,cAAJ,GAAqB8E,EAAE,CAACC,KAA7E;AACA,yEAAsBD,EAAE,GAAG,2DAA3B,MAAqDxQ,GAAG,CAACiN,oBAAJ,GAA2BuD,EAAE,CAACC,KAAnF;AACA,yEAAsBD,EAAE,GAAG,2DAA3B,MAAqDxQ,GAAG,CAACkN,iBAAJ,GAAwBsD,EAAE,CAACC,KAAhF;AACA,yEAAsBD,EAAE,GAAG,2DAA3B,MAAqDxQ,GAAG,CAACgN,iBAAJ,GAAwBwD,EAAE,CAACC,KAAhF;AACA,yEAAsBD,EAAE,GAAG,2DAA3B,MAAqDxQ,GAAG,CAAC4M,cAAJ,GAAqB4D,EAA1E;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDxQ,GAAG,CAAC2M,aAAJ,GAAoB6D,EAAzE;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDxQ,GAAG,CAACwM,eAAJ,GAAsBgE,EAA3E;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDxQ,GAAG,CAAC0M,eAAJ,GAAsB8D,EAA3E;AACH;AAAE,SArBoD;AAqBlDE,iBAAS,EAAE,SAASC,kBAAT,CAA4B5Q,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/D,sEAAmBuB,GAAnB,EAAwB,CAAxB;;AACA,sEAAmBC,GAAnB,EAAwB,CAAxB;;AACA,sEAAmBC,GAAnB,EAAwB,CAAxB;;AACA,sEAAmBC,GAAnB,EAAwB,CAAxB;AACH;;AAAC,cAAI1B,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIyQ,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDxQ,GAAG,CAAC4Q,YAAJ,GAAmBJ,EAAE,CAACC,KAA3E;AACA,yEAAsBD,EAAE,GAAG,2DAA3B,MAAqDxQ,GAAG,CAAC4L,uBAAJ,GAA8B4E,EAAE,CAACC,KAAtF;AACA,yEAAsBD,EAAE,GAAG,2DAA3B,MAAqDxQ,GAAG,CAAC6Q,kBAAJ,GAAyBL,EAAE,CAACC,KAAjF;AACA,yEAAsBD,EAAE,GAAG,2DAA3B,MAAqDxQ,GAAG,CAACyN,MAAJ,GAAa+C,EAAE,CAACC,KAArE;AACH;AAAE,SAhCoD;AAgClD7Q,iBAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ,CAhCuC;AAgChByC,gBAAQ,EAAE,EAhCM;AAgCFxC,oBAAY,EAAE,SAASiR,yBAAT,CAAmC/Q,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACzH,sEAAmB,oCAAnB,EAAyDC,GAAG,CAACiG,UAAJ,IAAkB,UAA3E,EAAuF,gCAAvF,EAAyHjG,GAAG,CAACiG,UAAJ,IAAkB,MAA3I,EAAmJ,mCAAnJ,EAAwLjG,GAAG,CAACiG,UAAJ,IAAkB,SAA1M,EAAqN,kCAArN,EAAyPjG,GAAG,CAACiG,UAAJ,IAAkB,QAA3Q,EAAqR,wBAArR,EAA+SjG,GAAG,CAACqF,QAAJ,CAAamI,UAA5T,EAAwU,0BAAxU,EAAoWxN,GAAG,CAACmN,cAAJ,EAApW,EAA0X,6BAA1X,EAAyZnN,GAAG,CAACqN,iBAAJ,EAAzZ,EAAkb,0BAAlb,EAA8crN,GAAG,CAAC2L,iBAAJ,EAA9c,EAAue,iCAAve,EAA0gB3L,GAAG,CAAC+Q,uBAAJ,EAA1gB,EAAyiB,yBAAziB,EAAokB/Q,GAAG,CAACqF,QAAJ,CAAakB,QAAjlB,EAA2lB,2BAA3lB,EAAwnBvG,GAAG,CAACqF,QAAJ,CAAa2L,UAAroB,EAAipB,aAAjpB,EAAgqBhR,GAAG,CAACqF,QAAJ,CAAa4L,OAA7qB,EAAsrB,cAAtrB,EAAssBjR,GAAG,CAACkR,cAAJ,CAAmB,WAAnB,CAAtsB,EAAuuB,YAAvuB,EAAqvBlR,GAAG,CAACkR,cAAJ,CAAmB,SAAnB,CAArvB,EAAoxB,aAApxB,EAAmyBlR,GAAG,CAACkR,cAAJ,CAAmB,UAAnB,CAAnyB,EAAm0B,UAAn0B,EAA+0BlR,GAAG,CAACkR,cAAJ,CAAmB,OAAnB,CAA/0B,EAA42B,UAA52B,EAAw3BlR,GAAG,CAACkR,cAAJ,CAAmB,OAAnB,CAAx3B,EAAq5B,YAAr5B,EAAm6BlR,GAAG,CAACkR,cAAJ,CAAmB,SAAnB,CAAn6B,EAAk8B,YAAl8B,EAAg9BlR,GAAG,CAACkR,cAAJ,CAAmB,SAAnB,CAAh9B,EAA++B,yBAA/+B,EAA0gC,CAAClR,GAAG,CAACiL,kBAA/gC;AACH;AAAE,SAlCoD;AAkClD9K,cAAM,EAAE;AAAE6F,eAAK,EAAE,OAAT;AAAkB+E,oBAAU,EAAE,YAA9B;AAA4C9E,oBAAU,EAAE,YAAxD;AAAsEI,4BAAkB,EAAE,oBAA1F;AAAgHY,mBAAS,EAAE;AAA3H,SAlC0C;AAkCgG5G,gBAAQ,EAAE,CAAC,cAAD,CAlC1G;AAkC4HwH,gBAAQ,EAAE,CAAC,iEAA0B,CAChN;AAAEC,iBAAO,EAAEuC,eAAX;AAA2BtC,qBAAW,EAAEuC;AAAxC,SADgN,CAA1B,CAAD,EAErL,wEAFqL,CAlCtI;AAoCX3G,0BAAkB,EAAEhC,GApCT;AAoCciC,aAAK,EAAE,EApCrB;AAoCyBC,YAAI,EAAE,CApC/B;AAoCkCY,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,wBAAJ,CAAD,EAAgC,CAAC,CAAD,EAAI,qBAAJ,EAA2B,CAA3B,EAA8B,OAA9B,CAAhC,EAAwE,CAAC,qBAAD,EAAwB,EAAxB,CAAxE,EAAqG,CAAC,CAAD,EAAI,MAAJ,CAArG,EAAkH,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,MAAtC,CAAlH,EAAiK,CAAC,CAAD,EAAI,sBAAJ,CAAjK,EAA8L,CAAC,gBAAD,EAAmB,EAAnB,CAA9L,EAAsN,CAAC,CAAD,EAAI,8BAAJ,CAAtN,EAA2P,CAAC,OAAD,EAAU,sBAAV,EAAkC,CAAlC,EAAqC,2BAArC,EAAkE,IAAlE,EAAwE,WAAxE,EAAqF,sBAArF,EAA6G,YAA7G,EAA2H,UAA3H,EAAuI,UAAvI,EAAmJ,mBAAnJ,EAAwK,CAAxK,EAA2K,MAA3K,CAA3P,EAA+a,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,MAAtC,CAA/a,EAA8d,CAAC,OAAD,EAAU,0BAAV,EAAsC,CAAtC,EAAyC,MAAzC,CAA9d,EAAghB,CAAC,CAAD,EAAI,kCAAJ,EAAwC,CAAxC,EAA2C,UAA3C,CAAhhB,EAAwkB,CAAC,CAAD,EAAI,cAAJ,CAAxkB,EAA6lB,CAAC,OAAD,EAAU,6BAAV,EAAyC,CAAzC,EAA4C,cAA5C,CAA7lB,EAA0pB,CAAC,CAAD,EAAI,wBAAJ,CAA1pB,EAAyrB,CAAC,CAAD,EAAI,8BAAJ,CAAzrB,EAA8tB,CAAC,CAAD,EAAI,4BAAJ,CAA9tB,EAAiwB,CAAC,CAAD,EAAI,4BAAJ,CAAjwB,EAAoyB,CAAC,CAAD,EAAI,wBAAJ,EAA8B,8BAA9B,CAApyB,EAAm2B,CAAC,CAAD,EAAI,uBAAJ,CAAn2B,EAAi4B,CAAC,CAAD,EAAI,sBAAJ,EAA4B,CAA5B,EAA+B,2BAA/B,EAA4D,IAA5D,EAAkE,UAAlE,EAA8E,mBAA9E,CAAj4B,EAAq+B,CAAC,OAAD,EAAU,EAAV,CAAr+B,EAAo/B,CAAC,OAAD,EAAU,yDAAV,EAAqE,aAArE,EAAoF,MAApF,EAA4F,CAA5F,EAA+F,MAA/F,CAAp/B,EAA4lC,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,0BAA3B,EAAuD,gCAAvD,CAA5lC,EAAsrC,CAAC,CAAD,EAAI,uBAAJ,CAAtrC,EAAotC,CAAC,CAAD,EAAI,0BAAJ,CAAptC,EAAqvC,CAAC,WAAD,EAAc,EAAd,CAArvC,EAAwwC,CAAC,CAAD,EAAI,uBAAJ,CAAxwC,EAAsyC,CAAC,CAAD,EAAI,6BAAJ,CAAtyC,EAA00C,CAAC,OAAD,EAAU,UAAV,EAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B,EAAkC,MAAlC,CAA10C,EAAq3C,CAAC,CAAD,EAAI,4BAAJ,CAAr3C,EAAw5C,CAAC,CAAD,EAAI,UAAJ,EAAgB,CAAhB,EAAmB,IAAnB,CAAx5C,CApC1C;AAoC69CX,gBAAQ,EAAE,SAASqN,qBAAT,CAA+BpR,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAChlD,0EAAuB2B,GAAvB;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,qEAAkB,OAAlB,EAA2B,SAAS0P,0CAAT,CAAoDC,MAApD,EAA4D;AAAE,qBAAOrR,GAAG,CAACqF,QAAJ,CAAaiM,gBAAb,IAAiCtR,GAAG,CAACqF,QAAJ,CAAaiM,gBAAb,CAA8BD,MAA9B,CAAxC;AAAgF,aAAzK;;AACA,qEAAkB,CAAlB,EAAqBpM,oCAArB,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,cAAjE,EAAiF,CAAjF;;AACA,qEAAkB,CAAlB,EAAqBC,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,KAAxD,EAA+D,CAA/D;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,uEAAoB,CAApB;;AACA,yEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,qEAAkB,CAAlB,EAAqBM,6BAArB,EAAoD,CAApD,EAAuD,EAAvD,EAA2D,OAA3D,EAAoE,CAApE;;AACA;;AACA;;AACA,qEAAkB,EAAlB,EAAsBgB,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,CAAjE;;AACA;;AACA,qEAAkB,EAAlB,EAAsBC,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA,yEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,EAAjC;;AACA,qEAAkB,EAAlB,EAAsBE,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA,qEAAkB,EAAlB,EAAsBO,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA;;AACA;AACH;;AAAC,cAAInH,EAAE,GAAG,CAAT,EAAY;AACV,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0BC,GAAG,CAACiG,UAAJ,IAAkB,SAA5C;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0BjG,GAAG,CAACwM,eAAJ,CAAoBe,MAA9C;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0BvN,GAAG,CAAC2L,iBAAJ,EAA1B;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0B3L,GAAG,CAAC0M,eAAJ,CAAoBa,MAA9C;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0BvN,GAAG,CAACiG,UAAJ,IAAkB,SAA5C;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,UAAlB,EAA8BjG,GAAG,CAACmO,qBAAJ,EAA9B;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,cAAlB,EAAkC,OAAlC;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,cAAlB,EAAkC,MAAlC;AACH;AAAE,SA1EoD;AA0ElDoD,kBAAU,EAAE,CAAC,kDAAD,EAAc,sDAAd,EAA+B,0DAA/B,EAAoD,sEAApD,CA1EsC;AA0EyCvN,cAAM,EAAE,CAAC,wpGAAD,EAA2pG,glCAA3pG,EAA6uI,8gKAA7uI,EAA6vS,o4CAA7vS,EAAmoV,wsGAAnoV,EAA60b,6oCAA70b,CA1EjD;AA0E8geC,qBAAa,EAAE,CA1E7he;AA0EgieuN,YAAI,EAAE;AAAEC,mBAAS,EAAE,CAACvJ,uBAAsB,CAACC,kBAAxB;AAAb,SA1Etie;AA0EkmejE,uBAAe,EAAE;AA1Enne,OAAzB,CAAlC;;AA2EAoG,mBAAY,CAAC9Q,cAAb,GAA8B;AAAA,eAAM,CAChC;AAAEC,cAAI,EAAE,2CAAAkB;AAAR,SADgC,EAEhC;AAAElB,cAAI,EAAE,2CAAAiY;AAAR,SAFgC,EAGhC;AAAEjY,cAAI,EAAE6C,SAAR;AAAmBgE,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAA+G,MAAR;AAAgB1G,gBAAI,EAAE,CAAC,2CAAAa,UAAD;AAAtB,WAAD;AAA/B,SAHgC,EAIhC;AAAElB,cAAI,EAAE,gDAAAkY,cAAR;AAAwBrR,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAA8G;AAAR,WAAD;AAApC,SAJgC,EAKhC;AAAE9G,cAAI,EAAE6C,SAAR;AAAmBgE,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAA8G;AAAR,WAAD,EAAqB;AAAE9G,gBAAI,EAAE,2CAAA+G,MAAR;AAAgB1G,gBAAI,EAAE,CAACsQ,+BAAD;AAAtB,WAArB;AAA/B,SALgC,EAMhC;AAAE3Q,cAAI,EAAE,oDAAAC;AAAR,SANgC,EAOhC;AAAED,cAAI,EAAE,2CAAAE;AAAR,SAPgC,EAQhC;AAAEF,cAAI,EAAE0K,MAAR;AAAgB7D,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAA8G;AAAR,WAAD,EAAqB;AAAE9G,gBAAI,EAAE,2CAAA+G,MAAR;AAAgB1G,gBAAI,EAAE,CAAC,mEAAA0J,qBAAD;AAAtB,WAArB;AAA5B,SARgC,CAAN;AAAA,OAA9B;;AAUA8G,mBAAY,CAAC1P,cAAb,GAA8B;AAC1BqL,kBAAU,EAAE,CAAC;AAAExM,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CADc;AAE1B4F,0BAAkB,EAAE,CAAC;AAAE5M,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CAFM;AAG1BwG,iBAAS,EAAE,CAAC;AAAExN,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CAHe;AAI1BsK,kBAAU,EAAE,CAAC;AAAEtR,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CAJc;AAK1BmQ,oBAAY,EAAE,CAAC;AAAEnX,cAAI,EAAE,2CAAAmY,SAAR;AAAmB9X,cAAI,EAAE,CAAC,WAAD;AAAzB,SAAD,CALY;AAM1B8R,+BAAuB,EAAE,CAAC;AAAEnS,cAAI,EAAE,2CAAAmY,SAAR;AAAmB9X,cAAI,EAAE,CAAC,qBAAD,EAAwB;AAAE,sBAAQ;AAAV,WAAxB;AAAzB,SAAD,CANC;AAO1B+W,0BAAkB,EAAE,CAAC;AAAEpX,cAAI,EAAE,2CAAAmY,SAAR;AAAmB9X,cAAI,EAAE,CAAC,gBAAD;AAAzB,SAAD,CAPM;AAQ1B2T,cAAM,EAAE,CAAC;AAAEhU,cAAI,EAAE,2CAAAmY,SAAR;AAAmB9X,cAAI,EAAE,CAAC,OAAD;AAAzB,SAAD,CARkB;AAS1B2R,yBAAiB,EAAE,CAAC;AAAEhS,cAAI,EAAE,2CAAAoY,YAAR;AAAsB/X,cAAI,EAAE,CAAC4O,oBAAD;AAA5B,SAAD,CATO;AAU1BgD,sBAAc,EAAE,CAAC;AAAEjS,cAAI,EAAE,2CAAAoY,YAAR;AAAsB/X,cAAI,EAAE,CAAC4O,oBAAD,EAAsB;AAAE,sBAAQ;AAAV,WAAtB;AAA5B,SAAD,CAVU;AAW1BuE,4BAAoB,EAAE,CAAC;AAAExT,cAAI,EAAE,2CAAAoY,YAAR;AAAsB/X,cAAI,EAAE,CAACuP,SAAD;AAA5B,SAAD,CAXI;AAY1B6D,yBAAiB,EAAE,CAAC;AAAEzT,cAAI,EAAE,2CAAAoY,YAAR;AAAsB/X,cAAI,EAAE,CAACuP,SAAD,EAAW;AAAE,sBAAQ;AAAV,WAAX;AAA5B,SAAD,CAZO;AAa1B2D,yBAAiB,EAAE,CAAC;AAAEvT,cAAI,EAAE,2CAAAoY,YAAR;AAAsB/X,cAAI,EAAE,CAACyP,eAAD;AAA5B,SAAD,CAbO;AAc1BqD,sBAAc,EAAE,CAAC;AAAEnT,cAAI,EAAE,2CAAAqY,eAAR;AAAyBhY,cAAI,EAAE,CAACuN,UAAD,EAAY;AAAE0K,uBAAW,EAAE;AAAf,WAAZ;AAA/B,SAAD,CAdU;AAe1BpF,qBAAa,EAAE,CAAC;AAAElT,cAAI,EAAE,2CAAAqY,eAAR;AAAyBhY,cAAI,EAAE,CAACmP,UAAD,EAAY;AAAE8I,uBAAW,EAAE;AAAf,WAAZ;AAA/B,SAAD,CAfW;AAgB1BvF,uBAAe,EAAE,CAAC;AAAE/S,cAAI,EAAE,2CAAAqY,eAAR;AAAyBhY,cAAI,EAAE,CAAC2P,WAAD,EAAa;AAAEsI,uBAAW,EAAE;AAAf,WAAb;AAA/B,SAAD,CAhBS;AAiB1BrF,uBAAe,EAAE,CAAC;AAAEjT,cAAI,EAAE,2CAAAqY,eAAR;AAAyBhY,cAAI,EAAE,CAAC8P,WAAD,EAAa;AAAEmI,uBAAW,EAAE;AAAf,WAAb;AAA/B,SAAD;AAjBS,OAA9B;;AAmBA,OAAC,YAAY;AAAE,SAAC,OAAOnY,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB0Q,aAAzB,EAAuC,CAAC;AAClG7Q,cAAI,EAAE,2CAAA2K,SAD4F;AAElGtK,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,gBADX;AAECsF,oBAAQ,EAAE,cAFX;AAGCyD,oBAAQ,EAAE,25HAHX;AAICkO,sBAAU,EAAE,CAAC9J,uBAAsB,CAACC,kBAAxB,CAJb;AAKCxH,gBAAI,EAAE;AACF,uBAAS,gBADP;AAEF,4DAA8C,0BAF5C;AAGF,wDAA0C,sBAHxC;AAIF,2DAA6C,yBAJ3C;AAKF,0DAA4C,wBAL1C;AAMF,gDAAkC,qBANhC;AAOF,kDAAoC,kBAPlC;AAQF,qDAAuC,qBARrC;AASF,kDAAoC,qBATlC;AAUF,yDAA2C,2BAVzC;AAWF,iDAAmC,mBAXjC;AAYF,mDAAqC,qBAZnC;AAaF,qCAAuB,kBAbrB;AAcF,sCAAwB,6BAdtB;AAeF,oCAAsB,2BAfpB;AAgBF,qCAAuB,4BAhBrB;AAiBF,kCAAoB,yBAjBlB;AAkBF,kCAAoB,yBAlBlB;AAmBF,oCAAsB,2BAnBpB;AAoBF,oCAAsB,2BApBpB;AAqBF,iDAAmC;AArBjC,aALP;AA4BCR,kBAAM,EAAE,CAAC,OAAD,CA5BT;AA6BC8D,yBAAa,EAAE,2CAAAI,iBAAA,KA7BhB;AA8BCH,2BAAe,EAAE,2CAAAI,uBAAA,OA9BlB;AA+BC2D,qBAAS,EAAE,CACP;AAAEH,qBAAO,EAAEuC,eAAX;AAA2BtC,yBAAW,EAAEuC;AAAxC,aADO,CA/BZ;AAkCCtG,kBAAM,EAAE,CAAC,wpGAAD,EAA2pG,glCAA3pG,EAA6uI,8gKAA7uI,EAA6vS,o4CAA7vS,EAAmoV,wsGAAnoV,EAA60b,6oCAA70b;AAlCT,WAAD;AAF4F,SAAD,CAAvC,EAsC1D,YAAY;AAAE,iBAAO,CAAC;AAAEvK,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAkE;AAAEA,gBAAI,EAAE6C,SAAR;AAAmBgE,sBAAU,EAAE,CAAC;AAC/G7G,kBAAI,EAAE,2CAAA+G,MADyG;AAE/G1G,kBAAI,EAAE,CAAC,2CAAAa,UAAD;AAFyG,aAAD;AAA/B,WAAlE,EAGX;AAAElB,gBAAI,EAAE,8DAAR;AAA+B6G,sBAAU,EAAE,CAAC;AAC9C7G,kBAAI,EAAE,2CAAA8G;AADwC,aAAD;AAA3C,WAHW,EAKX;AAAE9G,gBAAI,EAAE6C,SAAR;AAAmBgE,sBAAU,EAAE,CAAC;AAClC7G,kBAAI,EAAE,2CAAA8G;AAD4B,aAAD,EAElC;AACC9G,kBAAI,EAAE,2CAAA+G,MADP;AAEC1G,kBAAI,EAAE,CAACsQ,+BAAD;AAFP,aAFkC;AAA/B,WALW,EAUX;AAAE3Q,gBAAI,EAAE;AAAR,WAVW,EAUgB;AAAEA,gBAAI,EAAE;AAAR,WAVhB,EAUyC;AAAEA,gBAAI,EAAE0K,MAAR;AAAgB7D,sBAAU,EAAE,CAAC;AACnF7G,kBAAI,EAAE,2CAAA8G;AAD6E,aAAD,EAEnF;AACC9G,kBAAI,EAAE,2CAAA+G,MADP;AAEC1G,kBAAI,EAAE,CAAC,mEAAA0J,qBAAD;AAFP,aAFmF;AAA5B,WAVzC,CAAP;AAeF,SArD8C,EAqD5C;AAAEuH,oBAAU,EAAE,CAAC;AACzBtR,gBAAI,EAAE,2CAAAgH;AADmB,WAAD,CAAd;AAEVwF,oBAAU,EAAE,CAAC;AACbxM,gBAAI,EAAE,2CAAAgH;AADO,WAAD,CAFF;AAIV4F,4BAAkB,EAAE,CAAC;AACrB5M,gBAAI,EAAE,2CAAAgH;AADe,WAAD,CAJV;AAMVwG,mBAAS,EAAE,CAAC;AACZxN,gBAAI,EAAE,2CAAAgH;AADM,WAAD,CAND;AAQVmQ,sBAAY,EAAE,CAAC;AACfnX,gBAAI,EAAE,2CAAAmY,SADS;AAEf9X,gBAAI,EAAE,CAAC,WAAD;AAFS,WAAD,CARJ;AAWV8R,iCAAuB,EAAE,CAAC;AAC1BnS,gBAAI,EAAE,2CAAAmY,SADoB;AAE1B9X,gBAAI,EAAE,CAAC,qBAAD,EAAwB;AAAE,wBAAQ;AAAV,aAAxB;AAFoB,WAAD,CAXf;AAcV+W,4BAAkB,EAAE,CAAC;AACrBpX,gBAAI,EAAE,2CAAAmY,SADe;AAErB9X,gBAAI,EAAE,CAAC,gBAAD;AAFe,WAAD,CAdV;AAiBV2T,gBAAM,EAAE,CAAC;AACThU,gBAAI,EAAE,2CAAAmY,SADG;AAET9X,gBAAI,EAAE,CAAC,OAAD;AAFG,WAAD,CAjBE;AAoBV2R,2BAAiB,EAAE,CAAC;AACpBhS,gBAAI,EAAE,2CAAAoY,YADc;AAEpB/X,gBAAI,EAAE,CAAC4O,oBAAD;AAFc,WAAD,CApBT;AAuBVgD,wBAAc,EAAE,CAAC;AACjBjS,gBAAI,EAAE,2CAAAoY,YADW;AAEjB/X,gBAAI,EAAE,CAAC4O,oBAAD,EAAsB;AAAE,wBAAQ;AAAV,aAAtB;AAFW,WAAD,CAvBN;AA0BVuE,8BAAoB,EAAE,CAAC;AACvBxT,gBAAI,EAAE,2CAAAoY,YADiB;AAEvB/X,gBAAI,EAAE,CAACuP,SAAD;AAFiB,WAAD,CA1BZ;AA6BV6D,2BAAiB,EAAE,CAAC;AACpBzT,gBAAI,EAAE,2CAAAoY,YADc;AAEpB/X,gBAAI,EAAE,CAACuP,SAAD,EAAW;AAAE,wBAAQ;AAAV,aAAX;AAFc,WAAD,CA7BT;AAgCV2D,2BAAiB,EAAE,CAAC;AACpBvT,gBAAI,EAAE,2CAAAoY,YADc;AAEpB/X,gBAAI,EAAE,CAACyP,eAAD;AAFc,WAAD,CAhCT;AAmCVqD,wBAAc,EAAE,CAAC;AACjBnT,gBAAI,EAAE,2CAAAqY,eADW;AAEjBhY,gBAAI,EAAE,CAACuN,UAAD,EAAY;AAAE0K,yBAAW,EAAE;AAAf,aAAZ;AAFW,WAAD,CAnCN;AAsCVpF,uBAAa,EAAE,CAAC;AAChBlT,gBAAI,EAAE,2CAAAqY,eADU;AAEhBhY,gBAAI,EAAE,CAACmP,UAAD,EAAY;AAAE8I,yBAAW,EAAE;AAAf,aAAZ;AAFU,WAAD,CAtCL;AAyCVvF,yBAAe,EAAE,CAAC;AAClB/S,gBAAI,EAAE,2CAAAqY,eADY;AAElBhY,gBAAI,EAAE,CAAC2P,WAAD,EAAa;AAAEsI,yBAAW,EAAE;AAAf,aAAb;AAFY,WAAD,CAzCP;AA4CVrF,yBAAe,EAAE,CAAC;AAClBjT,gBAAI,EAAE,2CAAAqY,eADY;AAElBhY,gBAAI,EAAE,CAAC8P,WAAD,EAAa;AAAEmI,yBAAW,EAAE;AAAf,aAAb;AAFY,WAAD;AA5CP,SArD4C,CAAnD;AAoGC,OApGhB;AAsGA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACME,mB;;;;AAENA,yBAAkB,CAAChZ,IAAnB,GAA0B,SAASiZ,0BAAT,CAAoC/Y,CAApC,EAAuC;AAAE,eAAO,KAAKA,CAAC,IAAI8Y,mBAAV,GAAP;AAAyC,OAA5G;;AACAA,yBAAkB,CAACnR,IAAnB,GAA0B,aAAc,+DAAwB;AAAErH,YAAI,EAAEwY;AAAR,OAAxB,CAAxC;AACAA,yBAAkB,CAAClR,IAAnB,GAA0B,aAAc,+DAAwB;AAAEC,eAAO,EAAE,CAAC,CAChE,8CAAAmR,YADgE,EAEhE,oDAAAnN,eAFgE,EAGhE,qDAAAoN,eAHgE,CAAD,EAIhE,oDAAApN,eAJgE;AAAX,OAAxB,CAAxC;;AAKA,OAAC,YAAY;AAAE,SAAC,OAAOpL,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBqY,mBAAzB,EAA6C,CAAC;AACxGxY,cAAI,EAAE,2CAAAyH,QADkG;AAExGpH,cAAI,EAAE,CAAC;AACCqH,wBAAY,EAAE,CACVoG,SADU,EAEV+C,aAFU,EAGVpB,QAHU,EAIVG,SAJU,EAKVE,eALU,EAMVG,UANU,EAOVG,UAPU,CADf;AAUC7I,mBAAO,EAAE,CACL,8CAAAmR,YADK,EAEL,oDAAAnN,eAFK,EAGL,qDAAAoN,eAHK,CAVV;AAeChR,mBAAO,EAAE,CACL,oDAAA4D,eADK,EAELuC,SAFK,EAGL+C,aAHK,EAILpB,QAJK,EAKLG,SALK,EAMLE,eANK,EAOLG,UAPK,EAQLG,UARK;AAfV,WAAD;AAFkG,SAAD,CAA7C,EA4B1D,IA5B0D,EA4BpD,IA5BoD,CAAnD;AA4BO,OA5BtB;;AA6BA,OAAC,YAAY;AAAE,SAAC,OAAOxI,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B4Q,mBAA1B,EAA8C;AAAE9Q,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAACoG,SAAD,EAAW+C,aAAX,EAAyBpB,QAAzB,EAAkCG,SAAlC,EAA4CE,eAA5C,EAA4DG,UAA5D,EAAuEG,UAAvE,CAAP;AAA2F,WAAzH;AAA2H7I,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,8CAAAmR,YAAD,EACjQ,oDAAAnN,eADiQ,EAEjQ,qDAAAoN,eAFiQ,CAAP;AAEvO,WAFqF;AAEnFhR,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,oDAAA4D,eAAD,EAAkBuC,SAAlB,EAA4B+C,aAA5B,EAA0CpB,QAA1C,EAAmDG,SAAnD,EAA6DE,eAA7D,EAA6EG,UAA7E,EAAwFG,UAAxF,CAAP;AAA4G;AAFhD,SAA9C,CAAnD;AAEuJ,OAFtK;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5hCA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AAKA,UAAMvI,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,eAAS+Q,4BAAT,CAAqCC,QAArC,EAA+C;AAC3C,eAAOzJ,KAAK,+CAAuCyJ,QAAvC,QAAZ;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,eAASC,8BAAT,GAAyC;AACrC,eAAO1J,KAAK,CAAC,6EACT,wEADS,GAET,cAFQ,CAAZ;AAGH;AACD;AACA;AACA;AACA;AACA;;;AACA,eAAS2J,mCAAT,CAA4CC,GAA5C,EAAiD;AAC7C,eAAO5J,KAAK,CAAC,qIACyC4J,GADzC,QAAD,CAAZ;AAEH;AACD;AACA;AACA;AACA;AACA;;;AACA,eAASC,uCAAT,CAAgDC,OAAhD,EAAyD;AACrD,eAAO9J,KAAK,CAAC,uIACyC8J,OADzC,QAAD,CAAZ;AAEH;AACD;AACA;AACA;AACA;;;UACMC,a,6BACF,uBAAYH,GAAZ,EAAiBI,OAAjB,EAA0BC,OAA1B,EAAmC;AAAA;;AAC/B,aAAKL,GAAL,GAAWA,GAAX;AACA,aAAKI,OAAL,GAAeA,OAAf;AACA,aAAKC,OAAL,GAAeA,OAAf;AACH,O;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMC,gB;AACF,kCAAYC,WAAZ,EAAyBC,UAAzB,EAAqChY,QAArC,EAA+CiY,aAA/C,EAA8D;AAAA;;AAC1D,eAAKF,WAAL,GAAmBA,WAAnB;AACA,eAAKC,UAAL,GAAkBA,UAAlB;AACA,eAAKC,aAAL,GAAqBA,aAArB;AACA;AACR;AACA;;AACQ,eAAKC,eAAL,GAAuB,IAAIlc,GAAJ,EAAvB;AACA;AACR;AACA;AACA;;AACQ,eAAKmc,eAAL,GAAuB,IAAInc,GAAJ,EAAvB;AACA;;AACA,eAAKoc,iBAAL,GAAyB,IAAIpc,GAAJ,EAAzB;AACA;;AACA,eAAKqc,qBAAL,GAA6B,IAAIrc,GAAJ,EAA7B;AACA;;AACA,eAAKsc,sBAAL,GAA8B,IAAItc,GAAJ,EAA9B;AACA;;AACA,eAAKuc,UAAL,GAAkB,EAAlB;AACA;AACR;AACA;AACA;AACA;;AACQ,eAAKC,oBAAL,GAA4B,gBAA5B;AACA,eAAKjY,SAAL,GAAiBP,QAAjB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;;iBACI,oBAAWqX,QAAX,EAAqBG,GAArB,EAA0BK,OAA1B,EAAmC;AAC/B,mBAAO,KAAKY,qBAAL,CAA2B,EAA3B,EAA+BpB,QAA/B,EAAyCG,GAAzC,EAA8CK,OAA9C,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,2BAAkBR,QAAlB,EAA4BK,OAA5B,EAAqCG,OAArC,EAA8C;AAC1C,mBAAO,KAAKa,4BAAL,CAAkC,EAAlC,EAAsCrB,QAAtC,EAAgDK,OAAhD,EAAyDG,OAAzD,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,+BAAsBc,SAAtB,EAAiCtB,QAAjC,EAA2CG,GAA3C,EAAgDK,OAAhD,EAAyD;AACrD,mBAAO,KAAKe,iBAAL,CAAuBD,SAAvB,EAAkCtB,QAAlC,EAA4C,IAAIM,aAAJ,CAAkBH,GAAlB,EAAuB,IAAvB,EAA6BK,OAA7B,CAA5C,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,4BAAmBgB,QAAnB,EAA6B;AACzB,iBAAKN,UAAL,CAAgBvF,IAAhB,CAAqB6F,QAArB;;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,sCAA6BF,SAA7B,EAAwCtB,QAAxC,EAAkDK,OAAlD,EAA2DG,OAA3D,EAAoE;AAChE,gBAAMiB,YAAY,GAAG,KAAKd,UAAL,CAAgBe,QAAhB,CAAyB,2CAAAC,eAAA,KAAzB,EAA+CtB,OAA/C,CAArB,CADgE,CAEhE;;;AACA,gBAAI,CAACoB,YAAL,EAAmB;AACf,oBAAMrB,uCAAsC,CAACC,OAAD,CAA5C;AACH;;AACD,mBAAO,KAAKkB,iBAAL,CAAuBD,SAAvB,EAAkCtB,QAAlC,EAA4C,IAAIM,aAAJ,CAAkB,EAAlB,EAAsBmB,YAAtB,EAAoCjB,OAApC,CAA5C,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,uBAAcL,GAAd,EAAmBK,OAAnB,EAA4B;AACxB,mBAAO,KAAKoB,wBAAL,CAA8B,EAA9B,EAAkCzB,GAAlC,EAAuCK,OAAvC,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,8BAAqBH,OAArB,EAA8BG,OAA9B,EAAuC;AACnC,mBAAO,KAAKqB,+BAAL,CAAqC,EAArC,EAAyCxB,OAAzC,EAAkDG,OAAlD,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,kCAAyBc,SAAzB,EAAoCnB,GAApC,EAAyCK,OAAzC,EAAkD;AAC9C,mBAAO,KAAKsB,oBAAL,CAA0BR,SAA1B,EAAqC,IAAIhB,aAAJ,CAAkBH,GAAlB,EAAuB,IAAvB,EAA6BK,OAA7B,CAArC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,yCAAgCc,SAAhC,EAA2CjB,OAA3C,EAAoDG,OAApD,EAA6D;AACzD,gBAAMiB,YAAY,GAAG,KAAKd,UAAL,CAAgBe,QAAhB,CAAyB,2CAAAC,eAAA,KAAzB,EAA+CtB,OAA/C,CAArB;;AACA,gBAAI,CAACoB,YAAL,EAAmB;AACf,oBAAMrB,uCAAsC,CAACC,OAAD,CAA5C;AACH;;AACD,mBAAO,KAAKyB,oBAAL,CAA0BR,SAA1B,EAAqC,IAAIhB,aAAJ,CAAkB,EAAlB,EAAsBmB,YAAtB,EAAoCjB,OAApC,CAArC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,gCAAuBuB,KAAvB,EAAiD;AAAA,gBAAnBC,SAAmB,uEAAPD,KAAO;;AAC7C,iBAAKd,sBAAL,CAA4B7a,GAA5B,CAAgC2b,KAAhC,EAAuCC,SAAvC;;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,+BAAsBD,KAAtB,EAA6B;AACzB,mBAAO,KAAKd,sBAAL,CAA4B/b,GAA5B,CAAgC6c,KAAhC,KAA0CA,KAAjD;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,gCAAuBC,SAAvB,EAAkC;AAC9B,iBAAKb,oBAAL,GAA4Ba,SAA5B;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,kCAAyB;AACrB,mBAAO,KAAKb,oBAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,2BAAkBc,OAAlB,EAA2B;AAAA;;AACvB,gBAAM9B,GAAG,GAAG,KAAKQ,UAAL,CAAgBe,QAAhB,CAAyB,2CAAAC,eAAA,aAAzB,EAAuDM,OAAvD,CAAZ;;AACA,gBAAI,CAAC9B,GAAL,EAAU;AACN,oBAAMD,mCAAkC,CAAC+B,OAAD,CAAxC;AACH;;AACD,gBAAMC,UAAU,GAAG,KAAKnB,iBAAL,CAAuB7b,GAAvB,CAA2Bib,GAA3B,CAAnB;;AACA,gBAAI+B,UAAJ,EAAgB;AACZ,qBAAO,sCAAAC,EAAA,EAAGC,QAAQ,CAACF,UAAD,CAAX,CAAP;AACH;;AACD,mBAAO,KAAKG,sBAAL,CAA4B,IAAI/B,aAAJ,CAAkB2B,OAAlB,EAA2B,IAA3B,CAA5B,EAA8DpX,IAA9D,CAAmE,gDAAAyX,GAAA,EAAI,UAAAC,GAAG;AAAA,qBAAI,OAAI,CAACxB,iBAAL,CAAuB3a,GAAvB,CAA2B+Z,GAA3B,EAAgCoC,GAAhC,CAAJ;AAAA,aAAP,CAAnE,EAAqH,gDAAAxG,GAAA,EAAI,UAAAwG,GAAG;AAAA,qBAAIH,QAAQ,CAACG,GAAD,CAAZ;AAAA,aAAP,CAArH,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,yBAAgBC,IAAhB,EAAsC;AAAA,gBAAhBlB,SAAgB,uEAAJ,EAAI;AAClC,gBAAMmB,GAAG,GAAGC,OAAO,CAACpB,SAAD,EAAYkB,IAAZ,CAAnB;;AACA,gBAAIG,MAAM,GAAG,KAAK9B,eAAL,CAAqB3b,GAArB,CAAyBud,GAAzB,CAAb,CAFkC,CAGlC;;;AACA,gBAAIE,MAAJ,EAAY;AACR,qBAAO,KAAKC,iBAAL,CAAuBD,MAAvB,CAAP;AACH,aANiC,CAOlC;;;AACAA,kBAAM,GAAG,KAAKE,2BAAL,CAAiCvB,SAAjC,EAA4CkB,IAA5C,CAAT;;AACA,gBAAIG,MAAJ,EAAY;AACR,mBAAK9B,eAAL,CAAqBza,GAArB,CAAyBqc,GAAzB,EAA8BE,MAA9B;;AACA,qBAAO,KAAKC,iBAAL,CAAuBD,MAAvB,CAAP;AACH,aAZiC,CAalC;;;AACA,gBAAMG,cAAc,GAAG,KAAKhC,eAAL,CAAqB5b,GAArB,CAAyBoc,SAAzB,CAAvB;;AACA,gBAAIwB,cAAJ,EAAoB;AAChB,qBAAO,KAAKC,yBAAL,CAA+BP,IAA/B,EAAqCM,cAArC,CAAP;AACH;;AACD,mBAAO,sCAAAE,UAAA,EAAWjD,4BAA2B,CAAC0C,GAAD,CAAtC,CAAP;AACH;;;iBACD,uBAAc;AACV,iBAAKvB,UAAL,GAAkB,EAAlB;;AACA,iBAAKL,eAAL,CAAqBoC,KAArB;;AACA,iBAAKnC,eAAL,CAAqBmC,KAArB;;AACA,iBAAKlC,iBAAL,CAAuBkC,KAAvB;AACH;AACD;AACJ;AACA;;;;iBACI,2BAAkBN,MAAlB,EAA0B;AACtB,gBAAIA,MAAM,CAACpC,OAAX,EAAoB;AAChB;AACA,qBAAO,sCAAA4B,EAAA,EAAGC,QAAQ,CAAC,KAAKc,qBAAL,CAA2BP,MAA3B,CAAD,CAAX,CAAP;AACH,aAHD,MAIK;AACD;AACA,qBAAO,KAAKN,sBAAL,CAA4BM,MAA5B,EAAoC9X,IAApC,CAAyC,gDAAAkR,GAAA,EAAI,UAAAwG,GAAG;AAAA,uBAAIH,QAAQ,CAACG,GAAD,CAAZ;AAAA,eAAP,CAAzC,CAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,mCAA0BC,IAA1B,EAAgCM,cAAhC,EAAgD;AAAA;;AAC5C;AACA;AACA,gBAAMK,SAAS,GAAG,KAAKC,8BAAL,CAAoCZ,IAApC,EAA0CM,cAA1C,CAAlB;;AACA,gBAAIK,SAAJ,EAAe;AACX;AACA;AACA;AACA,qBAAO,sCAAAhB,EAAA,EAAGgB,SAAH,CAAP;AACH,aAT2C,CAU5C;AACA;;;AACA,gBAAME,oBAAoB,GAAGP,cAAc,CACtCQ,MADwB,CACjB,UAAAC,aAAa;AAAA,qBAAI,CAACA,aAAa,CAAChD,OAAnB;AAAA,aADI,EAExBxE,GAFwB,CAEpB,UAAAwH,aAAa,EAAI;AACtB,qBAAO,OAAI,CAACC,yBAAL,CAA+BD,aAA/B,EAA8C1Y,IAA9C,CAAmD,gDAAA4Y,UAAA,EAAW,UAACC,GAAD,EAAS;AAC1E,oBAAMvD,GAAG,GAAG,OAAI,CAACQ,UAAL,CAAgBe,QAAhB,CAAyB,2CAAAC,eAAA,aAAzB,EAAuD4B,aAAa,CAACpD,GAArE,CAAZ,CAD0E,CAE1E;AACA;;;AACA,oBAAMwD,YAAY,mCAA4BxD,GAA5B,sBAA2CuD,GAAG,CAACE,OAA/C,CAAlB;;AACA,uBAAI,CAAChD,aAAL,CAAmBiD,WAAnB,CAA+B,IAAItN,KAAJ,CAAUoN,YAAV,CAA/B;;AACA,uBAAO,sCAAAxB,EAAA,EAAG,IAAH,CAAP;AACH,eAPyD,CAAnD,CAAP;AAQH,aAX4B,CAA7B,CAZ4C,CAwB5C;AACA;;AACA,mBAAO,sCAAA2B,QAAA,EAAST,oBAAT,EAA+BxY,IAA/B,CAAoC,gDAAAkR,GAAA,EAAI,YAAM;AACjD,kBAAMgI,SAAS,GAAG,OAAI,CAACX,8BAAL,CAAoCZ,IAApC,EAA0CM,cAA1C,CAAlB,CADiD,CAEjD;;;AACA,kBAAI,CAACiB,SAAL,EAAgB;AACZ,sBAAMhE,4BAA2B,CAACyC,IAAD,CAAjC;AACH;;AACD,qBAAOuB,SAAP;AACH,aAP0C,CAApC,CAAP;AAQH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,wCAA+B/D,QAA/B,EAAyC8C,cAAzC,EAAyD;AACrD;AACA,iBAAK,IAAIzF,CAAC,GAAGyF,cAAc,CAAC7H,MAAf,GAAwB,CAArC,EAAwCoC,CAAC,IAAI,CAA7C,EAAgDA,CAAC,EAAjD,EAAqD;AACjD,kBAAMsF,MAAM,GAAGG,cAAc,CAACzF,CAAD,CAA7B,CADiD,CAEjD;AACA;AACA;AACA;;AACA,kBAAIsF,MAAM,CAACpC,OAAP,IAAkBoC,MAAM,CAACpC,OAAP,CAAeyD,OAAf,CAAuBhE,QAAvB,IAAmC,CAAC,CAA1D,EAA6D;AACzD,oBAAMuC,GAAG,GAAG,KAAKW,qBAAL,CAA2BP,MAA3B,CAAZ;;AACA,oBAAMoB,SAAS,GAAG,KAAKE,sBAAL,CAA4B1B,GAA5B,EAAiCvC,QAAjC,EAA2C2C,MAAM,CAACnC,OAAlD,CAAlB;;AACA,oBAAIuD,SAAJ,EAAe;AACX,yBAAOA,SAAP;AACH;AACJ;AACJ;;AACD,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,gCAAuBpB,MAAvB,EAA+B;AAAA;;AAC3B,mBAAO,KAAKuB,UAAL,CAAgBvB,MAAhB,EAAwB9X,IAAxB,CAA6B,gDAAAyX,GAAA,EAAI,UAAA/B,OAAO;AAAA,qBAAIoC,MAAM,CAACpC,OAAP,GAAiBA,OAArB;AAAA,aAAX,CAA7B,EAAuE,gDAAAxE,GAAA,EAAI;AAAA,qBAAM,OAAI,CAACmH,qBAAL,CAA2BP,MAA3B,CAAN;AAAA,aAAJ,CAAvE,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,mCAA0BA,MAA1B,EAAkC;AAC9B,gBAAIA,MAAM,CAACpC,OAAX,EAAoB;AAChB,qBAAO,sCAAA4B,EAAA,EAAG,IAAH,CAAP;AACH;;AACD,mBAAO,KAAK+B,UAAL,CAAgBvB,MAAhB,EAAwB9X,IAAxB,CAA6B,gDAAAyX,GAAA,EAAI,UAAA/B,OAAO;AAAA,qBAAIoC,MAAM,CAACpC,OAAP,GAAiBA,OAArB;AAAA,aAAX,CAA7B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,gCAAuB4D,OAAvB,EAAgCnE,QAAhC,EAA0CQ,OAA1C,EAAmD;AAC/C;AACA;AACA,gBAAM4D,UAAU,GAAGD,OAAO,CAACE,aAAR,iBAA8BrE,QAA9B,SAAnB;;AACA,gBAAI,CAACoE,UAAL,EAAiB;AACb,qBAAO,IAAP;AACH,aAN8C,CAO/C;AACA;;;AACA,gBAAME,WAAW,GAAGF,UAAU,CAACnZ,SAAX,CAAqB,IAArB,CAApB;AACAqZ,uBAAW,CAACC,eAAZ,CAA4B,IAA5B,EAV+C,CAW/C;AACA;;AACA,gBAAID,WAAW,CAACE,QAAZ,CAAqBC,WAArB,OAAuC,KAA3C,EAAkD;AAC9C,qBAAO,KAAKC,iBAAL,CAAuBJ,WAAvB,EAAoC9D,OAApC,CAAP;AACH,aAf8C,CAgB/C;AACA;AACA;;;AACA,gBAAI8D,WAAW,CAACE,QAAZ,CAAqBC,WAArB,OAAuC,QAA3C,EAAqD;AACjD,qBAAO,KAAKC,iBAAL,CAAuB,KAAKC,aAAL,CAAmBL,WAAnB,CAAvB,EAAwD9D,OAAxD,CAAP;AACH,aArB8C,CAsB/C;AACA;AACA;AACA;AACA;;;AACA,gBAAM+B,GAAG,GAAG,KAAKqC,qBAAL,CAA2B,aAA3B,CAAZ,CA3B+C,CA4B/C;;;AACArC,eAAG,CAAC9W,WAAJ,CAAgB6Y,WAAhB;AACA,mBAAO,KAAKI,iBAAL,CAAuBnC,GAAvB,EAA4B/B,OAA5B,CAAP;AACH;AACD;AACJ;AACA;;;;iBACI,+BAAsBqE,GAAtB,EAA2B;AACvB,gBAAMC,GAAG,GAAG,KAAK5b,SAAL,CAAe6b,aAAf,CAA6B,KAA7B,CAAZ;;AACAD,eAAG,CAACE,SAAJ,GAAgBH,GAAhB;AACA,gBAAMtC,GAAG,GAAGuC,GAAG,CAACT,aAAJ,CAAkB,KAAlB,CAAZ,CAHuB,CAIvB;;AACA,gBAAI,CAAC9B,GAAL,EAAU;AACN,oBAAMhM,KAAK,CAAC,qBAAD,CAAX;AACH;;AACD,mBAAOgM,GAAP;AACH;AACD;AACJ;AACA;;;;iBACI,uBAAcxd,OAAd,EAAuB;AACnB,gBAAMwd,GAAG,GAAG,KAAKqC,qBAAL,CAA2B,aAA3B,CAAZ;;AACA,gBAAMK,UAAU,GAAGlgB,OAAO,CAACkgB,UAA3B,CAFmB,CAGnB;;AACA,iBAAK,IAAI5H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4H,UAAU,CAAChK,MAA/B,EAAuCoC,CAAC,EAAxC,EAA4C;AACxC,kCAAwB4H,UAAU,CAAC5H,CAAD,CAAlC;AAAA,kBAAQmF,IAAR,iBAAQA,IAAR;AAAA,kBAAclZ,KAAd,iBAAcA,KAAd;;AACA,kBAAIkZ,IAAI,KAAK,IAAb,EAAmB;AACfD,mBAAG,CAACnN,YAAJ,CAAiBoN,IAAjB,EAAuBlZ,KAAvB;AACH;AACJ;;AACD,iBAAK,IAAI+T,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGtY,OAAO,CAACmgB,UAAR,CAAmBjK,MAAvC,EAA+CoC,GAAC,EAAhD,EAAoD;AAChD,kBAAItY,OAAO,CAACmgB,UAAR,CAAmB7H,GAAnB,EAAsB8H,QAAtB,KAAmC,KAAKjc,SAAL,CAAekc,YAAtD,EAAoE;AAChE7C,mBAAG,CAAC9W,WAAJ,CAAgB1G,OAAO,CAACmgB,UAAR,CAAmB7H,GAAnB,EAAsBpS,SAAtB,CAAgC,IAAhC,CAAhB;AACH;AACJ;;AACD,mBAAOsX,GAAP;AACH;AACD;AACJ;AACA;;;;iBACI,2BAAkBA,GAAlB,EAAuB/B,OAAvB,EAAgC;AAC5B+B,eAAG,CAACnN,YAAJ,CAAiB,KAAjB,EAAwB,EAAxB;AACAmN,eAAG,CAACnN,YAAJ,CAAiB,QAAjB,EAA2B,MAA3B;AACAmN,eAAG,CAACnN,YAAJ,CAAiB,OAAjB,EAA0B,MAA1B;AACAmN,eAAG,CAACnN,YAAJ,CAAiB,qBAAjB,EAAwC,eAAxC;AACAmN,eAAG,CAACnN,YAAJ,CAAiB,WAAjB,EAA8B,OAA9B,EAL4B,CAKY;;AACxC,gBAAIoL,OAAO,IAAIA,OAAO,CAAC6E,OAAvB,EAAgC;AAC5B9C,iBAAG,CAACnN,YAAJ,CAAiB,SAAjB,EAA4BoL,OAAO,CAAC6E,OAApC;AACH;;AACD,mBAAO9C,GAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,oBAAW+C,UAAX,EAAuB;AAAA;;AACnB,gBAAIC,EAAJ;;AACA,gBAAatD,OAAb,GAAkCqD,UAAlC,CAAQnF,GAAR;AAAA,gBAAsBK,OAAtB,GAAkC8E,UAAlC,CAAsB9E,OAAtB;AACA,gBAAMgF,eAAe,GAAG,CAACD,EAAE,GAAG/E,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACgF,eAAhE,MAAqF,IAArF,IAA6FD,EAAE,KAAK,KAAK,CAAzG,GAA6GA,EAA7G,GAAkH,KAA1I;;AACA,gBAAI,CAAC,KAAK7E,WAAV,EAAuB;AACnB,oBAAMT,8BAA6B,EAAnC;AACH,aANkB,CAOnB;;;AACA,gBAAIgC,OAAO,IAAI,IAAf,EAAqB;AACjB,oBAAM1L,KAAK,wCAAgC0L,OAAhC,SAAX;AACH;;AACD,gBAAM9B,GAAG,GAAG,KAAKQ,UAAL,CAAgBe,QAAhB,CAAyB,2CAAAC,eAAA,aAAzB,EAAuDM,OAAvD,CAAZ,CAXmB,CAYnB;;;AACA,gBAAI,CAAC9B,GAAL,EAAU;AACN,oBAAMD,mCAAkC,CAAC+B,OAAD,CAAxC;AACH,aAfkB,CAgBnB;AACA;AACA;;;AACA,gBAAMwD,eAAe,GAAG,KAAKzE,qBAAL,CAA2B9b,GAA3B,CAA+Bib,GAA/B,CAAxB;;AACA,gBAAIsF,eAAJ,EAAqB;AACjB,qBAAOA,eAAP;AACH;;AACD,gBAAMC,GAAG,GAAG,KAAKhF,WAAL,CAAiBxb,GAAjB,CAAqBib,GAArB,EAA0B;AAAEwF,0BAAY,EAAE,MAAhB;AAAwBH,6BAAe,EAAfA;AAAxB,aAA1B,EAAqE3a,IAArE,CAA0E,gDAAA+a,QAAA,EAAS;AAAA,qBAAM,OAAI,CAAC5E,qBAAL,WAAkCb,GAAlC,CAAN;AAAA,aAAT,CAA1E,EAAkI,gDAAA0F,KAAA,GAAlI,CAAZ;;AACA,iBAAK7E,qBAAL,CAA2B5a,GAA3B,CAA+B+Z,GAA/B,EAAoCuF,GAApC;;AACA,mBAAOA,GAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,2BAAkBpE,SAAlB,EAA6BtB,QAA7B,EAAuC2C,MAAvC,EAA+C;AAC3C,iBAAK9B,eAAL,CAAqBza,GAArB,CAAyBsc,OAAO,CAACpB,SAAD,EAAYtB,QAAZ,CAAhC,EAAuD2C,MAAvD;;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,8BAAqBrB,SAArB,EAAgCqB,MAAhC,EAAwC;AACpC,gBAAMmD,eAAe,GAAG,KAAKhF,eAAL,CAAqB5b,GAArB,CAAyBoc,SAAzB,CAAxB;;AACA,gBAAIwE,eAAJ,EAAqB;AACjBA,6BAAe,CAACnK,IAAhB,CAAqBgH,MAArB;AACH,aAFD,MAGK;AACD,mBAAK7B,eAAL,CAAqB1a,GAArB,CAAyBkb,SAAzB,EAAoC,CAACqB,MAAD,CAApC;AACH;;AACD,mBAAO,IAAP;AACH;AACD;;;;iBACA,+BAAsBA,MAAtB,EAA8B;AAC1B,gBAAI,CAACA,MAAM,CAACoD,UAAZ,EAAwB;AACpB,kBAAMxD,GAAG,GAAG,KAAKqC,qBAAL,CAA2BjC,MAAM,CAACpC,OAAlC,CAAZ;;AACA,mBAAKmE,iBAAL,CAAuBnC,GAAvB,EAA4BI,MAAM,CAACnC,OAAnC;;AACAmC,oBAAM,CAACoD,UAAP,GAAoBxD,GAApB;AACH;;AACD,mBAAOI,MAAM,CAACoD,UAAd;AACH;AACD;;;;iBACA,qCAA4BzE,SAA5B,EAAuCkB,IAAvC,EAA6C;AACzC,iBAAK,IAAInF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK6D,UAAL,CAAgBjG,MAApC,EAA4CoC,CAAC,EAA7C,EAAiD;AAC7C,kBAAMjY,MAAM,GAAG,KAAK8b,UAAL,CAAgB7D,CAAhB,EAAmBmF,IAAnB,EAAyBlB,SAAzB,CAAf;;AACA,kBAAIlc,MAAJ,EAAY;AACR,uBAAO4gB,oBAAoB,CAAC5gB,MAAD,CAApB,GACH,IAAIkb,aAAJ,CAAkBlb,MAAM,CAAC+a,GAAzB,EAA8B,IAA9B,EAAoC/a,MAAM,CAACob,OAA3C,CADG,GAEH,IAAIF,aAAJ,CAAkBlb,MAAlB,EAA0B,IAA1B,CAFJ;AAGH;AACJ;;AACD,mBAAO4E,SAAP;AACH;;;;;;AAELyW,sBAAe,CAAC9Z,IAAhB,GAAuB,SAASsf,uBAAT,CAAiCpf,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAI4Z,gBAAV,EAA2B,uDAAgB,4DAAhB,EAAmC,CAAnC,CAA3B,EAAkE,uDAAgB,oEAAhB,CAAlE,EAAwG,uDAAgB,8CAAApT,QAAhB,EAA0B,CAA1B,CAAxG,EAAsI,uDAAgB,uDAAhB,CAAtI,CAAP;AAAqL,OAAlP;;AACAoT,sBAAe,CAAC3Z,KAAhB,GAAwB,iEAAsB;AAAEC,eAAO,EAAE,SAASkf,uBAAT,GAAmC;AAAE,iBAAO,IAAIxF,gBAAJ,CAAoB,uDAAY,4DAAZ,EAA2B,CAA3B,CAApB,EAAmD,uDAAY,oEAAZ,CAAnD,EAAiF,uDAAY,sDAAZ,EAAyB,CAAzB,CAAjF,EAA8G,uDAAY,uDAAZ,CAA9G,CAAP;AAAqJ,SAArM;AAAuMzZ,aAAK,EAAEyZ,gBAA9M;AAA+NxZ,kBAAU,EAAE;AAA3O,OAAtB,CAAxB;;AACAwZ,sBAAe,CAACvZ,cAAhB,GAAiC;AAAA,eAAM,CACnC;AAAEC,cAAI,EAAE,kDAAA+e,UAAR;AAAoBlY,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAA8G;AAAR,WAAD;AAAhC,SADmC,EAEnC;AAAE9G,cAAI,EAAE,wDAAAgf;AAAR,SAFmC,EAGnC;AAAEhf,cAAI,EAAE6C,SAAR;AAAmBgE,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAA8G;AAAR,WAAD,EAAqB;AAAE9G,gBAAI,EAAE,2CAAA+G,MAAR;AAAgB1G,gBAAI,EAAE,CAAC,8CAAA6F,QAAD;AAAtB,WAArB;AAA/B,SAHmC,EAInC;AAAElG,cAAI,EAAE,2CAAAif;AAAR,SAJmC,CAAN;AAAA,OAAjC;;AAMA,OAAC,YAAY;AAAE,SAAC,OAAO9e,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBmZ,gBAAzB,EAA0C,CAAC;AACrGtZ,cAAI,EAAE,2CAAAI,UAD+F;AAErGC,cAAI,EAAE,CAAC;AAAEP,sBAAU,EAAE;AAAd,WAAD;AAF+F,SAAD,CAA1C,EAG1D,YAAY;AAAE,iBAAO,CAAC;AAAEE,gBAAI,EAAE,4DAAR;AAA2B6G,sBAAU,EAAE,CAAC;AACtD7G,kBAAI,EAAE,2CAAA8G;AADgD,aAAD;AAAvC,WAAD,EAEX;AAAE9G,gBAAI,EAAE;AAAR,WAFW,EAEoB;AAAEA,gBAAI,EAAE6C,SAAR;AAAmBgE,sBAAU,EAAE,CAAC;AACjE7G,kBAAI,EAAE,2CAAA8G;AAD2D,aAAD,EAEjE;AACC9G,kBAAI,EAAE,2CAAA+G,MADP;AAEC1G,kBAAI,EAAE,CAAC,8CAAA6F,QAAD;AAFP,aAFiE;AAA/B,WAFpB,EAOX;AAAElG,gBAAI,EAAE;AAAR,WAPW,CAAP;AAO6B,SAVe,EAUb,IAVa,CAAnD;AAU8C,OAV7D;AAWA;;;AACA,eAASkf,+BAAT,CAAwCC,cAAxC,EAAwDC,UAAxD,EAAoEC,SAApE,EAA+EC,YAA/E,EAA6F9d,QAA7F,EAAuG;AACnG,eAAO2d,cAAc,IAAI,IAAI7F,gBAAJ,CAAoB8F,UAApB,EAAgCC,SAAhC,EAA2C7d,QAA3C,EAAqD8d,YAArD,CAAzB;AACH;AACD;;;AACA,UAAMC,uBAAsB,GAAG;AAC3B;AACAlR,eAAO,EAAEiL,gBAFkB;AAG3BkG,YAAI,EAAE,CACF,CAAC,IAAI,2CAAA1Y,QAAJ,EAAD,EAAiB,IAAI,2CAAA2Y,QAAJ,EAAjB,EAAiCnG,gBAAjC,CADE,EAEF,CAAC,IAAI,2CAAAxS,QAAJ,EAAD,EAAiB,kDAAAiY,UAAjB,CAFE,EAGF,wDAAAC,YAHE,EAIF,2CAAAC,YAJE,EAKF,CAAC,IAAI,2CAAAnY,QAAJ,EAAD,EAAiB,8CAAAZ,QAAjB,CALE,CAHqB;AAU3BwZ,kBAAU,EAAER;AAVe,OAA/B;AAYA;;AACA,eAASjE,QAAT,CAAkBG,GAAlB,EAAuB;AACnB,eAAOA,GAAG,CAACtX,SAAJ,CAAc,IAAd,CAAP;AACH;AACD;;;AACA,eAASyX,OAAT,CAAiBpB,SAAjB,EAA4BkB,IAA5B,EAAkC;AAC9B,eAAOlB,SAAS,GAAG,GAAZ,GAAkBkB,IAAzB;AACH;;AACD,eAASwD,oBAAT,CAA8B1c,KAA9B,EAAqC;AACjC,eAAO,CAAC,EAAEA,KAAK,CAAC6W,GAAN,IAAa7W,KAAK,CAACkX,OAArB,CAAR;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAMsG,YAAY,GAAG,yDAAAjP,UAAA;AACjB,yBAAYnQ,WAAZ,EAAyB;AAAA;;AACrB,eAAKA,WAAL,GAAmBA,WAAnB;AACH;;AAHgB;AAAA,UAArB;AAKA;AACA;AACA;AACA;AACA;;;AACA,UAAMqf,kBAAiB,GAAG,IAAI,2CAAA/R,cAAJ,CAAmB,mBAAnB,EAAwC;AAC9D/N,kBAAU,EAAE,MADkD;AAE9DF,eAAO,EAAEigB;AAFqD,OAAxC,CAA1B;AAIA;;;AACA,eAASA,0BAAT,GAAqC;AACjC,YAAM9d,SAAS,GAAG,+CAAA+d,MAAA,EAAO,8CAAA5Z,QAAP,CAAlB;;AACA,YAAM6Z,SAAS,GAAGhe,SAAS,GAAGA,SAAS,CAACie,QAAb,GAAwB,IAAnD;;AACA,eAAO;AACH;AACA;AACAC,qBAAW,EAAE;AAAA,mBAAMF,SAAS,GAAIA,SAAS,CAACG,QAAV,GAAqBH,SAAS,CAACI,MAAnC,GAA6C,EAA5D;AAAA;AAHV,SAAP;AAKH;AACD;;;AACA,UAAMC,iBAAiB,GAAG,CACtB,WADsB,EAEtB,eAFsB,EAGtB,KAHsB,EAItB,QAJsB,EAKtB,MALsB,EAMtB,QANsB,EAOtB,QAPsB,EAQtB,cARsB,EAStB,YATsB,EAUtB,YAVsB,EAWtB,MAXsB,EAYtB,QAZsB,CAA1B;;AAcA,UAAMC,EAAE,GAAG,SAALA,EAAK,CAAAC,IAAI;AAAA,0BAAQA,IAAR;AAAA,OAAf;AACA;;;AACA,UAAMC,wBAAwB,GAAGH,iBAAiB,CAACxL,GAAlB,CAAsByL,EAAtB,EAA0BG,IAA1B,CAA+B,IAA/B,CAAjC;AACA;;AACA,UAAMC,cAAc,GAAG,2BAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;UACMC,Q;;;;;AACF,0BAAY1S,UAAZ,EAAwB2S,aAAxB,EAAuCC,UAAvC,EAAmDb,SAAnD,EAA8DtG,aAA9D,EAA6E;AAAA;;AAAA;;AACzE,uCAAMzL,UAAN;AACA,kBAAK2S,aAAL,GAAqBA,aAArB;AACA,kBAAKZ,SAAL,GAAiBA,SAAjB;AACA,kBAAKtG,aAAL,GAAqBA,aAArB;AACA,kBAAKoH,OAAL,GAAe,KAAf;AACA;;AACA,kBAAKC,iBAAL,GAAyB,mCAAAC,YAAA,MAAzB,CAPyE,CAQzE;AACA;;AACA,cAAI,CAACH,UAAL,EAAiB;AACb5S,sBAAU,CAAC/L,aAAX,CAAyBgM,YAAzB,CAAsC,aAAtC,EAAqD,MAArD;AACH;;AAZwE;AAa5E;AACD;AACJ;AACA;AACA;;;;;eACI,eAAa;AACT,mBAAO,KAAK4S,OAAZ;AACH,W;eACD,aAAWG,MAAX,EAAmB;AACf,iBAAKH,OAAL,GAAe,wDAAAre,qBAAA,EAAsBwe,MAAtB,CAAf;AACH;AACD;;;;eACA,eAAc;AAAE,mBAAO,KAAKC,QAAZ;AAAuB,W;eACvC,aAAY9e,KAAZ,EAAmB;AACf,gBAAIA,KAAK,KAAK,KAAK8e,QAAnB,EAA6B;AACzB,kBAAI9e,KAAJ,EAAW;AACP,qBAAK+e,cAAL,CAAoB/e,KAApB;AACH,eAFD,MAGK,IAAI,KAAK8e,QAAT,EAAmB;AACpB,qBAAKE,gBAAL;AACH;;AACD,mBAAKF,QAAL,GAAgB9e,KAAhB;AACH;AACJ;AACD;;;;eACA,eAAc;AAAE,mBAAO,KAAKif,QAAZ;AAAuB,W;eACvC,aAAYjf,KAAZ,EAAmB;AACf,gBAAMkf,QAAQ,GAAG,KAAKC,iBAAL,CAAuBnf,KAAvB,CAAjB;;AACA,gBAAIkf,QAAQ,KAAK,KAAKD,QAAtB,EAAgC;AAC5B,mBAAKA,QAAL,GAAgBC,QAAhB;;AACA,mBAAKE,sBAAL;AACH;AACJ;AACD;;;;eACA,eAAe;AAAE,mBAAO,KAAKC,SAAZ;AAAwB,W;eACzC,aAAarf,KAAb,EAAoB;AAChB,gBAAMkf,QAAQ,GAAG,KAAKC,iBAAL,CAAuBnf,KAAvB,CAAjB;;AACA,gBAAIkf,QAAQ,KAAK,KAAKG,SAAtB,EAAiC;AAC7B,mBAAKA,SAAL,GAAiBH,QAAjB;;AACA,mBAAKE,sBAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,wBAAe1I,QAAf,EAAyB;AACrB,gBAAI,CAACA,QAAL,EAAe;AACX,qBAAO,CAAC,EAAD,EAAK,EAAL,CAAP;AACH;;AACD,gBAAM4I,KAAK,GAAG5I,QAAQ,CAACpE,KAAT,CAAe,GAAf,CAAd;;AACA,oBAAQgN,KAAK,CAAC3N,MAAd;AACI,mBAAK,CAAL;AAAQ,uBAAO,CAAC,EAAD,EAAK2N,KAAK,CAAC,CAAD,CAAV,CAAP;AAAuB;;AAC/B,mBAAK,CAAL;AAAQ,uBAAOA,KAAP;;AACR;AAAS,sBAAMrS,KAAK,gCAAwByJ,QAAxB,QAAX;AAAiD;AAH9D;AAKH;;;iBACD,oBAAW;AACP;AACA;AACA,iBAAK0I,sBAAL;AACH;;;iBACD,8BAAqB;AACjB,gBAAMG,cAAc,GAAG,KAAKC,+BAA5B;;AACA,gBAAID,cAAc,IAAIA,cAAc,CAACE,IAArC,EAA2C;AACvC,kBAAMC,OAAO,GAAG,KAAK9B,SAAL,CAAeE,WAAf,EAAhB,CADuC,CAEvC;AACA;AACA;AACA;AACA;AACA;;;AACA,kBAAI4B,OAAO,KAAK,KAAKC,aAArB,EAAoC;AAChC,qBAAKA,aAAL,GAAqBD,OAArB;;AACA,qBAAKE,wBAAL,CAA8BF,OAA9B;AACH;AACJ;AACJ;;;iBACD,uBAAc;AACV,iBAAKf,iBAAL,CAAuBkB,WAAvB;;AACA,gBAAI,KAAKL,+BAAT,EAA0C;AACtC,mBAAKA,+BAAL,CAAqC7F,KAArC;AACH;AACJ;;;iBACD,0BAAiB;AACb,mBAAO,CAAC,KAAKmG,OAAb;AACH;;;iBACD,wBAAe7G,GAAf,EAAoB;AAChB,iBAAK+F,gBAAL,GADgB,CAEhB;AACA;AACA;;;AACA,gBAAMe,SAAS,GAAG9G,GAAG,CAAC5F,gBAAJ,CAAqB,OAArB,CAAlB;;AACA,iBAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgM,SAAS,CAACpO,MAA9B,EAAsCoC,CAAC,EAAvC,EAA2C;AACvCgM,uBAAS,CAAChM,CAAD,CAAT,CAAajB,WAAb,IAA4B,GAA5B;AACH,aARe,CAShB;AACA;;;AACA,gBAAMkN,IAAI,GAAG,KAAKpC,SAAL,CAAeE,WAAf,EAAb;;AACA,iBAAK6B,aAAL,GAAqBK,IAArB;;AACA,iBAAKC,oCAAL,CAA0ChH,GAA1C;;AACA,iBAAK2G,wBAAL,CAA8BI,IAA9B;;AACA,iBAAK5hB,WAAL,CAAiB0B,aAAjB,CAA+BqC,WAA/B,CAA2C8W,GAA3C;AACH;;;iBACD,4BAAmB;AACf,gBAAMiH,aAAa,GAAG,KAAK9hB,WAAL,CAAiB0B,aAAvC;AACA,gBAAIqgB,UAAU,GAAGD,aAAa,CAACtE,UAAd,CAAyBjK,MAA1C;;AACA,gBAAI,KAAK6N,+BAAT,EAA0C;AACtC,mBAAKA,+BAAL,CAAqC7F,KAArC;AACH,aALc,CAMf;AACA;;;AACA,mBAAOwG,UAAU,EAAjB,EAAqB;AACjB,kBAAMC,KAAK,GAAGF,aAAa,CAACtE,UAAd,CAAyBuE,UAAzB,CAAd,CADiB,CAEjB;AACA;;AACA,kBAAIC,KAAK,CAACvE,QAAN,KAAmB,CAAnB,IAAwBuE,KAAK,CAAClF,QAAN,CAAeC,WAAf,OAAiC,KAA7D,EAAoE;AAChE+E,6BAAa,CAAC7d,WAAd,CAA0B+d,KAA1B;AACH;AACJ;AACJ;;;iBACD,kCAAyB;AACrB,gBAAI,CAAC,KAAKC,cAAL,EAAL,EAA4B;AACxB;AACH;;AACD,gBAAMC,IAAI,GAAG,KAAKliB,WAAL,CAAiB0B,aAA9B;AACA,gBAAMygB,YAAY,GAAG,KAAKC,OAAL,GACjB,KAAKhC,aAAL,CAAmBiC,qBAAnB,CAAyC,KAAKD,OAA9C,CADiB,GAEjB,KAAKhC,aAAL,CAAmBkC,sBAAnB,EAFJ;;AAGA,gBAAIH,YAAY,IAAI,KAAKI,qBAAzB,EAAgD;AAC5C,kBAAI,KAAKA,qBAAT,EAAgC;AAC5BL,oBAAI,CAAClkB,SAAL,CAAeO,MAAf,CAAsB,KAAKgkB,qBAA3B;AACH;;AACD,kBAAIJ,YAAJ,EAAkB;AACdD,oBAAI,CAAClkB,SAAL,CAAeE,GAAf,CAAmBikB,YAAnB;AACH;;AACD,mBAAKI,qBAAL,GAA6BJ,YAA7B;AACH;;AACD,gBAAI,KAAKK,QAAL,IAAiB,KAAKC,sBAA1B,EAAkD;AAC9C,kBAAI,KAAKA,sBAAT,EAAiC;AAC7BP,oBAAI,CAAClkB,SAAL,CAAeO,MAAf,CAAsB,KAAKkkB,sBAA3B;AACH;;AACD,kBAAI,KAAKD,QAAT,EAAmB;AACfN,oBAAI,CAAClkB,SAAL,CAAeE,GAAf,CAAmB,KAAKskB,QAAxB;AACH;;AACD,mBAAKC,sBAAL,GAA8B,KAAKD,QAAnC;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,2BAAkB5gB,KAAlB,EAAyB;AACrB,mBAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAAC+S,IAAN,GAAaT,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAA5B,GAAyDtS,KAAhE;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,kCAAyBggB,IAAzB,EAA+B;AAC3B,gBAAMc,QAAQ,GAAG,KAAKtB,+BAAtB;;AACA,gBAAIsB,QAAJ,EAAc;AACVA,sBAAQ,CAAC5jB,OAAT,CAAiB,UAAC6jB,KAAD,EAAQtlB,OAAR,EAAoB;AACjCslB,qBAAK,CAAC7jB,OAAN,CAAc,UAAAihB,IAAI,EAAI;AAClB1iB,yBAAO,CAACqQ,YAAR,CAAqBqS,IAAI,CAACjF,IAA1B,iBAAwC8G,IAAxC,cAAgD7B,IAAI,CAACne,KAArD;AACH,iBAFD;AAGH,eAJD;AAKH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,8CAAqCvE,OAArC,EAA8C;AAC1C,gBAAMulB,mBAAmB,GAAGvlB,OAAO,CAAC4X,gBAAR,CAAyB+K,wBAAzB,CAA5B;AACA,gBAAM0C,QAAQ,GAAG,KAAKtB,+BAAL,GACb,KAAKA,+BAAL,IAAwC,IAAInkB,GAAJ,EAD5C;;AAF0C,uCAIjC0Y,CAJiC;AAKtCkK,+BAAiB,CAAC/gB,OAAlB,CAA0B,UAAAihB,IAAI,EAAI;AAC9B,oBAAM8C,oBAAoB,GAAGD,mBAAmB,CAACjN,CAAD,CAAhD;AACA,oBAAM/T,KAAK,GAAGihB,oBAAoB,CAACC,YAArB,CAAkC/C,IAAlC,CAAd;AACA,oBAAMgD,KAAK,GAAGnhB,KAAK,GAAGA,KAAK,CAACmhB,KAAN,CAAY7C,cAAZ,CAAH,GAAiC,IAApD;;AACA,oBAAI6C,KAAJ,EAAW;AACP,sBAAIxF,UAAU,GAAGmF,QAAQ,CAACllB,GAAT,CAAaqlB,oBAAb,CAAjB;;AACA,sBAAI,CAACtF,UAAL,EAAiB;AACbA,8BAAU,GAAG,EAAb;AACAmF,4BAAQ,CAAChkB,GAAT,CAAamkB,oBAAb,EAAmCtF,UAAnC;AACH;;AACDA,4BAAU,CAACtJ,IAAX,CAAgB;AAAE6G,wBAAI,EAAEiF,IAAR;AAAcne,yBAAK,EAAEmhB,KAAK,CAAC,CAAD;AAA1B,mBAAhB;AACH;AACJ,eAZD;AALsC;;AAI1C,iBAAK,IAAIpN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiN,mBAAmB,CAACrP,MAAxC,EAAgDoC,CAAC,EAAjD,EAAqD;AAAA,oBAA5CA,CAA4C;AAcpD;AACJ;AACD;;;;iBACA,wBAAeqN,OAAf,EAAwB;AAAA;;AACpB,iBAAKC,aAAL,GAAqB,IAArB;AACA,iBAAKC,QAAL,GAAgB,IAAhB;;AACA,iBAAK3C,iBAAL,CAAuBkB,WAAvB;;AACA,gBAAIuB,OAAJ,EAAa;AACT,yCAA8B,KAAKG,cAAL,CAAoBH,OAApB,CAA9B;AAAA;AAAA,kBAAOpJ,SAAP;AAAA,kBAAkBtB,QAAlB;;AACA,kBAAIsB,SAAJ,EAAe;AACX,qBAAKqJ,aAAL,GAAqBrJ,SAArB;AACH;;AACD,kBAAItB,QAAJ,EAAc;AACV,qBAAK4K,QAAL,GAAgB5K,QAAhB;AACH;;AACD,mBAAKiI,iBAAL,GAAyB,KAAKH,aAAL,CAAmBgD,eAAnB,CAAmC9K,QAAnC,EAA6CsB,SAA7C,EACpBzW,IADoB,CACf,iDAAAuQ,IAAA,EAAK,CAAL,CADe,EAEpBrT,SAFoB,CAEV,UAAAwa,GAAG;AAAA,uBAAI,OAAI,CAACwI,cAAL,CAAoBxI,GAApB,CAAJ;AAAA,eAFO,EAEuB,UAACmB,GAAD,EAAS;AACrD,oBAAMC,YAAY,mCAA4BrC,SAA5B,cAAyCtB,QAAzC,eAAsD0D,GAAG,CAACE,OAA1D,CAAlB;;AACA,uBAAI,CAAChD,aAAL,CAAmBiD,WAAnB,CAA+B,IAAItN,KAAJ,CAAUoN,YAAV,CAA/B;AACH,eALwB,CAAzB;AAMH;AACJ;;;;QA9OiBmD,Y;;AAgPtBe,cAAO,CAAClhB,IAAR,GAAe,SAASqkB,eAAT,CAAyBnkB,CAAzB,EAA4B;AAAE,eAAO,KAAKA,CAAC,IAAIghB,QAAV,EAAmB,gEAAyB,qDAAzB,CAAnB,EAAgE,gEAAyBpH,gBAAzB,CAAhE,EAA2G,gEAAyB,aAAzB,CAA3G,EAAoJ,gEAAyBsG,kBAAzB,CAApJ,EAAiM,gEAAyB,uDAAzB,CAAjM,CAAP;AAAyP,OAAtS;;AACAc,cAAO,CAAC1W,IAAR,GAAe,aAAc,gEAAyB;AAAEhK,YAAI,EAAE0gB,QAAR;AAAiB1f,iBAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4CmF,iBAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,UAAnB,EAA+B,aAA/B,CAAvD;AAAsGyC,gBAAQ,EAAE,CAAhH;AAAmHxC,oBAAY,EAAE,SAAS0d,oBAAT,CAA8Bxd,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACpO,sEAAmB,oBAAnB,EAAyCC,GAAG,CAACic,cAAJ,KAAuB,MAAvB,GAAgC,KAAzE,EAAgF,oBAAhF,EAAsGjc,GAAG,CAACkd,QAAJ,IAAgBld,GAAG,CAACwc,QAA1H,EAAoI,yBAApI,EAA+Jxc,GAAG,CAACid,aAAJ,IAAqBjd,GAAG,CAACoc,OAAxL;;AACA,sEAAmB,iBAAnB,EAAsCpc,GAAG,CAACya,MAA1C,EAAkD,mBAAlD,EAAuEza,GAAG,CAACgG,KAAJ,KAAc,SAAd,IAA2BhG,GAAG,CAACgG,KAAJ,KAAc,QAAzC,IAAqDhG,GAAG,CAACgG,KAAJ,KAAc,MAA1I;AACH;AAAE,SAH+C;AAG7C7F,cAAM,EAAE;AAAE6F,eAAK,EAAE,OAAT;AAAkByU,gBAAM,EAAE,QAA1B;AAAoCiB,iBAAO,EAAE,SAA7C;AAAwDU,iBAAO,EAAE,SAAjE;AAA4EI,kBAAQ,EAAE;AAAtF,SAHqC;AAG+Dnc,gBAAQ,EAAE,CAAC,SAAD,CAHzE;AAGsFwH,gBAAQ,EAAE,CAAC,wEAAD,CAHhG;AAGqIlE,0BAAkB,EAAErC,GAHzJ;AAG8JsC,aAAK,EAAE,CAHrK;AAGwKC,YAAI,EAAE,CAH9K;AAGiLC,gBAAQ,EAAE,SAAS0Z,gBAAT,CAA0Bzd,EAA1B,EAA8BC,GAA9B,EAAmC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC1R;;AACA,uEAAoB,CAApB;AACH;AAAE,SAN+C;AAM7CiE,cAAM,EAAE,CAAC,4uBAAD,CANqC;AAM2sBC,qBAAa,EAAE,CAN1tB;AAM6tBC,uBAAe,EAAE;AAN9uB,OAAzB,CAA7B;;AAOAiW,cAAO,CAAC3gB,cAAR,GAAyB;AAAA,eAAM,CAC3B;AAAEC,cAAI,EAAE,2CAAAkB;AAAR,SAD2B,EAE3B;AAAElB,cAAI,EAAEsZ;AAAR,SAF2B,EAG3B;AAAEtZ,cAAI,EAAE0K,MAAR;AAAgB7D,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAAuO,SAAR;AAAmBlO,gBAAI,EAAE,CAAC,aAAD;AAAzB,WAAD;AAA5B,SAH2B,EAI3B;AAAEL,cAAI,EAAE6C,SAAR;AAAmBgE,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAA+G,MAAR;AAAgB1G,gBAAI,EAAE,CAACuf,kBAAD;AAAtB,WAAD;AAA/B,SAJ2B,EAK3B;AAAE5f,cAAI,EAAE,2CAAAif;AAAR,SAL2B,CAAN;AAAA,OAAzB;;AAOAyB,cAAO,CAACvf,cAAR,GAAyB;AACrB6f,cAAM,EAAE,CAAC;AAAEhhB,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CADa;AAErBib,eAAO,EAAE,CAAC;AAAEjiB,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CAFY;AAGrB2b,eAAO,EAAE,CAAC;AAAE3iB,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CAHY;AAIrB+b,gBAAQ,EAAE,CAAC;AAAE/iB,cAAI,EAAE,2CAAAgH;AAAR,SAAD;AAJW,OAAzB;;AAMA,OAAC,YAAY;AAAE,SAAC,OAAO7G,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBugB,QAAzB,EAAkC,CAAC;AAC7F1gB,cAAI,EAAE,2CAAA2K,SADuF;AAE7FtK,cAAI,EAAE,CAAC;AACCgK,oBAAQ,EAAE,2BADX;AAEC/I,oBAAQ,EAAE,UAFX;AAGCsF,oBAAQ,EAAE,SAHX;AAICF,kBAAM,EAAE,CAAC,OAAD,CAJT;AAKCQ,gBAAI,EAAE;AACF,sBAAQ,KADN;AAEF,uBAAS,sBAFP;AAGF,2CAA6B,mCAH3B;AAIF,2CAA6B,sBAJ3B;AAKF,gDAAkC,0BALhC;AAMF,yCAA2B,QANzB;AAOF,2CAA6B;AAP3B,aALP;AAcCsD,yBAAa,EAAE,2CAAAI,iBAAA,KAdhB;AAeCH,2BAAe,EAAE,2CAAAI,uBAAA,OAflB;AAgBCN,kBAAM,EAAE,CAAC,4uBAAD;AAhBT,WAAD;AAFuF,SAAD,CAAlC,EAoB1D,YAAY;AAAE,iBAAO,CAAC;AAAEvK,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAEsZ;AAAR,WAA9B,EAAyD;AAAEtZ,gBAAI,EAAE0K,MAAR;AAAgB7D,sBAAU,EAAE,CAAC;AACnG7G,kBAAI,EAAE,2CAAAuO,SAD6F;AAEnGlO,kBAAI,EAAE,CAAC,aAAD;AAF6F,aAAD;AAA5B,WAAzD,EAGX;AAAEL,gBAAI,EAAE6C,SAAR;AAAmBgE,sBAAU,EAAE,CAAC;AAClC7G,kBAAI,EAAE,2CAAA+G,MAD4B;AAElC1G,kBAAI,EAAE,CAACuf,kBAAD;AAF4B,aAAD;AAA/B,WAHW,EAMX;AAAE5f,gBAAI,EAAE;AAAR,WANW,CAAP;AAM6B,SA1Be,EA0Bb;AAAEghB,gBAAM,EAAE,CAAC;AACpDhhB,gBAAI,EAAE,2CAAAgH;AAD8C,WAAD,CAAV;AAEzCib,iBAAO,EAAE,CAAC;AACVjiB,gBAAI,EAAE,2CAAAgH;AADI,WAAD,CAFgC;AAIzC2b,iBAAO,EAAE,CAAC;AACV3iB,gBAAI,EAAE,2CAAAgH;AADI,WAAD,CAJgC;AAMzC+b,kBAAQ,EAAE,CAAC;AACX/iB,gBAAI,EAAE,2CAAAgH;AADK,WAAD;AAN+B,SA1Ba,CAAnD;AAkCC,OAlChB;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMgd,c;;;;AAENA,oBAAa,CAACxkB,IAAd,GAAqB,SAASykB,qBAAT,CAA+BvkB,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIskB,cAAV,GAAP;AAAoC,OAA7F;;AACAA,oBAAa,CAAC3c,IAAd,GAAqB,aAAc,+DAAwB;AAAErH,YAAI,EAAEgkB;AAAR,OAAxB,CAAnC;AACAA,oBAAa,CAAC1c,IAAd,GAAqB,aAAc,+DAAwB;AAAEC,eAAO,EAAE,CAAC,CAAC,qDAAAgE,eAAD,CAAD,EAAoB,qDAAAA,eAApB;AAAX,OAAxB,CAAnC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOpL,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB6jB,cAAzB,EAAwC,CAAC;AACnGhkB,cAAI,EAAE,2CAAAyH,QAD6F;AAEnGpH,cAAI,EAAE,CAAC;AACCkH,mBAAO,EAAE,CAAC,qDAAAgE,eAAD,CADV;AAEC5D,mBAAO,EAAE,CAAC+Y,QAAD,EAAU,qDAAAnV,eAAV,CAFV;AAGC7D,wBAAY,EAAE,CAACgZ,QAAD;AAHf,WAAD;AAF6F,SAAD,CAAxC,EAO1D,IAP0D,EAOpD,IAPoD,CAAnD;AAOO,OAPtB;;AAQA,OAAC,YAAY;AAAE,SAAC,OAAO9Y,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0Boc,cAA1B,EAAyC;AAAEtc,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAACgZ,QAAD,CAAP;AAAmB,WAAjD;AAAmDnZ,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,qDAAAgE,eAAD,CAAP;AAA2B,WAArG;AAAuG5D,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC+Y,QAAD,EAAU,qDAAAnV,eAAV,CAAP;AAAoC;AAAlK,SAAzC,CAAnD;AAAoQ,OAAnR;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACj+BA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;UAOM2Y,oB;;;;;;;;;;;;;eACF,eAAyB;AAAE,mBAAO,KAAKlhB,OAAZ;AAAsB,W;eACjD,aAAuBb,KAAvB,EAA8B;AAAE,iBAAKa,OAAL,GAAeb,KAAf;AAAuB;;;eACvD,eAAyB;AAAE,mBAAO,KAAKiB,OAAZ;AAAsB,W;eACjD,aAAuBjB,KAAvB,EAA8B;AAAE,iBAAKiB,OAAL,GAAejB,KAAf;AAAuB;;;eACvD,eAAkB;AAAE,mBAAO,KAAKwE,OAAZ;AAAsB,W;eAC1C,aAAgBxE,KAAhB,EAAuB;AAAE,iBAAKwE,OAAL,GAAexE,KAAf;AAAuB;;;eAChD,eAA0B;AAAE,mBAAO,KAAKwE,OAAZ;AAAsB,W;eAClD,aAAwBxE,KAAxB,EAA+B;AAAE,iBAAKwE,OAAL,GAAexE,KAAf;AAAuB;;;;QAR1B,qDAAAZ,mB;;AAUlC2iB,0BAAmB,CAAC1kB,IAApB,GAA2B,aAAc,YAAY;AAAE,YAAI2kB,gCAAJ;AAAsC,eAAO,SAASC,2BAAT,CAAqC1kB,CAArC,EAAwC;AAAE,iBAAO,CAACykB,gCAAgC,KAAKA,gCAAgC,GAAG,oEAA6BD,oBAA7B,CAAxC,CAAjC,EAA6HxkB,CAAC,IAAIwkB,oBAAlI,CAAP;AAAgK,SAAjN;AAAoN,OAAxQ,EAAzC;;AACAA,0BAAmB,CAACnjB,IAApB,GAA2B,aAAc,gEAAyB;AAAEf,YAAI,EAAEkkB,oBAAR;AAA6BljB,iBAAS,EAAE,CAAC,CAAC,UAAD,EAAa,cAAb,EAA6B,EAA7B,CAAD,EAAmC,CAAC,UAAD,EAAa,qBAAb,EAAoC,EAApC,CAAnC,CAAxC;AAAqHmF,iBAAS,EAAE,CAAC,MAAD,EAAS,GAAT,EAAc,CAAd,EAAiB,uBAAjB,EAA0C,cAA1C,CAAhI;AAA2LO,cAAM,EAAE;AAAE2d,4BAAkB,EAAE,oBAAtB;AAA4CC,4BAAkB,EAAE,oBAAhE;AAAsFC,4BAAkB,EAAE,oBAA1G;AAAgIC,4BAAkB,EAAE,oBAApJ;AAA0KC,qBAAW,EAAE,CAAC,cAAD,EAAiB,aAAjB,CAAvL;AAAwNC,6BAAmB,EAAE;AAA7O,SAAnM;AAAyc9d,gBAAQ,EAAE,CAAC,qBAAD,CAAnd;AAA4ewH,gBAAQ,EAAE,CAAC,wEAAD;AAAtf,OAAzB,CAAzC;AACA8V,0BAAmB,CAAC/iB,cAApB,GAAqC;AACjCojB,0BAAkB,EAAE,CAAC;AAAEvkB,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CADa;AAEjCwd,0BAAkB,EAAE,CAAC;AAAExkB,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CAFa;AAGjCyd,mBAAW,EAAE,CAAC;AAAEzkB,cAAI,EAAE,2CAAAgH,KAAR;AAAe3G,cAAI,EAAE,CAAC,cAAD;AAArB,SAAD,CAHoB;AAIjCqkB,2BAAmB,EAAE,CAAC;AAAE1kB,cAAI,EAAE,2CAAAgH;AAAR,SAAD;AAJY,OAArC;;AAMA,OAAC,YAAY;AAAE,SAAC,OAAO7G,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB+jB,oBAAzB,EAA8C,CAAC;AACzGlkB,cAAI,EAAE,2CAAAqB,SADmG;AAEzGhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,EAAE,uDADX;AAECsF,oBAAQ,EAAE,qBAFX;AAGCF,kBAAM,EAAE,CAAC,oBAAD,EAAuB,oBAAvB,CAHT;AAICQ,gBAAI,EAAE;AACF,uBAAS,oCADP;AAEF;AACA;AACA,sBAAQ;AAJN;AAJP,WAAD;AAFmG,SAAD,CAA9C,EAa1D,IAb0D,EAapD;AAAEqd,4BAAkB,EAAE,CAAC;AACzBvkB,gBAAI,EAAE,2CAAAgH;AADmB,WAAD,CAAtB;AAEFwd,4BAAkB,EAAE,CAAC;AACrBxkB,gBAAI,EAAE,2CAAAgH;AADe,WAAD,CAFlB;AAIFyd,qBAAW,EAAE,CAAC;AACdzkB,gBAAI,EAAE,2CAAAgH,KADQ;AAEd3G,gBAAI,EAAE,CAAC,cAAD;AAFQ,WAAD,CAJX;AAOFqkB,6BAAmB,EAAE,CAAC;AACtB1kB,gBAAI,EAAE,2CAAAgH;AADgB,WAAD;AAPnB,SAboD,CAAnD;AAsBC,OAtBhB;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,eAAS2d,gCAAT,CAAyC3kB,IAAzC,EAA+C;AAC3C,eAAOoP,KAAK,wBAAgBpP,IAAhB,qCAAZ;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAM4kB,yBAAwB,GAAG,IAAI,2CAAA/W,cAAJ,CAAmB,0BAAnB,CAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMgX,uBAAuB,GAAG,CAC5B,QAD4B,EAE5B,UAF4B,EAG5B,MAH4B,EAI5B,QAJ4B,EAK5B,OAL4B,EAM5B,OAN4B,EAO5B,OAP4B,EAQ5B,OAR4B,EAS5B,QAT4B,CAAhC;AAWA,UAAIvU,YAAY,GAAG,CAAnB,C,CACA;;AACA;;AACA,UAAMwU,aAAa,GAAG,wDAAAC,eAAA;AAClB,yBAAYC,yBAAZ,EAAuCC,WAAvC,EAAoDC,gBAApD;AACA;AACAvS,iBAFA,EAEW;AAAA;;AACP,eAAKqS,yBAAL,GAAiCA,yBAAjC;AACA,eAAKC,WAAL,GAAmBA,WAAnB;AACA,eAAKC,gBAAL,GAAwBA,gBAAxB;AACA,eAAKvS,SAAL,GAAiBA,SAAjB;AACH;;AARiB;AAAA,UAAtB;AAUA;;;UACMwS,S;;;;;AACF,2BAAY5kB,WAAZ,EAAyBlD,SAAzB,EAAoCsV,SAApC,EAA+CsS,WAA/C,EAA4DC,gBAA5D,EAA8EF,yBAA9E,EAAyGI,kBAAzG,EAA6H5kB,gBAA7H,EAA+I6kB,MAA/I,EACA;AACA;AACAC,kBAHA,EAGY;AAAA;;AAAA;;AACR,uCAAMN,yBAAN,EAAiCC,WAAjC,EAA8CC,gBAA9C,EAAgEvS,SAAhE;AACA,kBAAKpS,WAAL,GAAmBA,WAAnB;AACA,kBAAKlD,SAAL,GAAiBA,SAAjB;AACA,kBAAKmD,gBAAL,GAAwBA,gBAAxB;AACA,kBAAK8kB,UAAL,GAAkBA,UAAlB;AACA,kBAAKC,IAAL,uBAAyBjV,YAAY,EAArC;AACA;AACR;AACA;AACA;;AACQ,kBAAKkH,OAAL,GAAe,KAAf;AACA;AACR;AACA;AACA;;AACQ,kBAAKjF,YAAL,GAAoB,IAAI,kCAAArU,OAAJ,EAApB;AACA;AACR;AACA;AACA;;AACQ,kBAAKoU,WAAL,GAAmB,WAAnB;AACA;AACR;AACA;AACA;;AACQ,kBAAKiF,UAAL,GAAkB,KAAlB;AACA,kBAAKiO,SAAL,GAAiB,KAAjB;AACA,kBAAKC,SAAL,GAAiB,KAAjB;AACA,kBAAKC,KAAL,GAAa,MAAb;AACA,kBAAKC,SAAL,GAAiB,KAAjB;AACA,kBAAKC,qBAAL,GAA6B,CACzB,MADyB,EAEzB,UAFyB,EAGzB,gBAHyB,EAIzB,OAJyB,EAKzB,MALyB,EAMzB,MANyB,EAO3BzJ,MAP2B,CAOpB,UAAAzc,CAAC;AAAA,mBAAI,uDAAAmmB,sBAAA,IAAyBC,GAAzB,CAA6BpmB,CAA7B,CAAJ;AAAA,WAPmB,CAA7B;AAQA,cAAM9B,OAAO,GAAG,QAAK2C,WAAL,CAAiB0B,aAAjC;AACA,cAAMob,QAAQ,GAAGzf,OAAO,CAACyf,QAAR,CAAiBC,WAAjB,EAAjB,CAxCQ,CAyCR;AACA;;AACA,kBAAKyI,mBAAL,GAA2BX,kBAAkB,IAAIxnB,OAAjD;AACA,kBAAKooB,oBAAL,GAA4B,QAAK7jB,KAAjC,CA5CQ,CA6CR;;AACA,kBAAKwK,EAAL,GAAU,QAAKA,EAAf,CA9CQ,CA+CR;AACA;AACA;;AACA,cAAItP,SAAS,CAAC4oB,GAAd,EAAmB;AACfZ,kBAAM,CAACtmB,iBAAP,CAAyB,YAAM;AAC3BwB,yBAAW,CAAC0B,aAAZ,CAA0BjD,gBAA1B,CAA2C,OAA3C,EAAoD,UAACX,KAAD,EAAW;AAC3D,oBAAM6nB,EAAE,GAAG7nB,KAAK,CAACO,MAAjB,CAD2D,CAE3D;AACA;AACA;AACA;AACA;AACA;;AACA,oBAAI,CAACsnB,EAAE,CAAC/jB,KAAJ,IAAa+jB,EAAE,CAACrgB,cAAH,KAAsB,CAAnC,IAAwCqgB,EAAE,CAACpgB,YAAH,KAAoB,CAAhE,EAAmE;AAC/D;AACA;AACA;AACA;AACAogB,oBAAE,CAAClgB,iBAAH,CAAqB,CAArB,EAAwB,CAAxB;AACAkgB,oBAAE,CAAClgB,iBAAH,CAAqB,CAArB,EAAwB,CAAxB;AACH;AACJ,eAhBD;AAiBH,aAlBD;AAmBH;;AACD,kBAAKmgB,SAAL,GAAiB,CAAC,QAAK9oB,SAAL,CAAeK,SAAjC;AACA,kBAAK0oB,eAAL,GAAuB/I,QAAQ,KAAK,QAApC;AACA,kBAAKgJ,WAAL,GAAmBhJ,QAAQ,KAAK,UAAhC;AACA,kBAAKiJ,cAAL,GAAsB,CAAC,CAAChB,UAAxB;;AACA,cAAI,QAAKc,eAAT,EAA0B;AACtB,oBAAK9T,WAAL,GAAmB1U,OAAO,CAAC2oB,QAAR,GAAmB,4BAAnB,GACf,mBADJ;AAEH;;AA9EO;AA+EX;AACD;AACJ;AACA;AACA;;;;;eACI,eAAe;AACX,gBAAI,KAAK5T,SAAL,IAAkB,KAAKA,SAAL,CAAe7F,QAAf,KAA4B,IAAlD,EAAwD;AACpD,qBAAO,KAAK6F,SAAL,CAAe7F,QAAtB;AACH;;AACD,mBAAO,KAAK0Y,SAAZ;AACH,W;eACD,aAAarjB,KAAb,EAAoB;AAChB,iBAAKqjB,SAAL,GAAiB,uDAAAhjB,qBAAA,EAAsBL,KAAtB,CAAjB,CADgB,CAEhB;AACA;;AACA,gBAAI,KAAKqV,OAAT,EAAkB;AACd,mBAAKA,OAAL,GAAe,KAAf;AACA,mBAAKjF,YAAL,CAAkB5T,IAAlB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;eACI,eAAS;AAAE,mBAAO,KAAK6nB,GAAZ;AAAkB,W;eAC7B,aAAOrkB,KAAP,EAAc;AAAE,iBAAKqkB,GAAL,GAAWrkB,KAAK,IAAI,KAAKojB,IAAzB;AAAgC;AAChD;AACJ;AACA;AACA;;;;eACI,eAAe;AAAE,mBAAO,KAAKE,SAAZ;AAAwB,W;eACzC,aAAatjB,KAAb,EAAoB;AAAE,iBAAKsjB,SAAL,GAAiB,uDAAAjjB,qBAAA,EAAsBL,KAAtB,CAAjB;AAAgD;AACtE;;;;eACA,eAAW;AAAE,mBAAO,KAAKujB,KAAZ;AAAoB,W;eACjC,aAASvjB,KAAT,EAAgB;AACZ,iBAAKujB,KAAL,GAAavjB,KAAK,IAAI,MAAtB;;AACA,iBAAKskB,aAAL,GAFY,CAGZ;AACA;AACA;;;AACA,gBAAI,CAAC,KAAKJ,WAAN,IAAqB,uDAAAR,sBAAA,IAAyBC,GAAzB,CAA6B,KAAKJ,KAAlC,CAAzB,EAAmE;AAC/D,mBAAKnlB,WAAL,CAAiB0B,aAAjB,CAA+BjC,IAA/B,GAAsC,KAAK0lB,KAA3C;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;eACI,eAAY;AAAE,mBAAO,KAAKK,mBAAL,CAAyB5jB,KAAhC;AAAwC,W;eACtD,aAAUA,KAAV,EAAiB;AACb,gBAAIA,KAAK,KAAK,KAAKA,KAAnB,EAA0B;AACtB,mBAAK4jB,mBAAL,CAAyB5jB,KAAzB,GAAiCA,KAAjC;AACA,mBAAKoQ,YAAL,CAAkB5T,IAAlB;AACH;AACJ;AACD;;;;eACA,eAAe;AAAE,mBAAO,KAAKgnB,SAAZ;AAAwB,W;eACzC,aAAaxjB,KAAb,EAAoB;AAAE,iBAAKwjB,SAAL,GAAiB,uDAAAnjB,qBAAA,EAAsBL,KAAtB,CAAjB;AAAgD;;;iBACtE,2BAAkB;AAAA;;AACd,gBAAI,KAAK9E,SAAL,CAAeK,SAAnB,EAA8B;AAC1B,mBAAK8C,gBAAL,CAAsBG,OAAtB,CAA8B,KAAKJ,WAAL,CAAiB0B,aAA/C,EAA8DrB,SAA9D,CAAwE,UAAAvC,KAAK,EAAI;AAC7E,uBAAI,CAACkZ,UAAL,GAAkBlZ,KAAK,CAACQ,YAAxB;;AACA,uBAAI,CAAC0T,YAAL,CAAkB5T,IAAlB;AACH,eAHD;AAIH;AACJ;;;iBACD,uBAAc;AACV,iBAAK4T,YAAL,CAAkB5T,IAAlB;AACH;;;iBACD,uBAAc;AACV,iBAAK4T,YAAL,CAAkBnT,QAAlB;;AACA,gBAAI,KAAK/B,SAAL,CAAeK,SAAnB,EAA8B;AAC1B,mBAAK8C,gBAAL,CAAsBjB,cAAtB,CAAqC,KAAKgB,WAAL,CAAiB0B,aAAtD;AACH;AACJ;;;iBACD,qBAAY;AACR,gBAAI,KAAK0Q,SAAT,EAAoB;AAChB;AACA;AACA;AACA,mBAAK+T,gBAAL;AACH,aANO,CAOR;AACA;AACA;;;AACA,iBAAKC,sBAAL,GAVQ,CAWR;AACA;;;AACA,iBAAKC,sBAAL;AACH;AACD;;;;iBACA,eAAMvN,OAAN,EAAe;AACX,iBAAK9Y,WAAL,CAAiB0B,aAAjB,CAA+B4kB,KAA/B,CAAqCxN,OAArC;AACH,W,CACD;AACA;AACA;AACA;;AACA;AACA;AACA;;;;iBACA,uBAAcyN,SAAd,EAAyB;AACrB,gBAAIA,SAAS,KAAK,KAAKtP,OAAvB,EAAgC;AAC5B,mBAAKA,OAAL,GAAesP,SAAf;AACA,mBAAKvU,YAAL,CAAkB5T,IAAlB;AACH;AACJ,W,CACD;AACA;AACA;AACA;AACA;;;;iBACA,oBAAW,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACD;;;;iBACA,kCAAyB;AACrB,gBAAIyf,EAAJ,EAAQ2I,EAAR,CADqB,CAErB;AACA;AACA;AACA;;;AACA,gBAAMpkB,WAAW,GAAG,CAAC,CAACokB,EAAE,GAAG,CAAC3I,EAAE,GAAG,KAAKkH,UAAX,MAA2B,IAA3B,IAAmClH,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAAC9G,uBAArE,MAAkG,IAAlG,IAA0GyP,EAAE,KAAK,KAAK,CAAtH,GAA0H,KAAK,CAA/H,GAAmIA,EAAE,CAACC,IAAH,CAAQ5I,EAAR,CAApI,IAAmJ,IAAnJ,GAA0J,KAAKzb,WAAnL;;AACA,gBAAIA,WAAW,KAAK,KAAKskB,oBAAzB,EAA+C;AAC3C,kBAAMrpB,OAAO,GAAG,KAAK2C,WAAL,CAAiB0B,aAAjC;AACA,mBAAKglB,oBAAL,GAA4BtkB,WAA5B;AACAA,yBAAW,GACP/E,OAAO,CAACqQ,YAAR,CAAqB,aAArB,EAAoCtL,WAApC,CADO,GAC4C/E,OAAO,CAACwf,eAAR,CAAwB,aAAxB,CADvD;AAEH;AACJ;AACD;;;;iBACA,kCAAyB;AACrB,gBAAMiE,QAAQ,GAAG,KAAK9gB,WAAL,CAAiB0B,aAAjB,CAA+BE,KAAhD;;AACA,gBAAI,KAAK6jB,oBAAL,KAA8B3E,QAAlC,EAA4C;AACxC,mBAAK2E,oBAAL,GAA4B3E,QAA5B;AACA,mBAAK9O,YAAL,CAAkB5T,IAAlB;AACH;AACJ;AACD;;;;iBACA,yBAAgB;AACZ,gBAAIkmB,uBAAuB,CAAChI,OAAxB,CAAgC,KAAK6I,KAArC,IAA8C,CAAC,CAA/C,KACC,OAAOvlB,SAAP,KAAqB,WAArB,IAAoCA,SADrC,CAAJ,EACqD;AACjD,oBAAMwkB,gCAA+B,CAAC,KAAKe,KAAN,CAArC;AACH;AACJ;AACD;;;;iBACA,yBAAgB;AACZ,mBAAO,KAAKE,qBAAL,CAA2B/I,OAA3B,CAAmC,KAAK6I,KAAxC,IAAiD,CAAC,CAAzD;AACH;AACD;;;;iBACA,uBAAc;AACV;AACA,gBAAIwB,QAAQ,GAAG,KAAK3mB,WAAL,CAAiB0B,aAAjB,CAA+BilB,QAA9C;AACA,mBAAOA,QAAQ,IAAIA,QAAQ,CAACC,QAA5B;AACH;AACD;AACJ;AACA;AACA;;;;eACI,eAAY;AACR,mBAAO,CAAC,KAAKC,aAAL,EAAD,IAAyB,CAAC,KAAK7mB,WAAL,CAAiB0B,aAAjB,CAA+BE,KAAzD,IAAkE,CAAC,KAAKklB,WAAL,EAAnE,IACH,CAAC,KAAK9P,UADV;AAEH;AACD;AACJ;AACA;AACA;;;;eACI,eAAuB;AACnB,gBAAI,KAAK6O,eAAT,EAA0B;AACtB;AACA;AACA;AACA,kBAAMkB,aAAa,GAAG,KAAK/mB,WAAL,CAAiB0B,aAAvC;AACA,kBAAMslB,WAAW,GAAGD,aAAa,CAACjO,OAAd,CAAsB,CAAtB,CAApB,CALsB,CAMtB;AACA;;AACA,qBAAO,KAAK7B,OAAL,IAAgB8P,aAAa,CAACf,QAA9B,IAA0C,CAAC,KAAKla,KAAhD,IACH,CAAC,EAAEib,aAAa,CAACE,aAAd,GAA8B,CAAC,CAA/B,IAAoCD,WAApC,IAAmDA,WAAW,CAACE,KAAjE,CADL;AAEH,aAVD,MAWK;AACD,qBAAO,KAAKjQ,OAAL,IAAgB,CAAC,KAAKnL,KAA7B;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,2BAAkBiI,GAAlB,EAAuB;AACnB,gBAAIA,GAAG,CAACR,MAAR,EAAgB;AACZ,mBAAKvT,WAAL,CAAiB0B,aAAjB,CAA+BgM,YAA/B,CAA4C,kBAA5C,EAAgEqG,GAAG,CAACkM,IAAJ,CAAS,GAAT,CAAhE;AACH,aAFD,MAGK;AACD,mBAAKjgB,WAAL,CAAiB0B,aAAjB,CAA+Bmb,eAA/B,CAA+C,kBAA/C;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,4BAAmB;AACf;AACA;AACA;AACA,gBAAI,CAAC,KAAK5F,OAAV,EAAmB;AACf,mBAAKqP,KAAL;AACH;AACJ;AACD;;;;iBACA,2BAAkB;AACd,gBAAMjpB,OAAO,GAAG,KAAK2C,WAAL,CAAiB0B,aAAjC;AACA,mBAAO,KAAKmkB,eAAL,KAAyBxoB,OAAO,CAAC2oB,QAAR,IAAoB3oB,OAAO,CAACgkB,IAAR,GAAe,CAA5D,CAAP;AACH;;;;QA5SkBkD,a;;AA8SvBK,eAAQ,CAAC3lB,IAAT,GAAgB,SAASkoB,gBAAT,CAA0BhoB,CAA1B,EAA6B;AAAE,eAAO,KAAKA,CAAC,IAAIylB,SAAV,EAAoB,gEAAyB,qDAAzB,CAApB,EAAiE,gEAAyB,2DAAzB,CAAjE,EAA4G,gEAAyB,qDAAzB,EAA2C,EAA3C,CAA5G,EAA4J,gEAAyB,kDAAzB,EAAwC,CAAxC,CAA5J,EAAwM,gEAAyB,8DAAzB,EAAoD,CAApD,CAAxM,EAAgQ,gEAAyB,qEAAzB,CAAhQ,EAAoT,gEAAyBP,yBAAzB,EAAmD,EAAnD,CAApT,EAA4W,gEAAyB,oEAAzB,CAA5W,EAA8Z,gEAAyB,iDAAzB,CAA9Z,EAAuc,gEAAyB,0DAAAhU,cAAzB,EAAyC,CAAzC,CAAvc,CAAP;AAA6f,OAA5iB;;AACAuU,eAAQ,CAACpkB,IAAT,GAAgB,aAAc,gEAAyB;AAAEf,YAAI,EAAEmlB,SAAR;AAAkBnkB,iBAAS,EAAE,CAAC,CAAC,OAAD,EAAU,UAAV,EAAsB,EAAtB,CAAD,EAA4B,CAAC,UAAD,EAAa,UAAb,EAAyB,EAAzB,CAA5B,EAA0D,CAAC,QAAD,EAAW,kBAAX,EAA+B,EAA/B,CAA1D,EAA8F,CAAC,OAAD,EAAU,kBAAV,EAA8B,EAA9B,CAA9F,EAAiI,CAAC,UAAD,EAAa,kBAAb,EAAiC,EAAjC,CAAjI,CAA7B;AAAqMmF,iBAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ,EAAyB,iCAAzB,CAAhN;AAA6QyC,gBAAQ,EAAE,EAAvR;AAA2RxC,oBAAY,EAAE,SAASuhB,qBAAT,CAA+BrhB,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC9Y,qEAAkB,OAAlB,EAA2B,SAASshB,iCAAT,GAA6C;AAAE,qBAAOrhB,GAAG,CAACshB,aAAJ,CAAkB,IAAlB,CAAP;AAAiC,aAA3G,EAA6G,MAA7G,EAAqH,SAASC,gCAAT,GAA4C;AAAE,qBAAOvhB,GAAG,CAACshB,aAAJ,CAAkB,KAAlB,CAAP;AAAkC,aAArM,EAAuM,OAAvM,EAAgN,SAASE,iCAAT,GAA6C;AAAE,qBAAOxhB,GAAG,CAACyhB,QAAJ,EAAP;AAAwB,aAAvR;AACH;;AAAC,cAAI1hB,EAAE,GAAG,CAAT,EAAY;AACV,yEAAsB,UAAtB,EAAkCC,GAAG,CAACuG,QAAtC,EAAgD,UAAhD,EAA4DvG,GAAG,CAACsG,QAAhE;;AACA,sEAAmB,IAAnB,EAAyBtG,GAAG,CAACoG,EAA7B,EAAiC,kBAAjC,EAAqDpG,GAAG,CAAC5D,WAAzD,EAAsE,UAAtE,EAAkF4D,GAAG,CAAC0hB,QAAJ,IAAgB,CAAC1hB,GAAG,CAAC6f,eAArB,IAAwC,IAA1H,EAAgI,cAAhI,EAAgJ7f,GAAG,CAAC8F,KAAJ,IAAa9F,GAAG,CAACsG,QAAjB,GAA4B,IAA5B,GAAmCtG,GAAG,CAACwN,UAAvL,EAAmM,eAAnM,EAAoNxN,GAAG,CAACsG,QAAxN;;AACA,sEAAmB,kBAAnB,EAAuCtG,GAAG,CAAC4f,SAA3C,EAAsD,0BAAtD,EAAkF5f,GAAG,CAAC2hB,eAAJ,EAAlF;AACH;AAAE,SANgD;AAM9CxhB,cAAM,EAAE;AAAEiG,YAAE,EAAE,IAAN;AAAYG,kBAAQ,EAAE,UAAtB;AAAkCD,kBAAQ,EAAE,UAA5C;AAAwD7M,cAAI,EAAE,MAA9D;AAAsEmC,eAAK,EAAE,OAA7E;AAAsF8lB,kBAAQ,EAAE,UAAhG;AAA4GtlB,qBAAW,EAAE,aAAzH;AAAwIwlB,2BAAiB,EAAE,mBAA3J;AAAgL5T,6BAAmB,EAAE,CAAC,kBAAD,EAAqB,qBAArB;AAArM,SANsC;AAM8M3N,gBAAQ,EAAE,CAAC,UAAD,CANxN;AAMsOwH,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAEC,iBAAO,EAAE,0DAAAY,mBAAX;AAAgCX,qBAAW,EAAE6W;AAA7C,SAAD,CAA1B,CAAD,EAAuF,wEAAvF,EAA0H,kEAA1H;AANhP,OAAzB,CAA9B;;AAOAA,eAAQ,CAACplB,cAAT,GAA0B;AAAA,eAAM,CAC5B;AAAEC,cAAI,EAAE,2CAAAkB;AAAR,SAD4B,EAE5B;AAAElB,cAAI,EAAE,mDAAAC;AAAR,SAF4B,EAG5B;AAAED,cAAI,EAAE,4CAAAooB,SAAR;AAAmBvhB,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAA8G;AAAR,WAAD,EAAqB;AAAE9G,gBAAI,EAAE,2CAAAqoB;AAAR,WAArB;AAA/B,SAH4B,EAI5B;AAAEroB,cAAI,EAAE,4CAAAsoB,MAAR;AAAgBzhB,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAA8G;AAAR,WAAD;AAA5B,SAJ4B,EAK5B;AAAE9G,cAAI,EAAE,4CAAAuoB,kBAAR;AAA4B1hB,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAA8G;AAAR,WAAD;AAAxC,SAL4B,EAM5B;AAAE9G,cAAI,EAAE,oDAAAwoB;AAAR,SAN4B,EAO5B;AAAExoB,cAAI,EAAE6C,SAAR;AAAmBgE,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAA8G;AAAR,WAAD,EAAqB;AAAE9G,gBAAI,EAAE,2CAAAqoB;AAAR,WAArB,EAAqC;AAAEroB,gBAAI,EAAE,2CAAA+G,MAAR;AAAgB1G,gBAAI,EAAE,CAACukB,yBAAD;AAAtB,WAArC;AAA/B,SAP4B,EAQ5B;AAAE5kB,cAAI,EAAE,qDAAA5C;AAAR,SAR4B,EAS5B;AAAE4C,cAAI,EAAE,2CAAAE;AAAR,SAT4B,EAU5B;AAAEF,cAAI,EAAE,0DAAA6Q,YAAR;AAAsBhK,oBAAU,EAAE,CAAC;AAAE7G,gBAAI,EAAE,2CAAA8G;AAAR,WAAD,EAAqB;AAAE9G,gBAAI,EAAE,2CAAA+G,MAAR;AAAgB1G,gBAAI,EAAE,CAAC,0DAAAuQ,cAAD;AAAtB,WAArB;AAAlC,SAV4B,CAAN;AAAA,OAA1B;;AAYAuU,eAAQ,CAAChkB,cAAT,GAA0B;AACtB2L,gBAAQ,EAAE,CAAC;AAAE9M,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CADY;AAEtB2F,UAAE,EAAE,CAAC;AAAE3M,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CAFkB;AAGtBrE,mBAAW,EAAE,CAAC;AAAE3C,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CAHS;AAItB6F,gBAAQ,EAAE,CAAC;AAAE7M,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CAJY;AAKtBhH,YAAI,EAAE,CAAC;AAAEA,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CALgB;AAMtBmhB,yBAAiB,EAAE,CAAC;AAAEnoB,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CANG;AAOtBuN,2BAAmB,EAAE,CAAC;AAAEvU,cAAI,EAAE,2CAAAgH,KAAR;AAAe3G,cAAI,EAAE,CAAC,kBAAD;AAArB,SAAD,CAPC;AAQtB8B,aAAK,EAAE,CAAC;AAAEnC,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CARe;AAStBihB,gBAAQ,EAAE,CAAC;AAAEjoB,cAAI,EAAE,2CAAAgH;AAAR,SAAD,CATY;AAUtB6gB,qBAAa,EAAE,CAAC;AAAE7nB,cAAI,EAAE,2CAAAiH,YAAR;AAAsB5G,cAAI,EAAE,CAAC,OAAD,EAAU,CAAC,MAAD,CAAV;AAA5B,SAAD,EAAqD;AAAEL,cAAI,EAAE,2CAAAiH,YAAR;AAAsB5G,cAAI,EAAE,CAAC,MAAD,EAAS,CAAC,OAAD,CAAT;AAA5B,SAArD,CAVO;AAWtB2nB,gBAAQ,EAAE,CAAC;AAAEhoB,cAAI,EAAE,2CAAAiH,YAAR;AAAsB5G,cAAI,EAAE,CAAC,OAAD;AAA5B,SAAD;AAXY,OAA1B;;AAaA,OAAC,YAAY;AAAE,SAAC,OAAOF,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBglB,SAAzB,EAAmC,CAAC;AAC9FnlB,cAAI,EAAE,2CAAAqB,SADwF;AAE9FhB,cAAI,EAAE,CAAC;AACCiB,oBAAQ,6HADT;AAGCsF,oBAAQ,EAAE,UAHX;AAICM,gBAAI,EAAE;AACF;AACpB;AACA;AACoB,uBAAS,mDAJP;AAKF,0CAA4B,WAL1B;AAMF;AACA;AACA,2BAAa,IARX;AASF;AACA;AACA;AACA,yCAA2B,aAZzB;AAaF,4BAAc,UAbZ;AAcF,4BAAc,UAdZ;AAeF,iCAAmB,sCAfjB;AAgBF,kDAAoC,mBAhBlC;AAiBF;AACA;AACA,qCAAuB,yCAnBrB;AAoBF,sCAAwB;AApBtB,aAJP;AA0BCsH,qBAAS,EAAE,CAAC;AAAEH,qBAAO,EAAE,0DAAAY,mBAAX;AAAgCX,yBAAW,EAAE6W;AAA7C,aAAD;AA1BZ,WAAD;AAFwF,SAAD,CAAnC,EA8B1D,YAAY;AAAE,iBAAO,CAAC;AAAEnlB,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAyD;AAAEA,gBAAI,EAAE,qDAAR;AAA0B6G,sBAAU,EAAE,CAAC;AAC7G7G,kBAAI,EAAE,2CAAA8G;AADuG,aAAD,EAE7G;AACC9G,kBAAI,EAAE,2CAAAqoB;AADP,aAF6G;AAAtC,WAAzD,EAIX;AAAEroB,gBAAI,EAAE,kDAAR;AAAuB6G,sBAAU,EAAE,CAAC;AACtC7G,kBAAI,EAAE,2CAAA8G;AADgC,aAAD;AAAnC,WAJW,EAMX;AAAE9G,gBAAI,EAAE,8DAAR;AAAmC6G,sBAAU,EAAE,CAAC;AAClD7G,kBAAI,EAAE,2CAAA8G;AAD4C,aAAD;AAA/C,WANW,EAQX;AAAE9G,gBAAI,EAAE;AAAR,WARW,EAQyB;AAAEA,gBAAI,EAAE6C,SAAR;AAAmBgE,sBAAU,EAAE,CAAC;AACtE7G,kBAAI,EAAE,2CAAA8G;AADgE,aAAD,EAEtE;AACC9G,kBAAI,EAAE,2CAAAqoB;AADP,aAFsE,EAItE;AACCroB,kBAAI,EAAE,2CAAA+G,MADP;AAEC1G,kBAAI,EAAE,CAACukB,yBAAD;AAFP,aAJsE;AAA/B,WARzB,EAeX;AAAE5kB,gBAAI,EAAE;AAAR,WAfW,EAeuB;AAAEA,gBAAI,EAAE;AAAR,WAfvB,EAegD;AAAEA,gBAAI,EAAE,sEAAR;AAA6B6G,sBAAU,EAAE,CAAC;AACvG7G,kBAAI,EAAE,2CAAA8G;AADiG,aAAD,EAEvG;AACC9G,kBAAI,EAAE,2CAAA+G,MADP;AAEC1G,kBAAI,EAAE,CAAC,0DAAAuQ,cAAD;AAFP,aAFuG;AAAzC,WAfhD,CAAP;AAoBF,SAlD8C,EAkD5C;AAAEjE,YAAE,EAAE,CAAC;AACjB3M,gBAAI,EAAE,2CAAAgH;AADW,WAAD,CAAN;AAEV8F,kBAAQ,EAAE,CAAC;AACX9M,gBAAI,EAAE,2CAAAgH;AADK,WAAD,CAFA;AAIV6F,kBAAQ,EAAE,CAAC;AACX7M,gBAAI,EAAE,2CAAAgH;AADK,WAAD,CAJA;AAMVhH,cAAI,EAAE,CAAC;AACPA,gBAAI,EAAE,2CAAAgH;AADC,WAAD,CANI;AAQV7E,eAAK,EAAE,CAAC;AACRnC,gBAAI,EAAE,2CAAAgH;AADE,WAAD,CARG;AAUVihB,kBAAQ,EAAE,CAAC;AACXjoB,gBAAI,EAAE,2CAAAgH;AADK,WAAD,CAVA;AAalB;AACA;AACA;AACA;;AACA;AACA;AACA;AACA6gB,uBAAa,EAAE,CAAC;AACR7nB,gBAAI,EAAE,2CAAAiH,YADE;AAER5G,gBAAI,EAAE,CAAC,OAAD,EAAU,CAAC,MAAD,CAAV;AAFE,WAAD,EAGR;AACCL,gBAAI,EAAE,2CAAAiH,YADP;AAEC5G,gBAAI,EAAE,CAAC,MAAD,EAAS,CAAC,OAAD,CAAT;AAFP,WAHQ,CApBG;AA2BlB;AACA;AACA;AACA;AACA;AACA2nB,kBAAQ,EAAE,CAAC;AACHhoB,gBAAI,EAAE,2CAAAiH,YADH;AAEH5G,gBAAI,EAAE,CAAC,OAAD;AAFH,WAAD,CAhCQ;AAmCVsC,qBAAW,EAAE,CAAC;AACd3C,gBAAI,EAAE,2CAAAgH;AADQ,WAAD,CAnCH;AAqCVmhB,2BAAiB,EAAE,CAAC;AACpBnoB,gBAAI,EAAE,2CAAAgH;AADc,WAAD,CArCT;AAuCVuN,6BAAmB,EAAE,CAAC;AACtBvU,gBAAI,EAAE,2CAAAgH,KADgB;AAEtB3G,gBAAI,EAAE,CAAC,kBAAD;AAFgB,WAAD;AAvCX,SAlD4C,CAAnD;AA4FC,OA5FhB;AA8FA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMooB,e;;;;AAENA,qBAAc,CAACjpB,IAAf,GAAsB,SAASkpB,sBAAT,CAAgChpB,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAI+oB,eAAV,GAAP;AAAqC,OAAhG;;AACAA,qBAAc,CAACphB,IAAf,GAAsB,aAAc,+DAAwB;AAAErH,YAAI,EAAEyoB;AAAR,OAAxB,CAApC;AACAA,qBAAc,CAACnhB,IAAf,GAAsB,aAAc,+DAAwB;AAAEkH,iBAAS,EAAE,CAAC,oDAAAga,iBAAD,CAAb;AAAkCjhB,eAAO,EAAE,CAAC,CAC5F,qDAAAJ,eAD4F,EAE5F,0DAAAqR,kBAF4F,EAG5F,oDAAAjN,eAH4F,CAAD,EAI5F,qDAAApE,eAJ4F,EAK/F;AACA;AACA,kEAAAqR,kBAP+F;AAA3C,OAAxB,CAApC;;AAQA,OAAC,YAAY;AAAE,SAAC,OAAOrY,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBsoB,eAAzB,EAAyC,CAAC;AACpGzoB,cAAI,EAAE,2CAAAyH,QAD8F;AAEpGpH,cAAI,EAAE,CAAC;AACCqH,wBAAY,EAAE,CAACyd,SAAD,EAAWjB,oBAAX,CADf;AAEC3c,mBAAO,EAAE,CACL,qDAAAJ,eADK,EAEL,0DAAAqR,kBAFK,EAGL,oDAAAjN,eAHK,CAFV;AAOC5D,mBAAO,EAAE,CACL,qDAAAR,eADK,EAEL;AACA;AACA,sEAAAqR,kBAJK,EAKL2M,SALK,EAMLjB,oBANK,CAPV;AAeC1V,qBAAS,EAAE,CAAC,oDAAAga,iBAAD;AAfZ,WAAD;AAF8F,SAAD,CAAzC,EAmB1D,IAnB0D,EAmBpD,IAnBoD,CAAnD;AAmBO,OAnBtB;;AAoBA,OAAC,YAAY;AAAE,SAAC,OAAO5gB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B6gB,eAA1B,EAA0C;AAAE/gB,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAACyd,SAAD,EAAWjB,oBAAX,CAAP;AAAyC,WAAvE;AAAyE3c,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,qDAAAJ,eAAD,EAC3M,0DAAAqR,kBAD2M,EAE3M,oDAAAjN,eAF2M,CAAP;AAEjL,WAFiF;AAE/E5D,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,qDAAAR,eAAD,EACnD;AACA;AACA,sEAAAqR,kBAHmD,EAG/B2M,SAH+B,EAGrBjB,oBAHqB,CAAP;AAGS;AAL+C,SAA1C,CAAnD;AAKoD,OALnE;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA","file":"default-node_modules_angular_material___ivy_ngcc___fesm2015_card_js-node_modules_angular_mate-93e209-es5.js","sourcesContent":["import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgZone, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            }\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nAutofillMonitor.ɵprov = i0.ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._isViewInited = false;\n        /** Handles `focus` and `blur` events. */\n        this._handleFocusEvent = (event) => {\n            this._hasFocus = event.type === 'focus';\n        };\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() { return this._minRows; }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() { return this._maxRows; }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    get placeholder() { return this._textareaElement.placeholder; }\n    set placeholder(value) {\n        this._cachedPlaceholderHeight = undefined;\n        this._textareaElement.placeholder = value;\n        this._cacheTextareaPlaceholderHeight();\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n                this._textareaElement.addEventListener('focus', this._handleFocusEvent);\n                this._textareaElement.addEventListener('blur', this._handleFocusEvent);\n            });\n            this._isViewInited = true;\n            this.resizeToFitContent(true);\n        }\n    }\n    ngOnDestroy() {\n        this._textareaElement.removeEventListener('focus', this._handleFocusEvent);\n        this._textareaElement.removeEventListener('blur', this._handleFocusEvent);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        this._textareaElement.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n        const element = this._textareaElement;\n        const previousMargin = element.style.marginBottom || '';\n        const isFirefox = this._platform.FIREFOX;\n        const needsMarginFiller = isFirefox && this._hasFocus;\n        const measuringClass = isFirefox ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n        // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n        // work around it by assigning a temporary margin with the same height as the `textarea` so that\n        // it occupies the same amount of space. See #23233.\n        if (needsMarginFiller) {\n            element.style.marginBottom = `${element.clientHeight}px`;\n        }\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        element.classList.add(measuringClass);\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const scrollHeight = element.scrollHeight - 4;\n        element.classList.remove(measuringClass);\n        if (needsMarginFiller) {\n            element.style.marginBottom = previousMargin;\n        }\n        return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n        if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n            return;\n        }\n        if (!this.placeholder) {\n            this._cachedPlaceholderHeight = 0;\n            return;\n        }\n        const value = this._textareaElement.value;\n        this._textareaElement.value = this._textareaElement.placeholder;\n        this._cachedPlaceholderHeight = this._measureScrollHeight();\n        this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        this._cacheTextareaPlaceholderHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const scrollHeight = this._measureScrollHeight();\n        const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && this._hasFocus) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"], placeholder: \"placeholder\" }, exportAs: [\"cdkTextareaAutosize\"] });\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    placeholder: [{ type: Input }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], placeholder: [{\n            type: Input\n        }], \n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵfac = function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); };\nTextFieldModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[PlatformModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill, CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill, CdkTextareaAutosize]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatCardModule {\n}\nMatCardModule.ɵfac = function MatCardModule_Factory(t) { return new (t || MatCardModule)(); };\nMatCardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Attribute, ElementRef, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, Optional, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor(ariaLive, elementRef) {\n        this.id = `mat-error-${nextUniqueId$2++}`;\n        // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n        // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n        if (!ariaLive) {\n            elementRef.nativeElement.setAttribute('aria-live', 'polite');\n        }\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(ɵngcc0.ɵɵinjectAttribute('aria-live'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatError.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"aria-atomic\", \"true\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_ERROR, useExisting: MatError }])] });\nMatError.ctorParameters = () => [\n    { type: String, decorators: [{ type: Attribute, args: ['aria-live',] }] },\n    { type: ElementRef }\n];\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    '[attr.id]': 'id',\n                    'aria-atomic': 'true'\n                },\n                providers: [{ provide: MAT_ERROR, useExisting: MatError }]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-live']\n            }] }, { type: ɵngcc0.ElementRef }]; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-5px)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-hint-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: _MAT_HINT, useExisting: MatHint }])] });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                },\n                providers: [{ provide: _MAT_HINT, useExisting: MatHint }]\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_PREFIX, useExisting: MatPrefix }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]',\n                providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SUFFIX, useExisting: MatSuffix }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]',\n                providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nconst _MatFormFieldBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldBase {\n    constructor(elementRef, _changeDetectorRef, \n    /**\n     * @deprecated `_labelOptions` parameter no longer being used. To be removed.\n     * @breaking-change 12.0.0\n     */\n    // Use `ElementRef` here so Angular has something to inject.\n    _labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId++}`;\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() { return this._appearance; }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /** Text for the form field hint. */\n    get hintLabel() { return this._hintLabel; }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat());\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 7);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 40, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MAT_ERROR, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [_MAT_HINT, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MAT_PREFIX, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MAT_SUFFIX, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MAT_ERROR, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [_MAT_HINT, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MAT_PREFIX, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MAT_SUFFIX, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); };\nMatFormFieldModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, ErrorHandler, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /** Registered icon resolver functions. */\n        this._resolvers = [];\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', cleanLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', cleanLiteral, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, className = alias) {\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    setDefaultFontSetClass(className) {\n        this._defaultFontSetClass = className;\n        return this;\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString('<svg></svg>');\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        var _a;\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = (_a = options === null || options === void 0 ? void 0 : options.withCredentials) !== null && _a !== void 0 ? _a : false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result) ?\n                    new SvgIconConfig(result.url, null, result.options) :\n                    new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler)); };\nMatIconRegistry.ɵprov = i0.ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DomSanitizer), i0.ɵɵinject(i3.DOCUMENT, 8), i0.ɵɵinject(i0.ErrorHandler)); }, token: MatIconRegistry, providedIn: \"root\" });\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler }]; }, null); })();\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nconst _MatIconBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => _location ? (_location.pathname + _location.search) : ''\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = attr => `[${attr}]`;\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(ɵ0).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() { return this._svgIcon; }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() { return this._fontSet; }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() { return this._fontIcon; }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return parts;\n            default: throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        const styleTags = svg.querySelectorAll('style');\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler)); };\nMatIcon.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 7, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"data-mat-icon-type\", ctx._usingFontIcon() ? \"font\" : \"svg\")(\"data-mat-icon-name\", ctx._svgName || ctx.fontIcon)(\"data-mat-icon-namespace\", ctx._svgNamespace || ctx.fontSet);\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                    '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                    '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler }]; }, { inline: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵfac = function MatIconModule_Factory(t) { return new (t || MatIconModule)(); };\nMatIconModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError, ɵ0 };\n\n//# sourceMappingURL=icon.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nimport * as ɵngcc5 from '@angular/material/form-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    get matAutosizeMinRows() { return this.minRows; }\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    get matAutosizeMaxRows() { return this.maxRows; }\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    get matAutosize() { return this.enabled; }\n    set matAutosize(value) { this.enabled = value; }\n    get matTextareaAutosize() { return this.enabled; }\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = /*@__PURE__*/ function () { let ɵMatTextareaAutosize_BaseFactory; return function MatTextareaAutosize_Factory(t) { return (ɵMatTextareaAutosize_BaseFactory || (ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize)))(t || MatTextareaAutosize); }; }();\nMatTextareaAutosize.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nconst _MatInputBase = mixinErrorState(class {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n});\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputBase {\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    const el = event.target;\n                    // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n                    // indicate different things. If the value is 0, it means that the caret is at the start\n                    // of the input, whereas a value of `null` means that the input doesn't support\n                    // manipulating the selection range. Inputs that don't support setting the selection range\n                    // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n                    // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n                    if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        this._isInFormField = !!_formField;\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() { return this._id; }\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Input type of the element. */\n    get type() { return this._type; }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._inputValueAccessor.value; }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() { return this._readonly; }\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder ?\n                element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n    /** Whether the form control is a native select that is displayed inline. */\n    _isInlineSelect() {\n        const element = this._elementRef.nativeElement;\n        return this._isNativeSelect && (element.multiple || element.size > 1);\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatInput.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 11, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"data-placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-invalid\", ctx.empty && ctx.required ? null : ctx.errorState)(\"aria-required\", ctx.required);\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer)(\"mat-native-select-inline\", ctx._isInlineSelect());\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"] }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    userAriaDescribedBy: [{ type: Input, args: ['aria-describedby',] }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    // At the time of writing, we have a lot of customer tests that look up the input based on its\n                    // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                    // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                    '[attr.data-placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[class.mat-native-select-inline]': '_isInlineSelect()',\n                    // Only mark the input as invalid for assistive technology if it has a value since the\n                    // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                    '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n                    '[attr.aria-required]': 'required'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], userAriaDescribedBy: [{\n            type: Input,\n            args: ['aria-describedby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵfac = function MatInputModule_Factory(t) { return new (t || MatInputModule)(); };\nMatInputModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n            MatCommonModule,\n        ], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput, MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule,\n        MatCommonModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule, MatInput, MatTextareaAutosize]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map"]}